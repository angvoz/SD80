/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCSizeofExpressionParserprs implements lpg.lpgjavaruntime.ParseTable, GCCSizeofExpressionParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3,1,1,
            4,4,3,3,2,2,8,1,0,1,
            1,2,2,2,2,2,2,2,2,2,
            1,4,1,3,3,3,1,3,3,1,
            3,3,1,3,3,3,3,1,3,3,
            1,3,1,3,1,3,1,3,1,3,
            1,5,1,3,3,3,3,3,3,3,
            3,3,3,3,1,1,2,1,0,1,
            3,1,1,1,1,1,1,1,1,3,
            4,3,2,4,1,2,1,1,1,2,
            5,7,5,1,0,7,5,9,8,3,
            2,2,2,3,2,4,2,2,2,2,
            2,1,1,1,1,2,1,2,2,2,
            1,2,2,1,2,2,1,2,2,1,
            2,2,1,3,1,3,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,6,8,0,
            0,1,1,3,3,3,0,1,0,1,
            2,4,2,1,1,1,3,1,1,2,
            3,7,8,0,1,0,1,3,1,3,
            1,1,1,1,1,1,3,1,1,1,
            1,1,3,1,2,2,1,5,3,1,
            3,5,1,3,1,3,2,4,3,5,
            4,6,6,3,5,1,2,3,4,5,
            0,1,2,1,3,1,1,3,2,1,
            1,1,1,2,1,2,3,1,1,1,
            3,1,2,2,2,3,4,5,1,7,
            3,0,0,1,1,3,3,4,1,1,
            2,3,2,3,2,1,0,1,2,1,
            1,1,1,1,2,4,3,6,2,4,
            1,1,1,1,2,6,3,1,3,1,
            4,0,1,1,1,3,1,0,4,3,
            1,2,1,3,4,4,6,1,0,1,
            3,1,3,0,1,4,5,2,2,2,
            1,2,2,2,1,1,2,2,3,2,
            2,3,1,1,1,1,1,1,1,2,
            5,3,1,1,-38,0,0,0,0,0,
            0,0,0,0,0,0,-2,0,0,0,
            0,0,0,0,0,0,0,0,0,-31,
            0,0,0,-156,-32,0,0,0,0,0,
            -157,0,-4,-115,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-76,-114,0,0,0,0,0,-71,0,
            0,0,0,0,-149,-145,0,-117,-16,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-18,0,
            -111,0,0,0,0,0,0,0,0,0,
            0,0,0,-19,-136,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-20,-116,0,0,0,0,0,0,
            0,0,0,0,0,-126,-142,0,0,0,
            0,-198,-125,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-21,0,
            0,0,0,0,0,-22,-57,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-214,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-161,-35,-127,0,0,0,0,-181,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-204,0,0,
            0,0,0,0,0,0,-36,0,-23,0,
            -148,0,-53,0,0,0,0,0,0,0,
            0,0,0,0,-69,0,0,0,0,-129,
            0,0,0,0,0,-24,0,-54,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-191,0,-74,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-25,0,-77,-26,0,0,0,0,
            0,-223,0,0,-183,0,0,0,0,0,
            0,0,0,0,0,0,-180,0,0,0,
            0,0,-215,0,0,0,0,0,0,-200,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-130,0,0,
            0,0,0,0,-27,-139,-70,0,-131,0,
            0,0,-210,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -119,0,0,0,0,0,0,-3,0,0,
            0,0,0,0,0,0,0,0,0,-207,
            0,0,0,0,0,0,-138,-128,-28,0,
            0,0,-184,0,-79,0,-80,0,0,0,
            -140,-164,-81,-122,0,0,0,0,0,-141,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-187,-143,-167,0,0,-118,
            0,0,0,0,0,0,0,0,-229,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-151,0,0,-171,
            0,0,0,-29,0,0,0,0,0,0,
            0,0,0,0,0,-168,0,0,0,0,
            0,0,-172,-174,0,0,0,0,-58,0,
            0,0,0,0,0,0,0,0,0,0,
            -194,0,0,0,0,0,0,0,0,-90,
            0,0,0,-59,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-188,-199,0,0,0,0,0,-60,0,
            0,0,0,0,0,0,0,0,0,0,
            -220,0,0,0,0,0,-201,0,-212,0,
            0,0,0,-61,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-217,-231,-227,0,0,0,-62,0,
            0,0,0,0,0,0,0,0,0,0,
            -226,0,0,0,0,0,-203,0,0,0,
            0,0,0,-63,0,0,0,0,0,0,
            0,0,0,0,0,-94,0,0,0,0,
            0,-221,-228,-95,-96,0,0,0,-64,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-230,0,0,0,
            0,0,0,-65,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-238,-97,-98,-99,0,0,0,-66,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-100,-247,-101,-102,
            0,0,0,-67,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-190,-103,-104,-105,0,0,0,-68,0,
            0,0,0,0,0,0,0,0,0,0,
            -192,0,0,0,0,0,-92,0,0,0,
            0,0,0,-44,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-193,0,
            -153,-106,-33,0,0,-240,-107,-108,0,0,
            0,0,0,0,0,-162,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-155,0,0,0,0,0,
            -109,0,0,0,0,0,0,0,-110,0,
            -113,0,-163,0,0,0,0,0,0,0,
            0,0,0,0,-124,0,0,0,0,0,
            -134,-137,-146,-150,0,0,0,-185,0,0,
            0,0,0,0,0,0,0,0,0,-154,
            0,0,0,0,0,-159,-173,-175,-182,0,
            0,0,-213,0,0,0,0,0,0,0,
            0,0,0,0,-121,0,0,0,0,0,
            -186,-208,-209,0,0,0,0,-222,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-233,-241,0,0,0,
            0,-123,-224,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-232,0,0,
            0,0,0,0,0,0,0,0,0,-196,
            0,0,0,0,0,0,0,-211,0,0,
            0,0,-243,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-135,0,0,
            0,0,0,0,0,0,0,0,0,-197,
            0,0,0,0,0,0,0,0,0,0,
            0,-158,0,0,-160,-178,-189,0,0,0,
            0,0,-202,0,0,0,0,0,0,0,
            0,0,0,-219,0,0,0,0,0,0,
            0,0,0,0,0,0,-147,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -39,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-225,0,-239,
            0,-56,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -144,0,0,0,0,0,0,0,0,0,
            -179,0,0,-8,0,0,0,0,0,0,
            0,-166,0,-9,0,0,0,0,0,0,
            0,0,-1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-242,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-73,0,
            0,0,0,0,0,0,0,0,-236,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -5,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-244,0,0,0,0,-51,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-206,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-50,0,0,0,0,
            0,0,0,0,0,0,0,-78,0,-52,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-120,-37,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-34,0,
            0,0,0,0,0,0,0,0,-195,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-112,0,0,0,-237,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-45,0,0,
            0,0,0,0,0,0,0,0,-46,0,
            0,0,0,0,0,0,0,0,0,-47,
            0,0,0,0,0,0,0,0,0,0,
            -82,-48,0,0,0,0,0,0,0,0,
            0,-6,0,0,0,0,0,0,0,0,
            0,0,-84,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-170,
            0,0,0,0,-87,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-89,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-91,0,
            0,0,-169,0,0,0,0,0,0,0,
            0,0,-234,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-49,0,0,0,0,0,
            0,0,0,0,-75,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -40,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-165,0,0,0,
            0,0,0,0,-10,0,0,0,0,0,
            0,0,0,0,0,0,-11,0,0,0,
            0,0,0,0,0,0,0,0,0,-12,
            0,0,0,0,0,0,0,-13,0,0,
            0,0,0,0,0,-41,0,0,0,0,
            0,0,0,-42,0,0,0,0,0,0,
            0,-43,0,0,0,0,0,0,0,-72,
            0,0,0,0,0,0,0,-88,0,0,
            0,-235,-7,0,0,0,0,0,0,0,
            0,0,-17,-55,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-14,0,
            0,0,0,0,0,-15,0,0,0,0,
            0,0,0,-30,0,0,0,0,0,0,
            -83,0,0,0,0,0,0,0,0,-85,
            0,0,0,-86,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-152,0,
            0,-93,0,0,0,0,0,0,-133,0,
            0,0,0,0,0,-177,0,0,0,0,
            -245,0,-216,-218,0,0,0,0,0,0,
            0,0,0,0,0,0,-132,-205,0,0,
            0,0,-176,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-246,0,0,0,0,
            -248,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            98,12,29,29,25,25,44,44,76,76,
            1,1,2,2,2,2,3,3,3,4,
            5,5,5,5,5,5,5,5,58,58,
            77,6,6,6,6,6,6,6,6,6,
            6,7,7,8,8,8,8,9,9,9,
            10,10,10,11,11,11,11,11,13,13,
            13,14,14,15,15,16,16,17,17,22,
            22,23,23,24,24,24,24,24,24,24,
            24,24,24,24,24,117,52,45,99,99,
            80,80,46,118,118,118,118,118,118,118,
            119,119,119,120,120,125,125,126,126,121,
            121,122,122,122,128,128,123,123,123,123,
            124,124,124,124,124,127,127,30,30,30,
            30,30,32,32,32,86,86,81,81,81,
            81,82,82,82,83,83,83,84,84,84,
            85,85,85,129,129,130,130,131,33,35,
            35,35,35,35,59,60,60,60,60,60,
            60,60,60,60,60,60,60,68,65,65,
            100,101,69,69,66,66,66,70,87,87,
            88,88,71,71,71,54,102,102,89,72,
            72,72,67,67,103,90,90,91,91,73,
            73,27,28,28,28,34,47,47,36,36,
            36,36,39,39,41,37,37,38,42,42,
            132,132,40,133,133,104,104,31,31,31,
            31,31,31,31,31,31,92,55,55,55,
            55,43,62,62,61,61,61,63,63,56,
            56,105,105,78,78,64,64,64,48,48,
            48,49,50,50,50,51,51,51,51,53,
            53,53,57,106,79,79,79,79,74,107,
            108,108,109,109,110,110,134,134,135,135,
            136,136,136,136,138,138,137,137,137,139,
            139,18,18,18,26,26,19,19,111,111,
            93,93,93,94,94,112,112,95,95,20,
            20,113,113,96,96,96,21,140,141,141,
            142,142,143,143,143,144,144,144,6,6,
            75,97,97,97,30,127,32,131,131,131,
            89,89,89,103,100,101,43,70,109,109,
            114,115,74,98,98,1,930,16,20,17,
            449,799,43,484,469,539,503,19,619,546,
            683,646,745,356,311,312,313,686,73,90,
            187,30,133,211,721,187,30,135,132,134,
            158,402,1321,144,856,19,16,20,17,449,
            799,43,484,469,539,503,746,619,546,683,
            646,745,235,1019,137,164,686,73,811,421,
            141,144,147,150,2201,448,392,177,352,398,
            351,315,311,312,313,413,1738,1901,1923,1945,
            1967,1177,707,273,356,311,312,313,21,28,
            329,37,1989,133,211,252,211,24,135,132,
            134,158,23,485,110,678,19,16,20,17,
            449,799,43,484,469,539,503,411,619,546,
            683,646,745,412,421,137,164,686,73,279,
            517,141,144,147,150,2201,1054,1092,1299,845,
            290,351,501,803,2249,695,369,1738,1901,1923,
            1945,1967,1177,239,315,311,312,313,284,52,
            820,332,1296,1989,253,211,69,798,19,16,
            20,17,449,41,43,484,469,539,503,285,
            619,546,683,1241,404,768,19,16,20,17,
            449,799,43,484,469,539,503,411,619,546,
            683,646,745,352,690,187,185,686,73,279,
            557,19,16,20,17,449,799,43,484,469,
            539,503,411,619,546,683,646,745,819,2140,
            252,211,686,73,279,319,1297,690,284,242,
            1474,501,1296,798,19,16,20,17,449,41,
            43,484,469,539,503,690,619,546,1155,285,
            187,184,18,286,1021,663,85,1296,798,19,
            16,20,17,449,41,43,484,469,539,503,
            1249,619,1202,1111,287,498,19,16,20,17,
            449,799,43,484,469,539,503,448,619,546,
            683,646,745,174,193,620,338,686,73,504,
            253,211,187,1322,237,708,19,16,20,17,
            449,799,43,484,469,539,503,204,619,546,
            683,646,745,1122,318,1297,274,686,73,279,
            885,19,16,20,17,449,799,43,484,469,
            539,503,903,619,546,683,646,745,861,1290,
            253,211,686,73,327,7,352,690,372,187,
            186,27,1296,738,19,16,20,17,449,799,
            43,484,469,539,503,208,619,546,683,646,
            745,690,22,252,211,686,73,279,798,19,
            16,20,17,449,799,43,484,469,539,503,
            795,619,546,683,646,745,271,998,1093,992,
            686,73,90,187,293,95,288,417,517,583,
            1296,421,421,554,1089,325,315,311,312,313,
            527,19,16,20,17,449,799,43,484,469,
            539,503,1003,619,546,683,646,745,1216,317,
            241,240,686,73,812,626,690,664,1052,238,
            588,19,16,20,17,449,41,35,413,885,
            19,16,20,17,449,799,43,484,469,539,
            503,277,619,546,683,646,745,690,226,244,
            690,686,73,327,798,19,16,20,17,449,
            799,43,484,469,539,503,988,619,546,683,
            646,745,336,120,539,278,686,73,91,798,
            19,16,20,17,449,799,43,484,469,539,
            503,690,619,546,683,646,745,225,953,334,
            912,686,73,84,798,19,16,20,17,449,
            799,43,484,469,539,503,223,619,546,683,
            646,745,204,690,326,291,686,73,83,798,
            19,16,20,17,449,799,43,484,469,539,
            503,795,619,546,683,646,745,690,316,187,
            295,686,73,82,798,19,16,20,17,449,
            799,43,484,469,539,503,281,619,546,683,
            646,745,335,282,525,690,686,73,81,798,
            19,16,20,17,449,799,43,484,469,539,
            503,721,619,546,683,646,745,204,321,1102,
            228,686,73,80,798,19,16,20,17,449,
            799,43,484,469,539,503,290,619,546,683,
            646,745,204,476,297,391,686,73,79,798,
            19,16,20,17,449,799,43,484,469,539,
            503,178,619,546,683,646,745,204,232,1206,
            192,686,73,78,798,19,16,20,17,449,
            799,43,484,469,539,503,202,619,546,683,
            646,745,204,532,592,621,686,73,77,798,
            19,16,20,17,449,799,43,484,469,539,
            503,179,619,546,683,646,745,71,63,363,
            418,686,73,76,798,19,16,20,17,449,
            799,43,484,469,539,503,203,619,546,683,
            646,745,352,683,713,251,686,73,75,798,
            19,16,20,17,449,799,43,484,469,539,
            503,421,619,546,683,646,745,392,177,252,
            211,686,73,74,798,19,16,20,17,449,
            41,43,484,469,1055,356,311,312,313,421,
            242,37,261,30,133,211,204,474,711,136,
            132,134,158,2266,713,778,798,19,16,20,
            17,449,799,43,484,469,539,503,243,619,
            546,683,646,745,280,37,138,164,686,73,
            1171,387,142,145,148,151,2201,1551,88,173,
            1128,615,352,798,19,16,20,17,449,799,
            43,484,469,539,503,296,619,546,683,646,
            745,947,712,408,831,686,73,1199,798,19,
            16,20,17,449,41,43,484,469,539,503,
            807,619,546,683,646,745,811,964,816,331,
            686,92,747,798,19,16,20,17,449,41,
            43,484,469,539,503,699,619,546,683,646,
            745,516,467,839,1398,686,92,1487,798,19,
            16,20,17,449,41,43,484,469,539,503,
            276,619,546,683,646,745,786,600,2485,1518,
            686,92,448,798,19,16,20,17,449,41,
            43,484,469,539,503,2485,619,546,683,646,
            745,2485,2485,2485,210,686,92,330,798,19,
            16,20,17,449,41,43,484,469,539,503,
            699,619,546,683,646,745,2485,2485,1115,1520,
            686,92,2273,798,19,16,20,17,449,41,
            43,484,469,539,503,229,619,546,683,646,
            745,2485,2485,2485,200,686,92,292,798,19,
            16,20,17,449,41,43,484,469,539,503,
            1076,619,546,683,646,745,2485,2485,331,201,
            686,72,37,2485,2485,1100,37,37,314,311,
            312,313,2485,37,952,445,433,1152,1705,565,
            2485,272,2485,2485,98,2274,217,847,219,896,
            221,222,227,1272,2485,2485,2152,584,267,685,
            432,270,314,311,312,313,2485,2485,2485,446,
            1639,798,19,16,20,17,449,41,43,1046,
            216,847,219,896,221,222,227,1541,421,2485,
            421,1346,798,19,16,20,17,449,41,43,
            484,469,539,503,2485,619,546,683,646,1208,
            2485,649,2485,257,2485,2485,1820,294,880,371,
            1273,1032,1322,1993,798,19,16,20,17,449,
            41,39,59,196,798,19,16,20,17,449,
            41,38,272,617,1789,2485,1004,216,847,219,
            896,221,222,227,2485,778,2485,275,261,265,
            685,432,270,272,2485,2485,181,2485,216,847,
            219,896,221,222,227,262,2485,2485,2152,921,
            265,685,432,270,314,311,312,313,86,2485,
            2485,2485,1639,2485,207,373,771,2485,2485,923,
            2485,2485,216,847,219,896,221,222,227,98,
            2485,790,1323,1346,2485,2485,259,314,311,312,
            313,2152,2485,2485,2485,433,2485,315,311,312,
            313,827,19,16,20,17,449,349,1820,2485,
            2485,387,1251,2485,2485,216,847,219,896,221,
            222,227,461,2485,1816,197,1346,798,19,16,
            20,17,449,41,43,484,469,539,1153,2485,
            314,311,312,313,2485,1032,1322,2485,433,2485,
            2485,2271,2485,2485,2485,2485,2485,2485,217,847,
            219,896,221,222,227,1272,798,19,16,20,
            17,449,41,43,484,469,539,503,447,1130,
            798,19,16,20,17,449,41,43,484,469,
            539,1154,2485,2485,2485,2485,356,311,312,313,
            2485,2485,967,143,2485,133,211,2485,2485,2485,
            140,132,134,158,446,1629,2485,2485,207,37,
            314,311,312,313,2485,2485,2485,2485,433,1082,
            2485,778,1541,2485,272,971,1323,139,164,2485,
            2485,446,2485,2485,2485,1251,2485,314,311,312,
            313,265,685,432,270,433,244,1816,257,1541,
            1125,2485,2485,846,86,1273,2485,264,2485,2485,
            2485,439,1251,2485,314,311,312,313,314,311,
            312,313,433,2485,1440,257,2346,272,2485,2485,
            846,2485,1273,2485,2485,2485,2485,2485,2485,1272,
            2485,2485,2485,2485,267,685,432,270,798,19,
            16,20,17,449,41,43,484,469,1103,798,
            19,16,20,17,449,41,43,484,469,1104,
            798,19,16,20,17,449,41,43,484,469,
            1105,75,798,19,16,20,17,449,41,43,
            484,1127,827,19,16,20,17,449,348,356,
            311,312,313,159,2485,2485,2485,2485,133,211,
            2485,2485,2485,143,132,134,158,2485,2485,2485,
            889,356,311,312,313,982,2485,2485,2485,2485,
            133,211,446,2485,2485,146,132,134,158,2485,
            2485,2485,2485,356,311,312,313,996,2485,2485,
            1541,2485,133,211,2485,2485,2485,149,132,134,
            158,2485,2485,2485,2485,356,311,312,313,1031,
            2485,2485,2485,923,133,211,258,2485,2485,152,
            132,134,158,1154,2485,2485,2485,356,311,312,
            313,314,311,312,313,2152,133,211,2485,433,
            2485,353,132,134,158,798,19,16,20,17,
            449,41,43,484,1129,232,1251,2485,2485,216,
            847,219,896,221,222,227,2485,1762,1440,2485,
            921,798,19,16,20,17,449,41,43,1054,
            275,2485,2485,2485,2485,2485,272,588,19,16,
            20,17,449,41,35,798,19,16,20,17,
            449,41,37,265,685,432,270,798,19,16,
            20,17,449,41,36,2485,245,2485,2485,771,
            798,19,16,20,17,449,41,35,798,19,
            16,20,17,449,41,34,798,19,16,20,
            17,449,41,46,798,19,16,20,17,449,
            41,45,798,19,16,20,17,449,41,44,
            646,19,16,20,17,449,41,42,931,2485,
            2485,2485,923,827,19,16,20,17,449,40,
            2485,2485,2485,37,37,2485,314,311,312,313,
            314,311,312,313,2287,375,778,2485,433,827,
            19,16,20,17,449,33,827,19,16,20,
            17,449,32,195,37,1251,2485,2485,2485,2485,
            2485,958,2485,2485,2485,2485,375,1682,86,86,
            299,2485,2485,2485,355,617,1207,1763,749,314,
            311,312,313,2485,195,2485,2485,516,314,311,
            312,313,314,311,312,313,798,2485,2485,86,
            798,584,2485,2485,2485,2485,617,2485,1763,1103,
            2485,738,827,19,16,20,17,449,1271,827,
            19,16,20,17,449,350,224,314,311,312,
            313,1136,635,750,336,2293,2485,2485,446,2485,
            585,2485,2485,2485,640,446,446,1046,280,314,
            311,312,313,1114,2485,2485,195,2351,2485,2485,
            446,523,2485,1541,195,315,311,312,313,2485,
            2485,315,311,312,313,2485,2485,2485,195,2485,
            608,2485,2485,2485,2485,2485,2485,2485,608,257,
            2485,2485,2485,2485,1005,2485,1273,190,2485,2485,
            2485,2485,608,2485,2485,190,1142,2485,2485,2485,
            1298,1148,2485,1027,2288,2485,2485,2485,2485,191,
            2485,1077,2288,2485,315,311,312,313,2485,315,
            311,312,313,2485,2485,2485,2485,1053,2485,0,
            1203,31,0,1779,31,0,805,127,0,807,
            127,0,813,127,0,805,128,0,807,128,
            0,813,128,0,805,129,0,807,129,0,
            813,129,0,805,183,0,807,183,0,813,
            183,0,183,187,0,805,182,0,807,182,
            0,813,182,0,182,187,0,805,130,0,
            807,130,0,813,130,0,805,131,0,807,
            131,0,813,131,0,19,177,0,805,354,
            0,807,354,0,813,354,0,1,805,0,
            1,807,0,1,813,0,349,350,0,1,
            2709,0,1,2720,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,0,7,8,9,
            10,11,12,13,14,15,16,17,0,19,
            20,21,22,23,24,25,26,0,28,0,
            30,31,32,33,34,6,0,10,11,39,
            40,41,42,43,44,45,46,47,48,49,
            50,0,52,53,54,0,27,2,0,1,
            2,6,0,8,6,10,11,0,0,14,
            0,16,17,18,0,69,18,3,4,5,
            10,11,14,9,0,27,12,13,37,38,
            35,36,37,38,0,21,2,0,1,2,
            3,4,5,85,30,31,32,33,34,0,
            55,56,57,58,59,60,61,8,63,0,
            65,66,67,68,69,6,71,72,73,74,
            75,76,77,78,79,80,81,82,83,0,
            0,2,0,0,2,6,27,8,6,10,
            11,0,68,14,35,16,17,18,0,62,
            18,3,4,5,0,56,57,9,0,27,
            12,13,0,0,35,36,37,38,35,21,
            0,1,2,3,4,5,0,1,30,31,
            32,33,34,7,55,56,57,58,59,60,
            61,29,63,0,65,66,67,68,69,6,
            71,72,73,74,75,76,77,78,79,80,
            81,82,83,0,1,0,3,4,5,6,
            7,0,9,2,0,12,13,6,15,36,
            67,0,62,0,21,2,3,4,5,18,
            0,8,18,30,31,32,33,34,27,36,
            0,18,39,40,41,42,43,44,45,46,
            47,48,49,50,14,52,53,54,0,0,
            1,0,3,4,5,6,7,6,9,0,
            0,12,13,70,15,0,0,8,0,1,
            21,3,4,5,8,7,65,66,27,30,
            31,32,33,34,19,36,35,67,39,40,
            41,42,43,44,45,46,47,48,49,50,
            0,52,53,54,0,0,1,0,3,4,
            5,6,7,0,9,56,57,12,13,70,
            15,0,56,57,0,1,21,3,4,5,
            9,7,0,12,13,30,31,32,33,34,
            0,36,10,11,39,40,41,42,43,44,
            45,46,47,48,49,50,0,52,53,54,
            0,0,1,63,3,4,5,0,7,2,
            9,0,1,12,13,70,15,0,7,72,
            73,0,21,16,17,18,0,0,2,18,
            0,30,31,32,33,34,6,37,38,0,
            39,40,41,42,43,44,45,46,47,48,
            49,50,35,52,53,54,0,0,1,3,
            4,5,55,6,68,9,55,0,12,13,
            0,1,2,3,4,5,0,21,71,58,
            59,60,61,0,27,0,30,31,32,33,
            34,6,65,66,64,39,40,41,42,43,
            44,45,46,47,48,49,50,0,1,2,
            0,1,27,6,7,8,0,10,11,9,
            35,14,15,16,17,0,19,20,21,22,
            23,24,25,26,0,28,0,1,2,63,
            6,0,6,7,8,62,10,11,0,1,
            14,15,16,17,6,19,20,21,22,23,
            24,25,26,0,28,2,0,1,2,35,
            0,64,6,7,8,27,10,11,37,38,
            14,15,16,17,0,19,20,62,22,23,
            24,25,26,0,28,29,0,0,1,2,
            64,0,36,6,7,8,0,10,11,0,
            1,14,15,16,17,0,19,20,84,22,
            23,24,25,26,0,28,0,1,2,0,
            0,2,8,7,8,0,10,11,37,38,
            14,15,16,17,51,19,20,18,22,23,
            24,25,26,18,28,0,1,2,0,1,
            2,64,7,8,6,10,11,37,38,14,
            15,16,17,0,19,20,18,22,23,24,
            25,26,0,28,29,27,0,0,1,2,
            55,18,0,35,7,8,70,10,11,0,
            0,14,15,16,17,6,19,20,0,22,
            23,24,25,26,6,28,29,0,1,2,
            0,0,0,0,7,8,27,10,11,8,
            0,14,15,16,17,27,19,20,0,22,
            23,24,25,26,6,28,29,0,1,2,
            58,59,60,61,7,8,0,10,11,0,
            1,14,15,16,17,35,19,20,0,22,
            23,24,25,26,36,28,29,0,1,2,
            58,59,60,61,7,8,0,10,11,69,
            0,14,15,16,17,0,19,20,0,22,
            23,24,25,26,0,28,29,0,1,2,
            51,0,0,1,7,8,0,10,11,7,
            0,14,15,16,17,0,19,20,0,22,
            23,24,25,26,6,28,0,1,2,35,
            0,29,2,7,8,29,10,11,0,29,
            14,15,16,17,29,19,20,62,22,23,
            24,25,26,0,28,0,1,2,0,0,
            0,1,7,8,0,10,11,7,0,14,
            15,16,17,35,19,20,0,22,23,24,
            25,26,29,28,0,1,2,29,0,29,
            0,7,8,0,10,11,0,0,14,15,
            16,17,84,19,20,0,22,23,24,25,
            26,0,28,2,3,4,5,6,0,8,
            9,0,0,12,13,3,4,5,0,18,
            0,1,21,3,4,5,0,7,27,51,
            0,30,31,32,33,34,0,0,2,3,
            4,5,6,0,8,9,0,0,12,13,
            3,4,5,0,18,2,0,21,0,3,
            4,5,0,27,8,0,30,31,32,33,
            34,0,0,0,3,4,5,0,0,2,
            9,0,0,12,13,0,0,0,3,4,
            5,0,21,0,9,18,9,12,13,12,
            13,30,31,32,33,34,21,51,0,0,
            0,3,4,5,0,30,31,32,33,34,
            0,0,1,3,4,5,0,0,7,9,
            0,1,12,13,0,0,1,7,3,4,
            5,21,7,0,63,0,3,4,5,0,
            30,31,32,33,34,74,75,76,77,78,
            79,80,81,82,83,0,1,2,3,4,
            5,0,0,8,3,4,5,0,0,8,
            2,0,0,18,6,3,4,5,0,0,
            9,0,0,12,13,3,4,5,9,0,
            0,12,13,0,0,27,3,4,5,9,
            6,0,12,13,0,0,0,3,4,5,
            9,0,51,12,13,0,0,0,3,4,
            5,0,0,0,3,4,5,0,0,0,
            3,4,5,0,1,2,0,0,0,0,
            0,0,0,0,0,51,0,0,0,0,
            0,0,0,0,0,0,0,0,64,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2485,2495,2163,805,807,813,69,2496,2100,2697,
            2087,2075,2698,2699,2108,2252,2186,2179,2485,2500,
            2153,2646,2497,2498,2499,1564,1554,50,1912,1,
            2647,2645,2700,2648,2644,89,1,2051,1501,2651,
            2656,2655,2653,2654,2652,2657,2658,2650,2659,2660,
            2661,53,2148,2214,2210,1,89,2496,1,2479,
            1562,2496,283,2496,2490,2496,2496,2485,63,2496,
            52,2496,2496,2496,128,547,665,2395,2398,2401,
            2051,1501,1726,2697,67,2489,2698,2699,1902,2025,
            2496,2496,2496,2496,2485,2646,814,1,2709,2003,
            2467,2470,2473,2379,2647,2645,2700,2648,2644,47,
            2496,2496,2496,2496,2496,2496,2496,2132,2496,2485,
            2496,2496,2496,2496,2496,2490,2496,2496,2496,2496,
            2496,2496,2496,2496,2496,2496,2496,2496,2496,1,
            2485,2495,1,87,2035,2495,2489,2495,263,2495,
            2495,2485,623,2495,522,2495,2495,2495,129,1378,
            665,2404,2407,2410,2485,2124,2116,2697,2485,263,
            2698,2699,2485,65,2495,2495,2495,2495,884,2646,
            1,2709,2003,2467,2470,2473,2485,2495,2647,2645,
            2700,2648,2644,2496,2495,2495,2495,2495,2495,2495,
            2495,471,2495,2485,2495,2495,2495,2495,2495,2492,
            2495,2495,2495,2495,2495,2495,2495,2495,2495,2495,
            2495,2495,2495,2485,1,2485,1,1,1,189,
            1,1,1,2035,269,1,1,2490,1,2491,
            648,61,1378,266,1,2035,805,807,813,665,
            66,251,665,1,1,1,1,1,2489,189,
            64,665,1,1,1,1,1,1,1,1,
            1,1,1,1,1726,1,1,1,2485,2485,
            1,2485,1,1,1,188,1,2490,1,49,
            2485,1,1,2679,1,2485,48,2132,183,2422,
            1,2413,2416,2419,2132,2422,1740,1687,2489,1,
            1,1,1,1,877,188,859,648,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2485,1,1,1,2485,2485,1,71,1,1,
            1,189,1,2485,1,2124,2116,1,1,2679,
            1,2485,2124,2116,182,2434,1,2425,2428,2431,
            2697,2434,51,2698,2699,1,1,1,1,1,
            2485,189,2051,1501,1,1,1,1,1,1,
            1,1,1,1,1,1,68,1,1,1,
            57,2485,2495,753,805,807,813,31,2496,2380,
            2697,2485,2495,2698,2699,2679,2259,254,2496,1522,
            2164,58,2646,2510,2511,2383,2485,62,1352,1278,
            2485,2647,2645,2700,2648,2644,2488,1902,2025,2485,
            2651,2656,2655,2653,2654,2652,2657,2658,2650,2659,
            2660,2661,1940,2148,2214,2210,127,2485,1274,2386,
            2389,2392,405,2490,623,2697,803,2485,2698,2699,
            251,2709,2003,805,807,813,209,2646,400,1890,
            1879,1868,1184,2485,2489,2485,2647,2645,2700,2648,
            2644,2490,1740,1687,2487,2651,2656,2655,2653,2654,
            2652,2657,2658,2650,2659,2660,2661,1,2495,2163,
            322,2808,2489,2488,2496,850,2485,2087,2075,2809,
            1347,2108,1661,2186,2179,2485,2500,2153,414,2497,
            2498,2499,1564,1554,2485,1912,2485,2495,2163,1328,
            2494,56,2488,2496,2067,1428,2087,2075,2485,977,
            2108,1661,2186,2179,2490,2500,2153,1253,2497,2498,
            2499,1564,1554,2485,1912,1265,1,2999,2163,1596,
            2485,2487,28,2915,2100,2489,2087,2075,1902,2025,
            2108,1661,2186,2179,2485,2500,2153,2855,2497,2498,
            2499,1564,1554,1,1912,3588,2485,2485,2495,2163,
            2487,55,28,2488,2496,2100,2485,2087,2075,2485,
            2721,2108,1661,2186,2179,2485,2500,2153,2493,2497,
            2498,2499,1564,1554,2485,1912,2485,1,1,268,
            54,1315,797,1,1,289,1,1,1902,2025,
            1,1,1,1,2741,1,1,665,1,1,
            1,1,1,1303,1,2485,2495,2163,1,2709,
            1562,2487,2496,2100,260,2087,2075,1902,2025,2108,
            1661,2186,2179,218,2500,2153,665,2497,2498,2499,
            1564,1554,2485,1912,471,260,2485,1,2999,2163,
            979,665,60,260,2915,2100,2859,2087,2075,2485,
            2485,2108,1661,2186,2179,2490,2500,2153,1,2497,
            2498,2499,1564,1554,2490,1912,3588,368,2495,2163,
            70,2485,59,2485,2496,2100,2489,2087,2075,1455,
            29,2108,1661,2186,2179,2489,2500,2153,282,2497,
            2498,2499,1564,1554,1452,1912,3588,2485,2495,2163,
            1890,1879,1868,1184,2496,2100,2485,2087,2075,1,
            2482,2108,1661,2186,2179,590,2500,2153,2485,2497,
            2498,2499,1564,1554,1452,1912,3588,1,2999,2163,
            1890,1879,1868,1184,2915,2100,2485,2087,2075,547,
            2485,2108,1661,2186,2179,199,2500,2153,2485,2497,
            2498,2499,1564,1554,29,1912,3588,2485,2495,2163,
            2741,2485,2485,2495,2496,2100,2485,2087,2075,2496,
            2485,2108,1661,2186,2179,2485,2500,2153,1,2497,
            2498,2499,1564,1554,2494,1912,2485,2495,2194,2513,
            333,1201,904,2496,2100,1456,2087,2075,205,1457,
            2108,1661,2186,2179,1463,2500,2153,1403,2497,2498,
            2499,1564,1554,187,1912,1,2495,2163,367,2485,
            2485,2495,2496,2100,2485,2087,2075,2496,2485,2108,
            1661,2186,2179,3900,2500,2153,2485,2497,2498,2499,
            1564,1554,204,1912,328,2495,2163,363,1,1235,
            2485,2496,2100,2485,2087,2075,2485,2485,2108,1661,
            2186,2179,2493,2500,2153,2485,2497,2498,2499,1564,
            1554,19,1912,2455,177,177,177,2455,2485,2455,
            177,2485,251,177,177,805,807,813,2485,2455,
            204,3713,177,805,807,813,2485,3713,2455,2740,
            2485,177,177,177,177,177,349,2485,350,350,
            350,350,2476,2485,2476,350,2485,180,350,350,
            805,807,813,320,350,720,1,350,2485,2467,
            2470,2473,2485,2476,251,2485,350,350,350,350,
            350,130,2485,2485,2437,2440,2443,220,2485,1390,
            2697,41,2485,2698,2699,131,2485,247,2446,2449,
            2452,2485,2646,2485,2697,665,1,2698,2699,1,
            1,2647,2645,2700,2648,2644,2646,2741,366,2485,
            2485,805,807,813,2485,2647,2645,2700,2648,2644,
            354,206,2495,2458,2461,2464,2485,2485,2496,2697,
            205,692,2698,2699,2485,363,3718,692,805,807,
            813,2646,3718,364,1159,2485,805,807,813,2485,
            2647,2645,2700,2648,2644,1134,1109,1084,1059,1034,
            984,1009,959,934,909,266,2709,1562,805,807,
            813,1,2485,251,2467,2470,2473,2485,2485,251,
            621,246,367,665,2490,805,807,813,2485,248,
            2697,2485,181,2698,2699,805,807,813,1,2485,
            249,1,1,365,2485,2489,805,807,813,2697,
            2488,250,2698,2699,198,2485,2485,805,807,813,
            2697,2485,2741,2698,2699,360,2485,2485,805,807,
            813,361,2485,2485,805,807,813,362,2485,2485,
            805,807,813,1,2709,2003,2485,2485,2485,2485,
            2485,2485,2485,2485,2485,1353,2485,2485,2485,2485,
            2485,2485,2485,2485,2485,2485,2485,2485,2487
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            334,1,162,263,162,162,162,162,162,162,
            162,162,162,162,162,25,458,87,84,91,
            89,97,95,99,98,101,100,232,162,458,
            501,501,211,162,267,267,75,458,162,162,
            162,162,162,162,162,162,162,162,162,162,
            162,162,162,162,162,162,162,162,162,162,
            162,162,162,162,162,162,162,162,267,267,
            331,120,79,156,421,280,181,354,386,386,
            386,366,504,366,504,504,366,504,366,32,
            366,473,162,84,84,89,89,89,89,87,
            87,95,91,91,98,97,148,100,99,138,
            118,75,82,79,3,331,454,160,267,388,
            424,183,228,179,136,504,501,498,501,136,
            501,504,162,36,162,118,82,374,454,331,
            159,156,267,377,473,266,426,150,228,227,
            267,506,285,138,319,321,205,316,138,374,
            454,162,162,331,160,421,275,274,79,426,
            267,266,182,228,138,506,285,319,319,316,
            116,328,187,501,162,148,270,316,118,454,
            374,331,331,267,388,424,377,150,267,210,
            267,285,316,140,285,319,321,325,321,120,
            330,501,162,118,374,426,266,285,142,321,
            316,162,501,162,331,321,267,266,210,316,
            112,162,108,381,79,142,109,316,331,316,
            502,142,162,381,109,109,321,109
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            85,0,9,12,13,2,22,23,24,19,
            1,7,16,17,14,8,10,11,25,26,
            20,28,15,0,1,62,51,64,36,84,
            85,55,71,16,17,32,33,12,21,34,
            13,31,9,30,14,10,11,56,57,37,
            38,58,59,60,61,65,66,67,68,69,
            72,73,63,74,75,76,77,78,79,80,
            81,82,83,35,6,27,2,18,5,4,
            3,8,0,8,56,57,10,11,38,37,
            58,59,60,61,65,66,14,67,68,69,
            51,64,27,36,85,72,73,62,5,4,
            3,84,6,35,0,6,36,18,55,16,
            17,14,8,10,11,25,26,20,28,15,
            2,22,23,24,19,1,7,29,0,84,
            6,8,1,2,5,4,3,62,0,6,
            35,27,1,9,0,9,12,13,21,64,
            6,2,22,23,24,1,7,16,17,14,
            8,10,11,25,26,20,28,15,19,0,
            18,35,27,6,2,0,63,29,16,17,
            14,8,10,11,25,26,20,28,15,2,
            22,23,24,19,1,7,18,55,0,35,
            20,22,23,24,19,7,16,17,14,8,
            10,11,25,26,15,28,2,27,6,1,
            0,14,8,10,11,56,57,37,38,58,
            59,60,61,65,66,67,68,69,72,73,
            36,63,74,75,76,77,78,80,79,81,
            82,83,62,64,85,35,27,6,0,63,
            18,55,0,2,62,84,3,4,5,6,
            35,27,18,0,30,39,9,40,52,31,
            41,32,42,43,33,12,44,45,21,53,
            34,54,46,47,13,48,49,50,1,7,
            15,3,4,5,70,6,36,0,1,7,
            6,36,35,0,6,35,36,63,0,51,
            64,6,0,20,22,23,24,19,1,7,
            2,16,17,14,8,10,11,25,26,15,
            28,70,0,47,39,44,42,43,41,40,
            45,46,48,49,50,62,84,34,31,21,
            30,33,32,9,12,13,6,35,27,18,
            8,3,4,5,1,2,0,8,30,39,
            9,40,52,31,41,32,42,43,33,12,
            44,45,21,53,34,54,46,47,13,48,
            49,50,1,7,15,51,5,4,3,0,
            8,2,18,27,6,30,39,40,52,31,
            41,32,42,43,33,44,45,21,53,34,
            54,46,47,48,49,50,1,7,15,3,
            4,5,51,9,12,13,0,20,22,23,
            24,19,2,16,17,14,8,10,11,25,
            26,28,15,52,53,54,47,39,44,42,
            43,41,40,45,46,48,49,50,34,31,
            21,30,33,9,12,13,32,5,4,3,
            7,1,0,1,7,29,5,4,3,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            94,33,41,33,41,41,41,41,41,41,
            41,41,41,41,41,33,119,33,33,33,
            33,33,33,33,33,33,33,33,41,119,
            10,10,67,120,23,23,115,1,41,41,
            41,41,41,41,41,41,41,41,41,41,
            41,41,41,41,120,41,41,41,41,41,
            41,41,41,41,41,41,41,41,23,23,
            50,41,97,48,114,20,20,64,33,33,
            33,65,80,65,80,80,65,80,65,33,
            65,58,41,33,33,33,33,33,33,33,
            33,33,33,33,33,33,33,33,33,33,
            92,110,33,103,17,50,34,49,23,105,
            70,23,73,33,8,103,8,103,8,8,
            8,103,41,33,41,39,33,92,34,50,
            49,36,23,88,25,33,107,46,22,33,
            23,80,92,33,92,12,14,92,33,92,
            34,41,41,50,49,87,20,20,97,107,
            23,23,33,23,33,103,123,92,8,52,
            38,33,40,8,41,33,54,52,92,34,
            36,50,50,23,105,70,76,46,23,41,
            23,92,52,43,131,8,12,33,33,40,
            50,8,41,39,36,127,23,123,82,12,
            52,41,8,41,50,12,23,23,41,52,
            44,41,33,90,97,100,80,52,50,52,
            33,82,41,78,80,103,56,103
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            86,97,84,83,69,82,81,1,0,77,
            0,58,0,1,114,0,5,12,0,31,
            0,96,25,0,86,97,85,84,83,69,
            82,81,0,62,0,27,0,74,12,57,
            5,0,12,76,0,94,0,12,5,29,
            0,44,0,110,0,106,0,69,65,66,
            67,68,75,59,32,0,12,99,0,25,
            12,0,113,25,0,50,49,39,37,26,
            0,26,12,39,37,0,25,50,49,37,
            39,12,0,12,98,0,26,55,0,12,
            39,37,18,0,26,55,12,30,0,50,
            49,26,0,25,49,50,12,0,54,12,
            52,0,88,12,54,0,104,12,30,0,
            12,54,71,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,97,98,99,87,86,9,48,10,
            11,64,76,8,93,6,7,1,84,68,
            69,81,82,83,12,13,90,94,3,44,
            55,60,63,72,42,91,16,17,47,52,
            56,61,62,66,67,74,75,78,79,80,
            30,54,70,73,4,14,15,18,19,20,
            21,29,31,89,22,23,24,25,26,100,
            5,27,28,32,33,34,35,36,37,38,
            39,40,41,92,101,45,46,49,50,51,
            53,57,58,59,65,71,77,88,95,96
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            107,0,0,0,109,113,114,115,116,117,
            118,0,119,120,121,122,123,174,0,0,
            0,124,125,126,104,175,136,0,103,129,
            158,135,0,0,0,154,156,0,157,0,
            0,0,0,105,0,128,144,167,168,169,
            0,108,143,148,155,164,0,0,138,0,
            159,162,163,166,139,140,141,142,145,0,
            147,151,153,170,179,106,110,111,112,127,
            130,131,132,133,134,137,0,146,150,0,
            152,161,0,176,0,178,180,102,0,0,
            0,149,0,160,165,0,171,172,0,173,
            0,0,177,181,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            137,195,270,157,88,94,223,51,248,1,
            60,104,122,37,203,31,65,100,174,285,
            289,257,15,8,8,69,72,77,109,132,
            72,184,189,192,293,45,178,264,8,77,
            213,147,239,147,213,264,20,27,84,170,
            27,27,27,27,27,20,112,84,112,112
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            145,145,145,145,6,6,145,57,254,6,
            35,6,35,42,208,35,35,6,172,35,
            6,261,18,6,6,35,75,86,6,35,
            135,187,187,187,35,48,181,267,11,80,
            208,164,242,150,216,278,25,29,86,172,
            229,231,233,235,237,22,119,80,114,127
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            67,65,5,67,31,31,65,53,122,115,
            51,31,42,19,65,93,51,31,71,5,
            5,23,89,110,109,49,64,55,31,39,
            47,66,66,66,3,74,71,7,115,55,
            65,67,123,67,65,5,89,97,55,71,
            85,84,83,82,81,89,42,55,40,42
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            36,36,36,36,64,64,36,36,91,64,
            27,64,27,27,29,27,27,64,84,27,
            64,62,3,64,64,27,2,8,64,27,
            1,1,1,1,27,63,1,27,51,8,
            29,29,97,1,1,27,1,15,8,84,
            1,52,53,53,47,1,2,8,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            21,21,71,21,60,60,21,133,-0,7,
            64,60,12,25,21,9,64,60,3,71,
            71,105,18,1,7,64,66,54,60,12,
            14,21,21,21,71,135,3,78,7,54,
            21,21,-0,21,21,71,18,22,54,3,
            22,22,22,22,22,18,12,54,12,12
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            146,51,146,18,0,103,0,146,18,0,
            30,128,103,0,172,126,0,175,0,126,
            0,151,175,0,151,0,186,0,179,0,
            212,2,194,0,104,0,211,2,2,3,
            0,104,104,0,207,112,0,31,143,0,
            158,179,112,29,157,0,105,0,0,161,
            112,2,149,0,161,112,2,0,164,2,
            0,155,112,0,167,0,143,155,0,9,
            0,162,0,143,0,9,0,124,21,192,
            112,18,0,124,192,112,21,18,0,124,
            21,18,0,124,192,112,18,0,124,18,
            0,139,0,2,0,160,104,0,2,104,
            0,161,112,2,139,0,2,0,159,104,
            0,147,2,0,154,0,158,190,112,29,
            101,203,52,0,105,0,203,52,0,107,
            3,0,0,0,105,0,158,190,112,29,
            203,52,0,3,0,0,0,105,0,154,
            0,106,0,202,112,154,0,112,154,0,
            149,106,0,170,52,0,107,0,170,54,
            0,170,53,0,187,112,29,201,101,200,
            169,0,201,101,200,169,0,3,0,0,
            105,0,200,169,0,107,0,3,0,0,
            105,0,187,112,29,200,169,0,142,0,
            141,0,140,0,139,0,138,0,218,90,
            0,77,2,108,104,106,0,218,125,152,
            2,94,0,53,0,0,152,73,122,0,
            29,125,0,178,2,0,104,114,0,158,
            179,112,29,125,178,2,0,104,3,0,
            112,0,105,0,199,2,105,0,152,18,
            105,0,152,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            845,0,2274,2288,2266,0,411,0,522,621,
            0,1682,1440,1639,2003,1562,1541,1596,1474,0,
            1177,446,375,0,2351,2346,2271,1682,1596,1820,
            1639,1474,1440,2293,2249,446,2287,798,516,433,
            1816,1177,1989,1967,2148,1945,2214,2210,1923,2201,
            1901,1738,375,2152,1789,1993,1762,1629,0,896,
            847,685,432,1440,1816,1562,1541,2035,1763,0,
            2259,2252,2186,2179,2153,1912,1661,2067,850,2140,
            547,1522,648,623,1740,1687,1726,2025,1902,1890,
            1879,1868,1184,2132,2124,2116,2051,1501,2108,2100,
            2087,2075,1564,1554,1403,1378,859,1353,1328,1303,
            720,1278,1253,1216,820,1428,414,665,1159,1134,
            1109,1084,1059,1034,1009,984,959,934,909,375,
            884,778,753,695,565,590,485,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,198,112,180,15,28,20,26,25,11,
            10,8,14,17,16,105,2,109,108,111,
            110,114,113,116,115,122,117,106,35,2,
            71,55,2,18,178,152,154,112,11,10,
            57,56,8,61,60,59,58,37,38,14,
            66,65,68,67,73,72,69,83,82,81,
            79,80,78,77,76,75,74,63,178,199,
            152,125,112,18,2,150,149,181,3,4,
            5,182,169,183,54,53,184,52,185,101,
            197,186,15,108,108,110,110,110,110,109,
            109,113,111,111,115,114,152,117,116,125,
            29,155,143,126,21,124,112,8,164,112,
            2,2,2,2,200,126,170,126,170,203,
            170,126,15,106,62,112,143,8,112,124,
            192,162,161,130,112,163,112,2,213,1,
            19,101,29,101,29,179,112,29,157,8,
            112,192,21,124,8,2,137,139,112,35,
            161,211,194,2,201,126,112,29,112,158,
            35,207,214,55,18,101,208,112,29,112,
            162,124,124,147,112,2,155,35,125,2,
            1,29,187,154,188,112,190,101,191,63,
            146,55,18,112,162,112,212,112,112,190,
            158,63,35,51,146,179,161,204,35,187,
            202,62,147,2,112,126,172,158,146,158,
            35,35,62,155,172,126,144,126
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "MAX",
            "MIN",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "no_sizeof_type_name_start",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_list_actual",
            "constant_expression",
            "declaration_specifiers",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "identifier_list",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "typeof_type_specifier",
            "typeof_declaration_specifiers",
            "field_name_designator"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 70,
           SCOPE_UBOUND      = 59,
           SCOPE_SIZE        = 60,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 248,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 2859,
           MAX_LA            = 2,
           NUM_RULES         = 374,
           NUM_NONTERMINALS  = 144,
           NUM_SYMBOLS       = 244,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1573,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 85,
           EOLT_SYMBOL       = 85,
           ACCEPT_ACTION     = 2379,
           ERROR_ACTION      = 2485;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
