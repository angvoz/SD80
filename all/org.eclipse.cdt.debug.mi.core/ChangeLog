2002-10-12 Alain Magloire

	The memory block is implemented with
	-data-read-memory (MIDataReadMemory)
	Since the ICDIMemoryBlock only have
	byte[] getBytes()
	We will always issue:
	-data-read-memory address x 1 1 length
	The CDI upper layer will deal with any conversions
	
	The problem now is how to send changedEvent when
	an element of the memory changed.
	
	* cdi/MemoryBlock.java (getLength): Implemented
	(getBytes): Implemented
	(getStartAddress): Implemented

	* cdi/MemoryManager.java: Implemented.
	
	* command/MIDataReadMemory (getMIDataReadMemoryInfo):
	New helper method.

2002-10-12 Alain Magloire

	* cdi/Location (getInstructions): Methods removed
	no longer define in ICDILocation.

2002-10-11 Alain Magloire

	* cdi/SourceManager (getMixedInstruction):
	Implement the 3 new methods to return Mixed source
	and assemby instructions.
	
	* cdi/MixedInstruction: New class implements
	ICDIMixedInstruction.

2002-10-11 Alain Magloire

	* cdi/ExpressionManager.java:  Not needed, removed.

2002-10-10 Alain Magloire

	The Eclipse/UI/Debug framewok is being very repetive
	and each command can be ask 2, 3 times.  So we'll try
	to make certain commands smarter by not reissuing them
	to gdb if the state is the same.  We do this when
	selecting the thread and when selecting the stackframe.
	
	The other problem is that Eclipse/UI/Debug is calling
	ICDISession.terminate() twice, this is catch by looking
	at isTerminated().

	* cdi/CThread.java (setCurrentStackFrame): Make it smarter
	to not reselect the stack level if it is already at that
	level.

	* MISession.java (isTerminated): Declare a flag that will
	hold the state.
	(terminate): Check if it was call already.

2002-10-10 Alain Magloire

	* SourceManager.java:  Implement getInstructions().