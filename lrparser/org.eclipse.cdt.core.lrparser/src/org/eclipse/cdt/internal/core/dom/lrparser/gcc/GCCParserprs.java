/*******************************************************************************
* Copyright (c) 2006, 2009 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCParserprs implements lpg.lpgjavaruntime.ParseTable, GCCParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,4,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,4,1,4,1,3,3,3,1,3,
            3,1,3,3,1,3,3,3,3,1,
            3,3,1,3,1,3,1,3,1,3,
            1,3,1,5,1,3,3,3,3,3,
            3,3,3,3,3,3,1,1,2,1,
            0,1,3,1,1,1,1,1,1,1,
            1,3,4,3,2,4,1,2,1,1,
            1,2,5,7,5,1,0,7,5,9,
            8,3,2,2,2,3,2,4,2,2,
            2,2,2,1,1,1,1,2,1,2,
            2,2,1,2,2,1,2,2,1,2,
            2,1,2,2,1,3,1,3,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,6,
            8,0,0,1,1,3,3,3,0,1,
            0,1,2,4,2,1,1,1,3,1,
            1,2,3,7,8,0,1,0,1,3,
            1,3,1,1,1,1,1,1,3,1,
            1,1,1,1,3,1,2,2,1,5,
            3,1,3,5,1,3,1,3,2,4,
            3,5,4,6,6,3,5,1,3,4,
            5,6,0,1,2,1,3,1,1,3,
            2,1,1,1,1,2,1,2,3,1,
            1,1,3,1,2,2,2,3,4,5,
            1,1,7,3,0,0,1,1,3,3,
            4,1,1,2,3,2,3,2,1,0,
            1,2,1,1,1,1,1,2,1,3,
            6,4,2,4,1,1,1,1,2,6,
            3,1,3,1,4,0,1,1,1,3,
            1,0,4,3,1,2,1,3,4,4,
            4,6,1,0,1,3,1,3,0,1,
            4,5,2,4,2,4,3,3,5,3,
            4,3,1,2,2,2,4,2,1,1,
            2,2,3,2,2,3,1,1,1,1,
            1,1,1,2,5,3,1,-105,0,-114,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-2,0,0,0,0,
            0,0,-351,-312,0,0,-41,-224,0,0,
            0,-111,-260,0,-7,0,0,0,0,0,
            0,-222,0,-84,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-32,
            0,0,0,0,-3,-35,-107,0,-58,0,
            0,0,-146,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-5,0,0,-120,0,0,0,
            0,0,0,0,0,0,0,-10,-11,-253,
            0,0,0,0,0,0,0,0,0,0,
            0,-221,0,0,0,0,0,0,0,0,
            -62,0,0,0,0,0,0,0,0,0,
            0,0,0,-116,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-190,0,0,
            0,0,0,0,0,0,-4,0,0,0,
            -360,0,0,0,0,0,0,0,-42,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-12,0,0,0,0,0,0,0,0,
            0,-109,-112,0,-209,0,0,0,0,0,
            0,0,0,0,-80,0,0,0,0,0,
            0,0,0,0,0,-314,0,0,0,-33,
            0,-13,0,0,0,0,0,0,0,0,
            0,0,0,0,-172,0,-295,0,0,0,
            0,0,0,0,0,0,0,0,0,-24,
            0,0,0,0,-25,0,0,0,0,0,
            0,-37,-123,0,0,0,0,0,0,0,
            0,-36,-108,0,-345,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-38,
            -274,0,0,0,0,0,0,0,0,0,
            -257,0,-81,0,0,0,0,0,0,0,
            0,0,-45,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-121,-63,0,
            0,0,0,0,0,0,0,0,0,0,
            -210,0,-9,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-245,0,
            0,-40,-30,-347,0,0,0,0,0,0,
            0,0,0,-47,0,0,0,0,0,0,
            0,-43,0,0,0,0,0,0,-44,-205,
            0,0,0,0,0,0,0,0,0,0,
            -54,-361,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-56,
            0,0,0,0,0,0,-239,-64,0,0,
            0,0,0,0,0,0,0,0,0,-79,
            0,0,0,0,0,0,0,0,0,-49,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-310,-65,0,0,0,0,
            0,0,0,0,0,-241,0,0,0,0,
            0,0,0,0,0,-31,-71,0,0,0,
            0,0,0,-73,0,0,0,0,0,0,
            0,-50,0,0,-119,0,0,0,0,0,
            0,0,0,0,-106,-29,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-74,
            -151,0,0,0,0,0,0,0,0,0,
            -51,0,0,0,0,0,0,0,-85,0,
            0,0,0,0,0,-182,0,-86,0,0,
            0,0,0,0,0,-90,0,0,-141,0,
            0,0,0,-72,0,0,0,0,0,0,
            -92,-189,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-113,
            0,0,0,0,0,0,-258,-28,0,0,
            0,0,0,0,0,0,0,-333,0,-122,
            0,0,0,0,0,0,0,-143,0,-87,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-8,-124,0,0,-265,0,0,-117,
            -125,0,0,0,0,0,0,0,0,0,
            -27,0,-126,-89,0,0,-296,0,0,0,
            0,0,0,0,0,0,0,0,0,-59,
            0,-183,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-66,0,0,0,0,
            0,0,0,0,-217,0,-127,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-128,0,0,0,-75,-256,0,0,
            0,0,0,-129,0,0,-188,0,0,0,
            0,0,0,-130,0,-191,0,0,0,0,
            0,0,0,0,0,0,0,-131,-101,0,
            0,0,0,-132,0,0,0,0,0,0,
            -91,0,0,0,-192,0,0,0,0,0,
            0,0,0,0,-133,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-142,
            -193,0,0,0,0,0,0,0,0,0,
            -153,-246,0,0,0,0,0,0,-136,0,
            0,0,0,0,0,0,-194,0,0,0,
            0,0,0,0,0,0,0,0,-259,-137,
            0,0,0,0,-102,0,0,0,0,0,
            0,-149,-195,0,0,0,0,0,0,0,
            0,0,0,-175,0,-261,0,0,0,0,
            -176,0,0,0,0,0,0,0,-196,0,
            0,0,0,0,0,0,0,0,0,0,
            -343,-227,0,0,0,0,-103,0,0,0,
            0,0,0,-138,-197,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -198,0,0,0,0,0,0,0,0,0,
            0,0,-348,0,0,0,0,0,-144,0,
            0,0,0,0,0,-228,-199,0,0,0,
            0,0,0,0,0,0,-135,-160,0,0,
            0,0,0,0,-154,0,0,0,0,0,
            0,0,-200,0,0,0,0,0,0,0,
            0,0,0,-163,-297,0,0,0,0,0,
            -156,0,0,0,0,0,0,-326,-201,0,
            0,0,0,0,0,0,0,0,0,-225,
            0,0,0,0,0,0,-164,0,0,0,
            0,0,0,0,-266,0,0,0,0,0,
            0,0,0,0,0,-244,-145,0,0,0,
            0,0,-167,0,0,0,0,0,0,-249,
            -271,0,0,0,0,0,0,0,0,0,
            0,-252,-334,0,0,0,0,0,-168,0,
            0,0,0,0,0,-335,-272,0,0,0,
            0,0,0,0,0,0,0,-340,-353,-309,
            0,0,0,0,-169,0,0,0,0,0,
            0,0,-303,0,0,0,0,0,0,0,
            0,0,0,-273,0,0,0,0,0,0,
            -170,0,0,0,0,0,0,-311,0,-324,
            0,0,0,0,0,0,0,0,0,-367,
            0,0,0,0,0,-171,0,0,0,0,
            0,0,-322,0,-320,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -181,0,0,0,0,0,0,0,-323,0,
            0,0,0,0,0,0,0,0,0,0,
            -321,-147,0,0,0,0,-185,0,0,0,
            0,0,0,0,-336,0,0,0,0,0,
            0,0,0,0,0,-363,0,0,0,0,
            0,0,-223,0,0,0,0,0,0,-349,
            0,-148,0,0,0,0,0,0,0,0,
            0,-150,-152,0,0,0,0,-240,0,0,
            0,0,0,0,-357,0,-155,0,0,0,
            0,0,0,0,-344,0,0,-157,0,0,
            0,0,-242,0,0,0,0,0,0,-364,
            0,-166,0,0,0,0,0,0,0,-177,
            0,0,-178,0,0,0,0,-243,0,0,
            0,0,0,0,-370,0,-184,0,0,0,
            0,0,0,0,-226,0,0,0,0,0,
            0,0,-231,0,0,0,0,0,0,-83,
            0,0,-67,0,-263,0,0,0,0,0,
            0,0,-211,0,-235,0,0,0,0,0,
            0,0,0,-236,0,0,0,0,0,0,
            -250,-362,-325,0,-251,-267,0,0,0,0,
            0,0,0,0,-275,-139,0,0,-220,0,
            -276,0,0,0,0,0,0,0,-371,0,
            0,-277,0,0,0,0,-278,0,0,0,
            0,0,-270,-279,0,0,0,-280,-281,-313,
            0,-282,-283,0,0,0,0,0,0,0,
            0,-180,0,0,-284,-341,-60,0,0,0,
            0,0,0,0,0,0,0,0,-23,-374,
            0,0,0,-22,-285,0,0,0,-286,-298,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-238,0,0,-300,
            0,-301,0,0,0,-287,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-306,0,0,0,0,0,0,-288,
            0,0,0,-269,0,0,0,0,0,-317,
            0,0,0,0,0,-289,-61,0,0,0,
            0,0,0,0,-316,-290,0,0,0,0,
            -291,-292,0,0,0,0,0,0,-115,-319,
            0,0,0,0,0,0,0,0,0,0,
            -293,0,-134,-294,0,0,0,0,0,0,
            0,0,-299,0,0,-337,0,0,0,0,
            0,0,0,0,-186,-346,0,-247,-342,0,
            0,0,-354,0,0,0,0,0,-350,-365,
            0,0,0,0,-355,-159,0,0,0,0,
            0,0,-308,0,0,-373,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-76,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-161,0,0,0,0,0,0,0,0,
            -165,0,0,0,0,0,0,0,0,0,
            0,-218,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-254,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-264,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-46,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-356,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-187,0,0,0,0,
            0,0,0,0,-68,0,0,0,0,0,
            0,0,0,0,0,0,0,-219,0,0,
            0,0,0,0,0,0,0,0,0,-248,
            0,0,0,0,0,-93,0,0,0,0,
            0,0,-338,0,0,0,0,0,0,-104,
            0,0,0,0,0,0,0,-34,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-95,0,0,0,0,0,0,0,0,
            0,0,-110,0,0,-82,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-94,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-332,-70,0,0,0,0,0,0,
            0,0,0,0,0,0,-234,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-237,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-302,0,0,-48,0,0,0,
            -304,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -318,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-315,-230,0,0,0,
            -328,0,0,0,0,0,0,0,0,-206,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-330,0,0,
            0,0,0,0,-331,0,0,0,0,0,
            0,-202,0,0,0,0,0,0,0,0,
            0,0,0,0,-368,0,0,0,0,0,
            0,-372,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-375,0,0,0,0,0,0,-1,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-262,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-207,0,-14,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-15,0,0,0,0,0,0,0,
            -16,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-19,0,0,0,
            0,0,0,0,-21,0,0,0,0,0,
            -26,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-140,0,0,-52,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-212,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-213,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -214,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-215,0,0,0,
            0,0,0,0,0,0,-232,-174,0,0,
            0,0,-216,0,0,0,0,0,0,0,
            0,0,-53,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-6,0,0,-208,
            0,-20,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-96,0,0,0,0,0,-39,0,0,
            -307,-57,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-97,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-233,0,0,0,0,0,0,0,0,
            -55,-98,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-99,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-100,0,0,0,0,0,0,
            -173,0,0,-327,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-229,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-203,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-268,-352,0,0,0,0,0,0,
            -255,-204,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-305,0,
            0,0,-17,0,0,0,-77,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-18,-366,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-69,0,0,0,0,0,0,0,0,
            0,0,-88,0,0,-329,-162,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -179,0,0,0,0,0,0,0,-78,0,
            0,0,0,0,-339,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-358,0,0,0,-118,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -158,0,0,0,-359,0,0,0,-369,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            121,2,122,49,49,18,18,53,53,26,
            26,1,1,3,3,3,3,4,4,4,
            5,6,6,6,6,6,6,6,6,88,
            88,103,7,7,7,7,7,7,7,7,
            7,7,7,8,8,9,9,9,9,14,
            14,14,15,15,15,16,16,16,16,16,
            17,17,17,19,19,20,20,21,21,22,
            22,23,23,24,24,28,28,28,28,28,
            28,28,28,28,28,28,28,38,31,25,
            123,123,104,104,62,39,39,39,39,39,
            39,39,40,40,40,30,30,105,105,77,
            77,41,41,42,42,42,71,71,43,43,
            43,43,44,44,44,44,44,60,60,29,
            29,29,29,29,54,54,54,95,95,90,
            90,90,90,91,91,91,92,92,92,93,
            93,93,94,94,94,89,89,82,82,83,
            55,57,57,57,57,57,72,74,74,74,
            74,74,74,74,74,74,74,74,74,81,
            78,78,124,125,84,84,79,79,79,96,
            106,106,107,107,97,97,97,58,126,126,
            108,98,98,98,80,80,127,109,109,110,
            110,99,99,32,33,33,33,56,52,52,
            45,45,45,45,34,34,35,46,46,47,
            36,36,100,100,48,129,129,128,128,59,
            59,59,59,59,59,59,59,59,111,63,
            63,63,63,37,85,85,75,75,75,76,
            76,65,65,130,130,64,64,86,86,86,
            66,66,66,67,68,68,68,69,69,69,
            69,73,73,50,50,51,132,131,131,131,
            131,112,133,134,134,135,135,136,136,121,
            121,137,137,113,113,113,113,138,138,114,
            114,114,70,115,115,10,10,10,27,27,
            11,11,139,139,116,116,116,117,117,140,
            140,118,118,12,12,141,141,119,119,119,
            119,13,61,142,142,143,143,120,120,120,
            101,101,101,7,7,7,7,16,16,24,
            4,40,144,102,102,102,87,87,29,60,
            54,83,83,83,108,108,108,127,124,125,
            37,96,135,135,145,146,112,77,329,1713,
            247,17,21,18,897,1030,45,1054,370,315,
            316,317,1073,1061,1133,1117,403,1154,1144,1174,
            1168,1195,75,2102,961,1781,92,734,2014,1750,
            135,213,115,1679,20,612,17,21,18,897,
            43,44,1871,20,755,17,21,18,897,43,
            45,1054,137,134,136,160,1073,1061,1133,1117,
            1220,1154,1144,1174,1971,37,339,961,31,1971,
            139,2292,166,730,1663,966,143,146,149,152,
            313,284,2653,28,1229,363,128,231,498,2635,
            2661,2687,2695,1071,1456,179,1864,823,87,111,
            2701,348,1710,96,370,315,316,317,651,712,
            1542,1262,1743,95,97,98,99,100,370,315,
            316,317,1163,210,966,228,135,213,655,224,
            232,1871,20,940,17,21,18,897,43,40,
            135,213,254,213,1521,179,241,88,137,134,
            136,160,346,1952,370,315,316,317,1830,294,
            322,1677,142,134,136,160,139,419,166,1053,
            25,169,143,146,149,152,135,213,2653,1440,
            141,363,166,1385,498,2635,2661,2687,2695,1071,
            255,213,800,127,753,616,2701,321,137,134,
            136,160,2112,635,966,1871,20,425,17,21,
            18,897,43,45,1054,1971,139,1973,166,1073,
            1061,1824,143,146,149,152,1926,90,2653,342,
            1288,363,851,231,498,2635,2661,2687,2695,1071,
            318,315,316,317,1951,1676,2701,1703,20,1783,
            17,21,18,897,1030,45,1054,3067,255,213,
            1013,1073,1061,1133,1117,1061,1154,1144,1174,1168,
            1195,75,443,1610,20,281,17,21,18,897,
            43,36,927,961,31,1586,20,1783,17,21,
            18,897,1030,45,1054,28,1229,282,1229,1073,
            1061,1133,1117,283,1154,1144,1174,1168,1195,75,
            364,1610,20,281,17,21,18,897,43,36,
            287,2113,246,1643,20,1591,17,21,18,897,
            1030,45,1054,500,3113,282,1229,1073,1061,1133,
            1117,227,1154,1144,1174,1168,1195,75,1542,1871,
            20,281,17,21,18,897,43,39,289,288,
            247,1871,20,499,17,21,18,897,43,45,
            1054,28,1229,282,1229,1073,1061,1828,1550,2014,
            254,213,1337,499,1727,20,24,17,21,18,
            897,1030,45,1054,961,187,158,290,1073,1061,
            1133,1117,1500,1154,1144,1174,1168,1195,75,181,
            1871,20,281,17,21,18,897,43,45,1054,
            334,396,1751,20,1795,17,21,18,897,1030,
            45,1054,180,548,282,1229,1073,1061,1133,1117,
            1082,1154,1144,1174,1168,1195,75,755,1871,20,
            281,17,21,18,897,43,38,386,225,992,
            435,20,738,17,21,18,897,1030,45,1054,
            961,186,282,1229,1073,1061,1133,1117,310,1154,
            1144,1174,1168,1195,75,2014,1871,20,487,17,
            21,18,897,43,37,291,1967,20,312,17,
            21,18,897,1030,45,1054,49,2036,1137,239,
            1073,1061,1133,1117,1089,1154,1144,1174,1168,1195,
            75,335,1289,976,331,1919,20,2216,17,21,
            18,897,1030,45,1054,734,115,1842,204,1073,
            1061,1133,1117,959,1154,1144,1174,1168,1195,75,
            363,1871,20,1147,17,21,18,897,43,45,
            1054,961,188,323,1677,1073,1061,1133,1117,1500,
            1154,1144,1174,1168,1195,94,1871,20,1149,17,
            21,18,897,1030,45,1054,1522,333,105,635,
            1073,1061,1133,1117,1614,1154,1144,1174,1168,1195,
            75,418,533,20,92,17,21,18,897,1030,
            45,1054,593,1774,329,124,1073,1061,1133,1117,
            1339,1154,1144,1174,1168,1195,75,2131,1775,20,
            1534,17,21,18,897,366,1913,940,1967,20,
            426,17,21,18,897,1030,45,1054,961,1366,
            1082,240,1073,1061,1133,1117,345,1154,1144,1174,
            1168,1195,75,413,1779,2878,331,1971,341,2451,
            419,36,1995,318,315,316,317,28,1229,984,
            1710,1521,179,868,49,278,2016,920,336,966,
            2278,370,315,316,317,1765,127,672,224,772,
            1799,20,823,17,21,18,897,355,218,456,
            221,700,88,135,213,620,1871,20,116,17,
            21,18,897,43,36,1871,20,416,17,21,
            18,897,43,45,1054,138,134,136,160,1073,
            1061,1133,1117,798,1896,155,662,537,916,534,
            534,22,450,140,325,166,330,823,1418,144,
            147,150,153,773,1478,2653,1871,20,364,17,
            21,18,897,1030,45,1054,1060,2091,355,1082,
            1073,1061,1133,1117,1116,1154,1144,1174,1168,1195,
            75,49,896,2082,86,1871,20,360,17,21,
            18,897,1030,45,1054,1037,243,307,369,1073,
            1061,1133,1117,260,1154,1144,1174,1168,1195,75,
            635,1871,20,85,17,21,18,897,1030,45,
            1054,419,419,1887,2023,1073,1061,1133,1117,1524,
            1154,1144,1174,1168,1195,75,123,1871,20,84,
            17,21,18,897,1030,45,1054,127,195,2149,
            2035,1073,1061,1133,1117,1082,1154,1144,1174,1168,
            1195,75,635,1871,20,83,17,21,18,897,
            1030,45,1054,635,804,1959,2152,1073,1061,1133,
            1117,1992,1154,1144,1174,1168,1195,75,112,1871,
            20,82,17,21,18,897,1030,45,1054,28,
            1229,601,635,1073,1061,1133,1117,1082,1154,1144,
            1174,1168,1195,75,1547,1871,20,81,17,21,
            18,897,1030,45,1054,19,28,1229,126,1073,
            1061,1133,1117,275,1154,1144,1174,1168,1195,75,
            276,1871,20,80,17,21,18,897,1030,45,
            1054,28,1229,961,296,1073,1061,1133,1117,1251,
            1154,1144,1174,1168,1195,75,635,1871,20,79,
            17,21,18,897,1030,45,1054,49,49,418,
            2250,1073,1061,1133,1117,2050,1154,1144,1174,1168,
            1195,75,122,1871,20,78,17,21,18,897,
            1030,45,1054,1668,1782,635,500,1073,1061,1133,
            1117,1112,1154,1144,1174,1168,1195,75,635,1871,
            20,77,17,21,18,897,1030,45,1054,338,
            49,2974,637,1073,1061,1133,1117,1082,1154,1144,
            1174,1168,1195,75,3024,1871,20,76,17,21,
            18,897,1030,45,1054,230,49,1271,2881,1073,
            1061,1133,1117,1082,1154,1144,1174,1168,1195,75,
            1300,1871,20,93,17,21,18,897,1030,45,
            1054,711,1878,2014,1830,1073,1061,1133,1117,1082,
            1154,1144,1174,1168,1195,75,1364,1871,20,1575,
            17,21,18,897,1030,45,1054,1017,2014,635,
            1300,1073,1061,1133,1117,1082,1154,1144,1174,1168,
            1195,75,194,1871,20,1611,17,21,18,897,
            43,45,1054,1249,823,3089,181,1073,1061,1133,
            1117,1082,1154,1144,1174,1168,1195,94,1871,20,
            1682,17,21,18,897,43,45,1054,875,423,
            635,205,1073,1061,1133,1117,1082,1154,1144,1174,
            1168,1195,94,1871,20,823,17,21,18,897,
            1030,45,1054,242,1276,362,118,1073,1061,1133,
            1117,1082,1154,1144,1174,1168,1195,75,1508,1871,
            20,359,17,21,18,897,1030,45,1054,23,
            212,823,1415,1073,1061,1133,1117,1082,1154,1144,
            1174,1168,1195,75,244,1871,20,74,17,21,
            18,897,43,45,1054,351,961,298,1685,1073,
            1061,1133,1117,2091,1154,1144,1174,1168,1195,94,
            1871,20,1543,17,21,18,897,43,45,1054,
            245,234,677,1058,1073,1061,1133,1117,1082,1154,
            1144,1174,1168,1195,94,1871,20,1646,17,21,
            18,897,43,45,1054,2014,320,202,1673,1073,
            1061,1133,1117,1082,1154,1144,1174,1168,1195,94,
            1871,20,848,17,21,18,897,43,45,1054,
            1128,340,1782,789,1073,1061,1133,1117,1082,1154,
            1144,1174,1168,1195,94,1871,20,1243,17,21,
            18,897,43,45,1054,67,339,203,561,1073,
            1061,1133,1117,569,1154,1144,1174,1168,1195,94,
            199,1663,388,1871,20,1082,17,21,18,897,
            43,35,1809,1871,20,1504,17,21,18,897,
            43,45,1054,273,1078,87,111,1073,1829,1221,
            96,1639,1172,2070,2009,1396,951,1860,1262,109,
            95,97,98,99,100,1030,1,1663,388,1871,
            20,1192,17,21,18,897,43,45,1054,823,
            110,369,1827,1073,1061,1133,1117,1875,1154,1946,
            387,87,111,1082,960,1221,96,107,1122,168,
            1542,295,299,1527,1262,109,95,97,98,99,
            100,352,264,1663,388,1668,2095,1823,20,314,
            17,21,18,897,353,1796,110,369,297,685,
            823,2882,254,213,1240,2090,387,87,111,2097,
            1082,1221,96,108,318,315,316,317,255,213,
            1262,109,95,97,98,99,100,413,2481,3059,
            1082,2921,1082,672,224,229,1568,318,315,316,
            317,811,110,369,218,456,221,223,2528,385,
            2535,830,387,2096,2278,1846,1996,413,293,107,
            2101,672,224,772,133,1663,388,2833,774,383,
            1082,325,218,456,221,223,1923,1847,20,620,
            17,21,18,897,41,1634,2054,1924,279,87,
            111,2109,2124,1221,96,318,315,316,317,784,
            1082,534,1262,109,95,97,98,99,100,155,
            662,2111,2921,1393,1385,534,450,106,1301,672,
            224,229,991,1710,110,369,2135,773,1060,311,
            219,456,221,223,387,413,1758,2882,940,1082,
            534,108,2091,1082,274,318,315,316,317,2154,
            1082,269,1281,1274,272,662,778,280,534,308,
            369,1560,2278,1670,3388,2882,1082,197,2562,672,
            224,229,3388,318,315,316,317,3388,259,3388,
            218,456,221,223,2582,197,3388,620,1437,1702,
            2263,3388,413,3388,2882,3388,1222,672,224,229,
            3388,3388,318,315,316,317,3388,3388,218,456,
            221,223,3388,3388,1222,1986,3388,155,662,2278,
            3388,3388,1477,1781,450,3388,672,224,229,3388,
            3388,2010,3388,3031,3388,193,3388,218,456,221,
            223,1643,1871,20,620,17,21,18,897,43,
            45,1054,3388,192,3388,3388,1073,1061,1133,1920,
            3388,3145,769,1998,3388,672,224,229,1436,3388,
            2476,198,3388,3388,156,662,218,456,221,223,
            3388,3388,1996,263,534,3388,277,3388,3388,1496,
            274,3388,318,315,316,317,3388,267,1281,1274,
            272,3388,672,224,229,3388,3388,3388,3388,2921,
            3388,2091,1336,218,456,221,223,264,3388,811,
            830,209,319,315,316,317,3388,274,2055,3388,
            2882,1470,1785,3388,267,1281,1274,272,318,315,
            316,317,3388,3388,3388,2617,3388,259,3388,3388,
            3388,3388,3388,3388,1755,2263,1542,1930,1702,3388,
            3388,261,672,224,229,1895,20,3388,17,21,
            18,897,34,218,456,221,223,3388,1871,20,
            1986,17,21,18,897,43,45,1054,254,213,
            1477,1781,1073,1061,1133,1117,2080,1154,1144,1936,
            3388,3388,3388,1670,3388,2882,318,315,316,317,
            398,3388,2971,319,315,316,317,3388,413,3388,
            2882,3388,3388,2921,3388,3388,3145,3388,319,315,
            316,317,657,1404,534,3388,199,672,224,229,
            3388,548,3388,49,3388,966,758,3388,218,456,
            221,223,672,224,229,1986,318,315,316,317,
            3388,2091,3388,218,456,221,223,1471,88,274,
            3139,3388,3388,2921,1092,758,267,1281,1274,272,
            672,224,1314,991,3388,318,315,316,317,209,
            3388,219,456,221,1250,3388,266,259,3388,1510,
            1785,3163,2921,758,1459,3388,388,1437,1702,672,
            224,229,991,318,315,316,317,844,1663,966,
            219,456,221,223,3388,3388,3388,3388,3388,88,
            2921,3388,3388,197,1169,1307,3388,672,224,1314,
            991,3388,87,111,892,1663,966,96,219,456,
            221,223,3388,3388,3388,1262,104,95,97,98,
            99,100,2270,3388,1006,1663,966,1384,1255,87,
            111,1054,1663,966,96,3388,3388,319,315,316,
            317,3388,1262,102,95,97,98,99,100,87,
            111,657,3388,534,96,3388,87,111,3388,3388,
            3388,96,1262,361,95,97,98,99,100,1262,
            103,95,97,98,99,100,2060,49,534,966,
            2091,1168,1663,966,3388,3388,318,315,316,317,
            1871,20,3388,17,21,18,897,43,45,1054,
            3388,3388,88,2921,1801,2091,87,111,1870,3388,
            3388,96,3388,811,3388,3388,259,3388,3388,1262,
            119,95,97,98,99,100,1999,1702,1216,1663,
            966,3388,3388,3388,3388,1264,1663,966,3388,1945,
            3388,259,1871,20,3388,17,21,18,897,43,
            48,1930,1702,87,111,1312,1663,966,96,3388,
            87,111,1360,1663,966,96,1262,115,95,97,
            98,99,100,1262,2015,95,97,98,99,100,
            87,111,1408,1663,966,96,3388,87,111,590,
            3388,484,96,1262,114,95,97,98,99,100,
            1262,121,95,97,98,99,100,87,111,3388,
            3388,3388,96,3388,3388,305,3388,369,557,3388,
            1262,120,95,97,98,99,100,318,315,316,
            317,3388,3388,1871,20,1113,17,21,18,897,
            43,45,1812,3388,2921,370,315,316,317,304,
            369,3388,3388,656,991,3388,3388,3388,3388,309,
            3388,1466,3388,318,315,316,317,135,213,3388,
            3388,370,315,316,317,3388,274,3388,3388,3388,
            2172,3388,3388,269,1281,1274,272,1531,3388,145,
            134,136,160,135,213,1991,3388,370,315,316,
            317,2001,301,303,3388,370,315,316,317,3388,
            406,370,315,316,317,148,134,136,160,135,
            213,3388,419,3388,966,1079,2847,135,213,3388,
            3388,3388,3388,135,213,319,315,316,317,3388,
            3388,151,134,136,160,3388,3388,88,125,154,
            134,136,160,1302,3388,365,134,136,160,1871,
            20,3388,17,21,18,897,43,45,1054,3388,
            3388,3388,3388,1073,1832,1871,20,723,17,21,
            18,897,43,45,1054,3388,3388,3388,3388,1073,
            1833,1871,20,3388,17,21,18,897,43,45,
            1054,3388,3388,3388,3388,1073,1845,1871,20,3388,
            17,21,18,897,43,45,1054,49,1432,966,
            2142,1073,1865,1871,20,3388,17,21,18,897,
            43,45,1054,758,3388,3388,277,1073,1869,3388,
            3388,3388,88,318,315,316,317,665,1890,484,
            1871,20,917,17,21,18,897,43,45,1817,
            2921,3388,318,315,316,317,3388,655,224,233,
            991,3388,1459,305,388,3388,557,274,1240,2725,
            3388,1102,1240,534,267,1281,1274,272,318,315,
            316,317,318,315,316,317,3388,88,1459,3388,
            388,197,1169,1307,1755,2921,3388,304,369,2921,
            197,3388,49,3388,966,811,3388,309,3388,811,
            3388,1533,1459,88,388,3388,3388,197,1169,1307,
            2270,319,315,316,317,3388,1463,88,1459,1222,
            388,2306,3388,1892,3388,2335,3388,88,951,3388,
            3388,197,1169,1307,3388,3388,2270,3388,3388,3388,
            302,303,1489,88,1459,3388,388,197,1169,1307,
            3388,1240,3388,3388,920,3388,966,3388,192,912,
            2270,318,315,316,317,3388,1515,1483,1998,88,
            1316,3388,388,197,1169,1307,2270,3388,2921,88,
            3388,3388,1541,3388,3388,116,1871,20,811,17,
            21,18,897,43,47,88,3388,3388,3388,1060,
            3388,116,2270,1459,920,388,966,3388,1566,3388,
            3388,1240,1871,20,2617,17,21,18,897,43,
            46,318,315,316,317,1509,3388,3388,88,88,
            1077,369,197,1169,1307,116,3388,3388,2921,1240,
            3388,1405,3388,423,3388,3388,3388,2040,811,318,
            315,316,317,318,315,316,317,319,315,316,
            317,2270,3388,3388,3388,3388,2921,1960,524,920,
            2427,966,3388,3388,1945,2010,811,3388,318,315,
            316,317,1895,20,3388,17,21,18,897,33,
            3388,3388,3388,2074,88,2427,49,2080,966,3388,
            116,3388,2363,318,315,316,317,318,315,316,
            317,1943,20,3388,17,21,18,897,1786,2069,
            3181,88,3388,3388,2921,2110,3388,2003,3388,318,
            315,316,317,3388,1482,318,315,316,317,784,
            2026,3388,3388,2126,3388,3388,3167,2085,3388,3388,
            3388,3388,3185,318,315,316,317,319,315,316,
            317,2100,3388,3388,860,2138,3388,3388,3388,2143,
            3189,319,315,316,317,319,315,316,317,319,
            315,316,317,3388,3388,3388,3388,3388,3388,3388,
            3388,3388,3388,3388,3388,3388,3388,3388,3388,3388,
            3388,3388,3388,3388,3388,3388,3388,3388,3388,3388,
            3388,3388,3388,3388,3388,3388,3388,3388,1688,3388,
            0,1,455,0,1,499,0,1,582,0,
            1,622,0,499,129,0,582,129,0,622,
            129,0,499,130,0,582,130,0,622,130,
            0,499,131,0,582,131,0,622,131,0,
            622,185,0,582,185,0,499,185,0,185,
            189,0,622,184,0,582,184,0,499,184,
            0,184,189,0,499,132,0,582,132,0,
            622,132,0,499,133,0,582,133,0,622,
            133,0,11,226,0,499,368,0,582,368,
            0,622,368,0,223,235,0,3396,1,0,
            622,380,0,582,380,0,499,380,0,592,
            32,0,2303,32,0,622,253,0,582,253,
            0,499,253,0,1,3625,0,223,236,0,
            179,20,0,8,10,0,1,3614,0,366,
            355,0,367,356,0,113,2555,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,0,0,37,38,39,
            40,41,42,43,44,45,46,47,0,49,
            50,51,52,53,54,55,56,57,58,59,
            60,25,62,63,64,65,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,66,67,37,38,39,40,41,42,43,
            44,45,46,47,0,49,50,51,52,53,
            54,55,56,57,58,59,60,13,62,63,
            64,65,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,0,0,37,
            38,39,40,41,42,43,44,45,46,47,
            0,49,50,51,52,53,54,55,56,57,
            58,59,60,13,62,63,64,65,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,66,67,37,38,39,40,41,
            42,43,44,45,46,47,0,49,50,51,
            52,53,54,55,56,57,58,59,60,13,
            62,63,64,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,0,0,
            37,38,39,40,41,42,43,44,45,46,
            47,0,49,50,51,52,53,54,55,56,
            57,58,59,60,0,62,63,64,0,1,
            2,0,4,5,6,7,8,9,0,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,0,27,28,29,30,31,
            32,33,0,0,66,67,3,4,0,1,
            7,8,4,35,6,7,8,49,50,51,
            52,53,54,55,56,57,58,59,60,26,
            62,63,64,0,1,0,3,0,1,6,
            3,6,0,35,11,12,82,14,15,16,
            48,48,0,1,2,0,4,0,0,7,
            8,3,0,6,2,0,4,5,35,7,
            8,68,35,36,0,1,2,3,84,5,
            6,48,0,9,26,11,12,13,14,15,
            16,17,18,19,20,21,22,23,65,66,
            67,68,28,70,71,72,73,74,75,76,
            0,78,79,80,81,82,83,84,85,86,
            87,88,89,90,91,92,93,94,95,96,
            97,0,1,68,3,80,81,6,0,0,
            98,2,11,12,5,14,15,16,10,10,
            68,77,0,88,89,90,91,92,93,94,
            95,96,97,0,0,2,35,4,5,0,
            7,8,0,1,2,3,0,5,6,48,
            4,9,0,11,12,13,14,15,16,17,
            18,19,20,21,22,23,65,66,67,68,
            28,70,71,72,73,74,75,76,0,78,
            79,80,81,82,83,84,85,86,87,88,
            89,90,91,92,93,94,95,96,97,0,
            1,2,3,4,5,6,7,8,9,0,
            0,1,2,3,4,37,6,7,8,77,
            10,0,1,24,25,26,27,28,29,30,
            31,32,33,34,24,25,26,27,28,29,
            30,31,32,33,0,35,36,3,49,50,
            51,52,53,54,55,56,57,58,59,60,
            0,62,63,64,4,0,0,7,8,4,
            26,0,7,8,0,1,2,3,4,5,
            6,7,8,9,24,25,0,27,28,29,
            30,31,32,33,0,1,2,98,24,25,
            26,27,28,29,30,31,32,33,34,49,
            50,51,52,53,54,55,56,57,58,59,
            60,0,1,49,50,51,52,53,54,55,
            56,57,58,59,60,69,62,63,64,0,
            1,2,3,0,5,6,3,61,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,0,26,2,0,1,2,
            99,4,98,34,7,8,37,38,39,40,
            41,42,43,44,45,46,47,0,24,2,
            3,4,5,0,7,8,9,4,0,1,
            2,3,4,10,6,7,8,0,65,0,
            1,24,25,0,27,28,29,30,31,32,
            33,34,24,25,26,27,28,29,30,31,
            32,33,0,35,36,3,49,50,51,52,
            53,54,55,56,57,58,59,60,35,62,
            63,64,65,0,1,2,3,0,5,6,
            0,1,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,0,26,
            73,74,75,76,0,78,79,34,11,12,
            37,38,39,40,41,42,43,44,45,46,
            47,0,1,2,3,48,5,6,0,77,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,0,0,26,2,0,
            4,5,3,7,8,34,0,1,37,38,
            39,40,41,42,43,44,45,46,47,0,
            0,2,3,4,5,26,7,8,9,0,
            0,1,2,3,4,36,6,7,8,0,
            0,35,2,24,25,5,27,28,29,30,
            31,32,33,34,24,25,26,27,28,29,
            30,31,32,33,69,35,36,0,49,50,
            51,52,53,54,55,56,57,58,59,60,
            0,62,63,64,65,0,1,2,3,0,
            5,6,0,1,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            0,26,73,74,75,76,0,78,79,34,
            11,12,37,38,39,40,41,42,43,44,
            45,46,47,0,1,2,3,0,5,6,
            0,1,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,0,26,
            2,0,4,5,3,7,8,34,0,1,
            37,38,39,40,41,42,43,44,45,46,
            47,0,0,2,3,4,5,0,7,8,
            9,0,0,2,3,0,4,36,61,7,
            8,0,86,87,13,24,25,0,27,28,
            29,30,31,32,33,34,24,25,61,27,
            28,29,30,31,32,33,69,36,0,1,
            49,50,51,52,53,54,55,56,57,58,
            59,60,0,62,63,64,65,0,1,2,
            3,0,5,6,3,48,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,0,0,26,73,74,75,76,83,78,
            79,34,11,12,37,38,39,40,41,42,
            43,44,45,46,47,0,1,2,3,0,
            5,6,3,61,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            69,26,0,4,2,26,7,8,77,34,
            0,1,37,38,39,40,41,42,43,44,
            45,46,47,0,1,2,3,48,5,6,
            0,1,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,0,26,
            2,4,0,5,7,8,0,34,10,0,
            37,38,39,40,41,42,43,44,45,46,
            47,0,1,2,3,0,5,6,3,4,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,0,0,26,0,4,
            2,26,7,8,6,34,10,48,37,38,
            39,40,41,42,43,44,45,46,47,0,
            1,2,3,0,5,6,3,0,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,0,26,2,4,0,26,
            7,8,0,34,2,0,37,38,39,40,
            41,42,43,44,45,46,47,0,1,2,
            3,48,5,6,0,1,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,0,1,26,3,0,1,2,3,0,
            1,34,3,48,37,38,39,40,41,42,
            43,44,45,46,47,0,1,2,0,4,
            5,69,7,8,9,0,35,36,10,4,
            35,36,7,8,0,36,0,0,2,24,
            25,5,27,28,29,30,31,32,33,24,
            25,14,27,28,29,30,31,32,33,0,
            0,2,3,0,49,50,51,52,53,54,
            55,56,57,58,59,60,0,62,63,64,
            0,0,2,0,4,5,0,7,8,9,
            0,10,0,10,4,36,4,7,8,7,
            8,0,0,1,24,25,0,27,28,29,
            30,31,32,33,24,25,10,27,28,29,
            30,31,32,33,61,24,25,0,27,49,
            50,51,52,53,54,55,56,57,58,59,
            60,14,62,63,64,0,1,2,3,0,
            5,6,66,67,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            1,2,3,0,5,6,3,0,9,0,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,1,2,0,4,0,6,
            7,8,0,1,2,0,1,5,6,36,
            65,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,0,35,0,
            1,2,0,4,61,0,7,8,0,1,
            2,0,10,5,6,10,77,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,0,1,2,0,68,5,6,0,
            1,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,2,48,
            61,5,6,66,67,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,0,0,5,6,0,0,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,2,0,0,5,
            6,0,0,9,6,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,1,
            2,0,0,5,6,24,25,9,27,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,0,1,2,68,0,5,6,0,
            0,9,6,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,2,71,
            72,5,6,24,25,9,27,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,0,0,5,6,0,0,9,
            6,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,2,71,72,5,
            6,24,25,9,27,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,1,
            2,0,0,5,6,0,0,9,0,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,0,1,2,71,72,5,6,24,
            25,9,27,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,2,0,
            0,5,6,3,0,9,0,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,0,1,0,4,0,0,7,8,4,
            0,6,7,8,4,83,36,7,8,0,
            1,2,3,0,24,25,3,27,28,29,
            30,31,32,33,24,25,35,27,28,29,
            30,31,32,33,0,0,1,3,4,0,
            0,7,8,4,35,36,7,8,0,0,
            15,16,3,0,0,1,2,48,4,0,
            26,7,8,4,69,6,7,8,0,0,
            35,2,4,0,5,7,8,4,65,0,
            7,8,48,4,0,36,7,8,4,0,
            0,7,8,3,0,0,0,48,3,0,
            0,0,68,4,35,70,7,8,0,0,
            0,0,0,4,3,61,7,8,24,25,
            85,27,10,0,0,0,36,3,69,4,
            0,36,7,8,0,82,35,0,48,70,
            10,4,0,48,7,8,4,36,0,7,
            8,0,0,0,2,66,67,5,10,0,
            0,10,66,67,0,0,0,0,0,61,
            10,70,0,0,10,0,0,0,0,0,
            80,81,0,0,61,0,0,0,0,65,
            0,0,0,0,84,61,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,61,0,0,0,0,0,
            61,0,0,0,0,0,61,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3388,1,5941,1735,3241,5935,1,1,1,1,
            925,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,3397,1,1,1,
            1,1,1,1,3489,55,344,1457,979,941,
            1210,1662,463,1359,1038,1652,2722,1612,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,3731,1,1,1,3395,8,3373,3373,3373,
            3373,3373,3373,3373,3373,3373,3373,3373,3373,3373,
            3373,3373,3373,3373,3373,3373,3373,3373,3373,3373,
            3373,3373,3373,3373,3373,3373,3373,3373,3373,3373,
            3373,800,2490,3373,3373,3373,3373,3373,3373,3373,
            3373,3373,3373,3373,349,3373,3373,3373,3373,3373,
            3373,3373,3373,3373,3373,3373,3373,904,3373,3373,
            3373,3373,3388,1,5941,1735,3241,5935,1,1,
            1,1,925,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3397,1,
            1,1,1,1,1,1,3489,358,286,1457,
            979,941,1210,1662,463,1359,1038,1652,2722,1612,
            3388,1,1,1,1,1,1,1,1,1,
            1,1,1,1040,1,1,1,3395,3388,1,
            5941,3398,3241,5935,1,1,1,1,925,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,3397,1,1,1,1,1,
            1,1,3489,800,2490,1457,979,941,1210,1662,
            463,1359,1038,1652,2722,1612,3388,1,1,1,
            1,1,1,1,1,1,1,1,1,904,
            1,1,1,3388,1,5941,3398,3241,5935,1,
            1,1,1,925,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,3397,
            1,1,1,1,1,1,1,3489,357,3388,
            1457,979,941,1210,1662,463,1359,1038,1652,2722,
            1612,3388,1,1,1,1,1,1,1,1,
            1,1,1,1,67,1,1,1,3388,2938,
            3399,3388,622,3400,1106,499,582,3131,220,876,
            838,3404,1753,3102,2225,1937,3401,3402,3403,739,
            521,1847,3602,3604,71,3603,3551,3552,3550,3605,
            3553,3549,347,235,800,2490,223,3334,268,2818,
            3334,3334,622,850,253,499,582,3556,3561,3560,
            3558,3559,3557,3562,3563,3555,3564,3565,3566,223,
            2852,3088,3063,1,3400,3388,3400,1,2818,3400,
            265,2256,3388,850,3400,3400,1115,3400,3400,3400,
            390,223,1,1859,3614,63,3250,3388,1,3244,
            3247,3398,185,3117,3289,43,3280,3289,3400,3286,
            3283,223,850,265,1,2938,3399,3392,2238,3400,
            663,3400,157,1090,3397,876,838,3404,1753,3102,
            2225,1937,3401,3402,3403,739,521,1847,3400,3400,
            3400,3400,915,3400,3400,3400,3400,3400,3400,3400,
            3388,3400,3400,3400,3400,3400,3400,3400,3400,3400,
            3400,3400,3400,3400,3400,3400,3400,3400,3400,3400,
            3400,1,3399,1419,3399,751,595,3399,3388,3388,
            3240,3399,3399,3399,3400,3399,3399,3399,417,1074,
            713,3391,3388,1393,1367,1341,1315,1289,1237,1263,
            1211,1185,1156,184,3388,3301,3399,3292,3301,3388,
            3298,3295,3388,2938,3399,3392,1,3400,701,3399,
            3241,1090,3388,876,838,3404,1753,3102,2225,1937,
            3401,3402,3403,739,521,1847,3399,3399,3399,3399,
            1497,3399,3399,3399,3399,3399,3399,3399,3388,3399,
            3399,3399,3399,3399,3399,3399,3399,3399,3399,3399,
            3399,3399,3399,3399,3399,3399,3399,3399,3399,3388,
            1,1,3398,3241,1,1,1,1,1,3388,
            356,367,367,3382,367,1983,3382,367,367,3391,
            5900,3388,926,1,1,3397,1,1,1,1,
            1,1,1,3694,367,367,3382,367,367,367,
            367,367,367,367,3388,367,3382,3398,1,1,
            1,1,1,1,1,1,1,1,1,1,
            129,1,1,1,3259,182,1,3253,3256,622,
            3397,113,499,582,3388,1,1,3398,3241,1,
            1,1,1,1,3602,3604,3388,3603,3551,3552,
            3550,3605,3553,3549,1,1859,3614,300,1,1,
            3397,1,1,1,1,1,1,1,3694,3556,
            3561,3560,3558,3559,3557,3562,3563,3555,3564,3565,
            3566,3388,569,1,1,1,1,1,1,1,
            1,1,1,1,1,3646,1,1,1,3388,
            1,5941,3398,1,5935,1,3337,2377,1,925,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,3388,326,3397,3715,253,1859,3614,
            3385,622,299,3489,499,582,1457,979,941,1210,
            1662,463,1359,1038,1652,2722,1612,3388,3716,1,
            191,1,1,1,1,1,1,3241,20,3370,
            179,3370,179,925,3370,179,179,60,3395,3388,
            792,1,1,271,1,1,1,1,1,1,
            1,3584,179,179,3370,179,179,179,179,179,
            179,179,3388,3370,3370,3392,1,1,1,1,
            1,1,1,1,1,1,1,1,850,1,
            1,1,191,3388,1,5941,3398,256,5935,1,
            3388,799,1,925,1,1,1,1,1,1,
            1,1,1,1,1,1,1,52,3388,3397,
            2823,2807,2791,2775,3388,2759,1763,3489,2850,2633,
            1457,979,941,1210,1662,463,1359,1038,1652,2722,
            1612,3388,1,5941,3398,1138,5935,1,3388,3391,
            1,925,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,206,3397,5936,1,
            622,5936,117,499,582,3489,222,605,1457,979,
            941,1210,1662,463,1359,1038,1652,2722,1612,3388,
            3388,1,190,1,1,117,1,1,1,3388,
            355,366,366,3379,366,117,3379,366,366,62,
            3388,850,3399,1,1,3400,1,1,1,1,
            1,1,1,3584,366,366,3379,366,366,366,
            366,366,366,366,3645,366,3379,3388,1,1,
            1,1,1,1,1,1,1,1,1,1,
            3388,1,1,1,190,3388,1,5941,3398,3388,
            5935,1,11,3322,1,925,1,1,1,1,
            1,1,1,1,1,1,1,1,1,54,
            3388,3397,2823,2807,2791,2775,73,2759,1763,3489,
            2850,2633,1457,979,941,1210,1662,463,1359,1038,
            1652,2722,1612,3388,1,5941,3398,3388,5935,1,
            3388,459,1,925,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3388,377,3397,
            5940,3388,622,5940,3394,499,582,3489,350,1010,
            1457,979,941,1210,1662,463,1359,1038,1652,2722,
            1612,3388,3388,1,191,1,1,3388,1,1,
            1,3388,130,1718,3394,69,3268,3393,2404,3262,
            3265,61,432,512,1693,1,1,89,1,1,
            1,1,1,1,1,3584,3602,3604,2431,3603,
            3551,3552,3550,3605,3553,3549,1523,3393,337,1411,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,191,3388,1,5941,
            3398,3388,5935,1,3392,1445,1,925,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,53,3388,3397,2823,2807,2791,2775,1799,2759,
            1763,3489,2850,2633,1457,979,941,1210,1662,463,
            1359,1038,1652,2722,1612,3388,1,5941,3398,3388,
            5935,1,3398,2,1,925,1,1,1,1,
            1,1,1,1,1,1,1,1,1,253,
            1725,3397,3388,622,1823,3397,499,582,3391,3489,
            3388,2990,1457,979,941,1210,1662,463,1359,1038,
            1652,2722,1612,3388,1,5941,3398,2052,5935,1,
            3388,2477,1,925,1,1,1,1,1,1,
            1,1,1,1,1,1,1,159,3388,3397,
            3399,622,3388,3400,499,582,3388,3489,1181,30,
            1457,979,941,1210,1662,463,1359,1038,1652,2722,
            1612,3388,1,5941,3398,1,5935,1,117,3241,
            1,925,1,1,1,1,1,1,1,1,
            1,1,1,1,1,378,229,3397,3388,622,
            1617,117,499,582,1727,3489,232,3417,1457,979,
            941,1210,1662,463,1359,1038,1652,2722,1612,3388,
            1,5941,3398,3388,5935,1,3398,3388,1,925,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,381,3388,3397,3626,622,3388,3397,
            499,582,1,3489,3364,207,1457,979,941,1210,
            1662,463,1359,1038,1652,2722,1612,3388,1,5941,
            3398,2188,5935,1,3388,2817,1,925,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2818,3397,3394,1,2128,3376,3394,3388,
            434,3489,3394,5928,1457,979,941,1210,1662,463,
            1359,1038,1652,2722,1612,1,1859,650,1,3250,
            3400,3646,3244,3247,1018,131,850,3393,925,3277,
            850,3393,3271,3274,3388,3393,208,65,3399,3602,
            3604,3400,3603,3551,3552,3550,3605,3553,3549,3602,
            3604,2102,3603,3551,3552,3550,3605,3553,3549,3388,
            3388,968,3394,3388,3556,3561,3560,3558,3559,3557,
            3562,3563,3555,3564,3565,3566,3388,2852,3088,3063,
            3388,3388,3399,3388,622,3400,59,499,582,1018,
            132,1378,380,1430,3310,3393,3340,3304,3307,3346,
            3343,3388,3388,2912,3602,3604,229,3603,3551,3552,
            3550,3605,3553,3549,3602,3604,233,3603,3551,3552,
            3550,3605,3553,3549,2424,3602,3604,66,3603,3556,
            3561,3560,3558,3559,3557,3562,3563,3555,3564,3565,
            3566,2102,2852,3088,3063,1,2938,4267,29,3388,
            4169,1106,800,2490,1090,5900,876,838,3404,1753,
            3102,2225,1937,3401,3402,3403,739,521,1847,3388,
            2938,3399,3392,3388,3400,1106,3394,3388,1090,3388,
            876,838,3404,1753,3102,2225,1937,3401,3402,3403,
            739,521,1847,268,2128,3614,3388,622,211,253,
            499,582,3388,2938,3399,324,886,3400,1106,3393,
            29,1090,5900,876,838,3404,1753,3102,2225,1937,
            3401,3402,3403,739,521,1847,3388,58,850,1,
            1859,3614,3388,3250,422,367,3244,3247,3388,2938,
            3399,30,1456,3400,1106,5900,3391,1090,5900,876,
            838,3404,1753,3102,2225,1937,3401,3402,3403,739,
            521,1847,1,2938,4267,3388,1548,4169,1106,3388,
            3116,1090,5900,876,838,3404,1753,3102,2225,1937,
            3401,3402,3403,739,521,1847,382,2938,3399,675,
            1625,3400,1106,800,2490,1090,5900,876,838,3404,
            1753,3102,2225,1937,3401,3402,3403,739,521,1847,
            3388,2938,3399,3388,3388,3400,1106,3388,3388,1090,
            5900,876,838,3404,1753,3102,2225,1937,3401,3402,
            3403,739,521,1847,3388,2364,3399,3388,49,3400,
            1106,249,3388,1090,3032,876,838,3404,1753,3102,
            2225,1937,3401,3402,3403,739,521,1847,3388,2872,
            3399,3388,3388,3400,1106,1,1,1090,1,876,
            838,3404,1753,3102,2225,1937,3401,3402,3403,739,
            521,1847,3388,2898,3399,812,51,3400,1106,248,
            3388,1090,3032,876,838,3404,1753,3102,2225,1937,
            3401,3402,3403,739,521,1847,3388,2922,3399,3006,
            2542,3400,1106,3602,3604,1090,3603,876,838,3404,
            1753,3102,2225,1937,3401,3402,3403,739,521,1847,
            3388,2938,3399,3388,50,3400,1106,250,3388,1090,
            3032,876,838,3404,1753,3102,2225,1937,3401,3402,
            3403,739,521,1847,3388,2964,3399,3006,2542,3400,
            1106,1,1,1090,1,876,838,3404,1753,3102,
            2225,1937,3401,3402,3403,739,521,1847,1,2938,
            3399,3388,70,3400,1106,251,3388,1090,3388,876,
            838,3404,1753,3102,2225,1937,3401,3402,3403,739,
            521,1847,3388,3023,3399,3006,2542,3400,1106,3602,
            3604,1090,3603,876,838,3404,1753,3102,2225,1937,
            3401,3402,3403,739,521,1847,332,2938,3399,3388,
            1,3400,1106,3394,3388,1090,3388,876,838,3404,
            1753,3102,2225,1937,3401,3402,3403,739,521,1847,
            133,270,1057,3388,3319,1,3388,3313,3316,3250,
            368,253,3244,3247,3331,1799,3393,3325,3328,1,
            2128,3614,262,3388,3602,3604,3396,3603,3551,3552,
            3550,3605,3553,3549,3602,3604,850,3603,3551,3552,
            3550,3605,3553,3549,236,32,3349,223,3367,372,
            3388,3367,3367,622,850,262,499,582,3388,3388,
            3414,3415,3394,68,1,1859,3614,262,3250,1,
            223,3244,3247,3250,3646,253,3244,3247,371,3388,
            3352,3399,622,183,3400,499,582,622,3395,253,
            499,582,223,3355,373,3393,3361,3358,622,57,
            3388,499,582,3394,252,3388,56,837,3394,379,
            64,292,223,622,1650,673,499,582,3388,200,
            72,1,356,622,91,1625,499,582,3602,3604,
            457,3603,5900,3388,285,374,3393,1377,3646,622,
            354,3393,499,582,201,1115,1700,375,1974,1353,
            5900,622,376,1028,499,582,622,91,42,499,
            582,3388,207,3388,414,800,2490,414,5900,1,
            189,5900,800,2490,381,1,3388,3388,3388,1573,
            206,1636,3388,3388,377,3388,3388,3388,3388,3388,
            751,595,3388,3388,1599,3388,3388,3388,3388,1377,
            3388,3388,3388,3388,2238,1675,3388,3388,3388,3388,
            3388,3388,3388,3388,3388,3388,3388,3388,3388,3388,
            3388,3388,3388,3388,3772,3388,3388,3388,3388,3388,
            3400,3388,3388,3388,3388,3388,3399
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            679,1,416,382,552,679,417,384,677,47,
            417,417,417,59,672,59,672,672,59,672,
            59,386,384,373,417,59,554,28,419,677,
            554,469,187,384,125,124,190,160,386,252,
            523,248,327,45,156,672,582,579,582,156,
            582,672,384,389,238,249,386,719,28,28,
            28,28,28,28,28,28,28,28,28,632,
            331,132,391,131,554,384,187,187,284,719,
            140,384,524,7,327,424,249,674,473,677,
            507,389,238,384,721,632,632,632,632,632,
            249,249,249,243,539,523,582,582,310,28,
            419,470,713,45,647,554,382,187,397,306,
            749,429,288,440,445,443,453,447,456,455,
            458,457,459,721,504,677,160,252,523,26,
            470,470,582,417,417,13,417,417,470,79,
            28,79,382,120,392,326,677,674,473,507,
            507,238,238,249,241,120,249,249,249,249,
            249,101,386,716,119,118,513,335,28,524,
            249,28,306,583,249,384,749,306,287,284,
            28,28,28,28,28,28,28,28,28,28,
            28,28,28,28,28,28,28,28,28,28,
            28,28,28,28,28,28,28,28,28,28,
            81,28,120,504,138,520,470,470,537,28,
            585,28,28,13,79,587,13,384,7,249,
            309,249,249,473,504,71,473,507,509,590,
            509,238,749,716,386,721,195,195,195,140,
            677,243,249,599,719,28,339,632,523,249,
            28,28,306,288,443,443,440,440,447,447,
            445,445,445,445,445,445,455,453,457,456,
            79,79,458,583,138,26,470,249,417,249,
            249,13,28,13,386,120,473,73,509,504,
            28,582,749,238,599,241,249,721,249,306,
            306,28,28,509,279,470,26,13,28,13,
            13,384,309,504,469,28,465,73,466,504,
            238,249,199,504,136,193,261,582,28,79,
            3,310,470,249,522,73,28,466,466,331,
            140,595,582,28,249,310,470,13,466,28,
            306,13,249,306,13
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            98,0,68,35,70,0,3,48,36,2,
            24,0,39,41,10,45,47,42,37,43,
            44,40,38,46,34,26,3,1,18,19,
            20,2,5,15,16,14,6,11,12,21,
            22,17,23,9,13,0,57,49,54,52,
            53,51,50,55,56,58,59,60,35,48,
            36,33,30,28,29,32,24,27,25,31,
            26,3,6,2,1,4,8,7,61,0,
            17,18,19,20,13,2,5,1,15,16,
            14,6,11,12,21,22,9,23,61,0,
            29,24,30,31,32,27,28,33,25,2,
            6,61,26,7,8,4,10,1,35,36,
            3,48,0,1,68,26,7,8,4,35,
            48,36,3,61,0,3,65,35,70,1,
            18,19,20,13,15,16,14,6,11,12,
            21,22,17,23,9,2,5,10,0,50,
            62,30,51,31,52,53,32,27,54,55,
            28,63,33,64,56,57,25,58,59,60,
            2,5,9,24,49,29,7,8,4,3,
            48,26,68,0,61,69,77,65,32,28,
            33,31,30,29,14,11,12,71,72,66,
            67,73,74,75,76,80,81,82,83,84,
            86,87,68,88,89,90,91,92,93,94,
            95,96,97,78,79,10,26,24,27,25,
            48,2,6,7,8,4,35,1,36,3,
            0,10,3,68,48,26,7,8,4,0,
            68,1,18,19,20,13,15,16,14,6,
            11,12,21,22,17,23,9,10,2,5,
            35,70,0,24,27,25,28,15,16,14,
            6,11,12,21,22,17,23,9,1,2,
            5,18,19,20,13,77,3,0,48,17,
            18,19,20,5,1,15,16,14,6,11,
            12,21,22,9,23,13,36,3,2,0,
            61,69,77,65,70,85,15,16,35,14,
            11,12,71,72,66,67,73,74,75,76,
            80,81,82,83,84,86,87,68,88,89,
            90,91,92,93,94,95,96,97,48,78,
            79,36,29,24,30,31,32,27,28,33,
            25,26,3,2,1,7,8,4,6,0,
            61,3,48,36,1,0,24,27,15,16,
            14,6,11,12,21,22,17,23,9,2,
            5,18,19,20,13,25,1,0,3,61,
            36,13,0,2,3,36,1,0,68,88,
            89,90,91,92,94,93,95,96,97,6,
            71,72,11,12,67,66,73,74,75,76,
            78,79,80,81,14,82,83,84,69,77,
            36,65,86,87,61,7,8,4,48,26,
            3,0,29,49,24,50,62,30,51,31,
            52,53,32,27,54,55,28,63,33,64,
            56,57,25,58,59,60,2,5,9,7,
            8,4,34,3,65,0,2,5,3,65,
            48,0,3,61,77,36,26,48,0,36,
            98,99,65,39,41,10,45,47,42,37,
            43,44,40,38,46,34,3,26,18,19,
            20,13,15,16,14,11,12,21,22,17,
            23,6,1,9,62,63,64,57,49,54,
            52,53,51,50,55,56,58,59,60,33,
            30,28,29,32,24,27,25,31,7,8,
            4,5,2,0,37,0,61,69,0,3,
            48,65,68,0,77,3,69,0,6,29,
            49,24,50,62,30,51,31,52,53,32,
            27,54,55,28,63,33,64,56,57,25,
            58,59,60,2,5,9,69,4,8,7,
            0,17,18,19,20,13,1,15,16,14,
            6,11,12,21,22,23,29,49,24,50,
            62,30,51,31,52,53,32,27,54,55,
            28,63,33,64,56,57,25,58,59,60,
            9,2,5,7,8,4,10,0,98,29,
            49,24,50,62,30,51,31,52,53,32,
            27,54,55,28,63,33,64,56,57,25,
            58,59,60,5,1,9,7,8,26,3,
            34,4,2,6,0,6,1,35,36,3,
            29,49,50,62,30,51,31,52,53,32,
            54,55,28,63,33,64,56,57,58,59,
            60,2,5,9,7,8,4,69,24,27,
            25,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            176,43,21,181,32,189,43,82,65,95,
            43,43,43,96,87,96,87,87,96,87,
            96,157,144,43,43,96,89,58,74,65,
            153,182,87,160,23,23,43,43,157,43,
            12,187,67,43,8,163,8,163,8,8,
            8,163,167,43,163,187,157,186,58,58,
            58,58,58,58,58,58,58,58,58,171,
            43,187,43,43,98,143,163,87,70,186,
            60,165,104,19,79,43,187,87,153,43,
            153,43,87,85,117,171,171,171,171,171,
            187,187,187,151,1,12,25,25,52,173,
            74,182,43,74,126,35,181,163,57,72,
            63,43,71,43,43,43,43,43,43,43,
            43,43,43,131,153,43,43,43,113,180,
            182,182,8,43,43,27,43,43,182,43,
            76,43,181,187,43,187,43,163,139,153,
            8,87,153,187,149,43,187,187,187,187,
            187,16,157,184,23,23,43,43,58,104,
            187,58,72,43,187,143,63,72,71,48,
            58,58,58,58,58,58,58,58,58,58,
            58,58,58,58,58,58,58,58,58,58,
            58,58,58,58,58,58,58,58,58,58,
            44,58,187,13,153,43,182,182,193,173,
            43,173,173,27,43,43,27,83,19,187,
            58,187,187,153,13,181,135,8,102,43,
            43,153,63,148,157,117,16,16,16,15,
            16,122,187,155,186,58,43,171,113,187,
            58,58,72,71,43,43,43,43,43,43,
            43,43,43,43,43,43,43,43,43,43,
            43,43,43,43,56,195,182,187,43,187,
            187,27,58,27,157,187,139,143,102,13,
            58,8,63,48,155,120,187,117,187,72,
            72,58,58,102,110,182,195,27,173,27,
            27,84,58,13,182,58,43,160,87,13,
            48,187,16,13,55,43,60,8,58,43,
            10,195,182,187,43,143,58,87,163,50,
            60,72,8,58,187,195,182,27,163,58,
            72,27,187,72,27
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            95,102,93,92,84,91,90,1,0,136,
            0,2,53,0,6,51,50,0,117,0,
            142,0,59,0,103,0,1,38,2,39,
            0,34,2,100,95,102,94,93,92,84,
            91,90,0,2,31,122,0,32,0,132,
            0,2,123,0,112,51,2,6,0,6,
            51,0,85,0,115,0,141,18,0,2,
            6,49,0,101,0,6,144,0,18,119,
            0,48,2,36,34,46,27,0,84,78,
            79,80,81,87,72,54,0,29,2,138,
            0,88,0,29,2,1,38,105,0,1,
            145,0,38,1,77,53,2,29,0,34,
            46,68,67,27,0,2,29,60,30,0,
            128,2,29,0,2,58,97,0,107,2,
            58,0,27,46,34,2,0,18,34,46,
            67,68,2,0,2,29,27,63,0,46,
            34,2,10,0,46,48,27,34,36,0,
            58,30,2,31,0,137,2,29,0,31,
            2,26,0,67,68,2,18,0,2,29,
            113,0,29,60,2,71,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            2,87,89,99,88,9,97,98,95,3,
            10,11,86,8,6,7,70,83,84,85,
            12,13,96,50,78,94,66,71,46,57,
            62,65,74,100,1,92,79,47,48,51,
            52,53,59,60,61,67,73,42,49,54,
            58,63,64,68,69,76,77,80,81,82,
            29,56,72,75,93,16,17,31,30,4,
            14,15,18,19,20,21,91,43,44,22,
            23,24,25,26,5,27,28,32,33,34,
            35,36,37,38,39,40,41,101,55,90
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            106,0,0,0,0,108,112,113,114,190,
            0,0,0,115,116,117,118,103,119,120,
            121,122,123,0,0,105,191,124,133,129,
            107,141,0,164,0,167,0,125,128,0,
            0,0,0,0,161,163,0,165,102,111,
            0,151,104,140,0,0,0,155,166,132,
            0,127,162,110,175,178,179,180,0,0,
            0,143,150,0,168,174,131,144,145,146,
            147,148,149,152,173,177,198,0,134,135,
            136,137,138,139,142,0,154,158,160,169,
            195,197,109,126,130,0,153,157,0,159,
            172,182,187,0,189,0,192,0,194,0,
            0,0,0,0,0,156,0,170,171,176,
            181,0,183,184,0,185,186,188,0,0,
            193,0,0,196,199,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            202,258,334,220,314,125,151,157,286,99,
            363,385,342,1,108,141,167,187,67,266,
            324,35,35,59,63,75,81,113,163,237,
            302,75,421,428,432,359,381,394,408,394,
            348,15,27,56,8,8,117,120,172,120,
            197,120,247,252,255,311,436,50,87,93,
            133,241,87,405,415,415,8,133,276,210,
            372,210,276,20,20,41,233,41,41,41,
            41,41,309,403,20,20,45,146,175,146,
            175,175
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            79,79,321,79,321,131,6,6,79,105,
            369,391,329,6,39,131,6,39,72,271,
            329,39,39,39,39,79,85,39,6,235,
            235,79,39,39,6,321,321,321,412,398,
            352,18,18,39,6,6,39,123,6,182,
            39,200,250,250,250,235,39,53,90,96,
            148,244,306,53,418,425,11,136,271,227,
            375,213,279,25,33,43,235,292,294,296,
            298,300,235,235,22,30,47,148,184,136,
            177,192
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            80,78,43,80,43,63,59,59,78,50,
            43,42,43,146,69,63,59,36,11,78,
            43,87,7,7,116,115,70,69,59,97,
            60,30,7,6,6,43,42,42,24,42,
            43,108,83,4,136,135,67,86,59,100,
            34,52,79,79,79,44,4,40,70,112,
            63,97,60,40,8,6,146,63,78,80,
            43,80,78,108,83,102,97,94,93,92,
            91,90,60,41,108,83,144,63,36,63,
            48,36
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            65,65,36,65,36,24,77,77,65,65,
            36,99,26,77,36,24,77,36,36,10,
            26,36,36,36,36,65,10,36,77,26,
            26,65,36,36,77,36,36,36,61,36,
            26,7,7,36,77,77,36,1,77,2,
            36,2,2,2,2,26,36,61,2,68,
            6,2,2,61,36,36,69,6,10,10,
            37,2,2,2,2,9,26,2,62,63,
            63,57,26,26,2,2,69,6,1,6,
            1,1
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            141,141,38,141,38,208,54,54,141,17,
            38,38,38,3,58,208,54,146,164,141,
            38,141,65,65,14,138,224,58,54,8,
            221,30,65,65,65,38,38,38,101,38,
            38,5,159,65,1,3,58,60,54,217,
            146,152,141,141,141,38,65,38,224,135,
            208,8,221,38,72,65,3,208,141,141,
            38,141,141,5,159,142,8,142,142,142,
            142,142,221,38,5,159,12,208,146,208,
            148,146
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            162,69,162,35,0,102,0,162,35,0,
            30,127,102,0,198,127,0,191,0,127,
            0,158,191,0,158,0,152,127,0,151,
            191,0,151,0,164,1,9,0,103,0,
            195,0,198,0,162,0,30,127,0,244,
            39,0,29,128,0,130,1,0,164,1,
            23,0,240,1,217,0,239,1,1,7,
            0,103,103,0,205,102,10,0,104,0,
            200,102,129,0,189,0,102,129,0,169,
            189,0,233,102,0,31,150,0,188,231,
            102,10,151,0,104,0,0,175,102,1,
            167,0,175,102,1,0,186,1,0,163,
            102,0,178,0,102,137,6,137,163,0,
            173,0,137,163,0,9,0,0,173,0,
            102,137,6,137,0,137,0,9,0,0,
            128,28,211,102,35,0,128,211,102,28,
            35,0,128,28,35,0,128,211,102,35,
            0,128,35,0,134,0,2,0,170,103,
            0,167,0,2,103,0,175,102,1,134,
            0,2,0,168,103,0,152,1,0,161,
            0,188,209,102,10,101,227,62,0,227,
            62,0,106,3,0,0,0,104,0,188,
            209,102,10,227,62,0,3,0,0,0,
            104,0,158,0,105,0,226,102,158,0,
            102,158,0,156,105,0,196,62,0,106,
            0,196,64,0,196,63,0,206,102,10,
            225,101,224,184,0,225,101,224,184,0,
            3,0,0,104,0,224,184,0,106,0,
            3,0,0,104,0,206,102,10,224,184,
            0,147,0,146,0,145,0,144,0,143,
            0,189,102,129,0,134,105,0,129,0,
            131,46,0,171,126,171,160,1,43,0,
            103,128,0,171,160,1,43,0,105,0,
            103,128,0,171,126,171,126,171,1,43,
            0,171,126,171,1,43,0,171,1,43,
            0,105,0,105,0,103,128,0,131,1,
            37,0,131,1,37,139,42,0,103,105,
            0,139,42,0,79,2,107,103,105,0,
            131,1,47,0,139,118,131,1,45,0,
            55,128,0,131,1,45,0,103,128,55,
            128,0,138,0,162,39,0,131,87,123,
            0,29,124,0,164,1,0,103,113,0,
            164,1,17,0,103,111,0,223,1,106,
            0,131,35,106,0,131,1,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            413,0,1783,0,2188,2023,0,2881,1998,2016,
            0,941,0,837,434,0,812,774,675,1301,
            637,1276,423,1249,1017,711,635,713,0,3023,
            1959,2964,2938,2922,2898,2872,2364,2582,2562,2555,
            2535,2528,2481,2431,2424,1924,2404,2377,1842,463,
            1796,1750,0,1281,1274,672,456,1945,2617,2128,
            2818,2091,2270,0,3131,3102,2225,1937,1847,1090,
            1018,701,423,432,1799,2238,2102,1115,2823,2807,
            2791,2775,2759,1763,751,595,2850,2633,2490,800,
            3032,3006,2542,663,1753,1106,876,838,739,521,
            1725,1700,812,1675,1650,774,1625,1028,1599,1573,
            1548,1523,1497,1471,1445,886,1419,1393,1367,1341,
            1315,1289,1263,1237,1211,1185,1156,992,966,941,
            915,388,713,850,675,637,0,773,753,0,
            1071,534,388,484,0,2833,484,2363,1945,2335,
            2306,2188,2263,2023,2128,2091,2278,1859,1887,1995,
            2052,1053,0,3189,3185,3163,2188,3145,2263,2363,
            1945,2023,2617,1887,1995,3117,3181,3167,534,388,
            2335,2256,3113,2306,3139,3067,2052,2921,2833,2725,
            2427,2172,2278,620,1071,2701,2695,2852,2687,3088,
            3063,2661,2653,2635,498,1053,484,2476,3059,2142,
            3031,2971,2882,2878,1864,0,1887,1053,484,0,
            2990,1959,1137,1924,1842,1796,1750,2847,2589,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,221,4,129,102,237,242,102,200,190,
            7,8,4,191,184,192,64,63,193,62,
            194,102,1,2,134,202,195,9,1,200,
            229,189,152,127,146,134,183,148,102,136,
            10,1,1,1,224,127,196,127,196,227,
            196,127,163,137,127,152,102,1,9,23,
            17,22,21,12,11,6,14,16,15,1,
            106,243,13,201,102,48,127,152,35,1,
            68,163,102,1,241,2,13,101,10,101,
            10,137,6,163,102,1,1,1,1,1,
            130,164,131,158,102,10,85,70,1,35,
            61,118,1,48,238,102,129,127,28,128,
            102,107,6,109,115,114,117,116,120,119,
            122,121,123,102,10,151,148,136,205,46,
            38,40,44,43,37,42,47,45,138,41,
            39,101,129,239,217,1,225,127,102,10,
            102,6,137,175,129,176,164,164,164,164,
            164,118,102,1,168,167,204,101,9,102,
            223,102,131,6,2,102,102,128,211,185,
            97,96,95,93,94,92,91,90,89,88,
            68,72,71,6,66,67,12,11,81,80,
            79,78,76,75,74,73,82,14,84,83,
            87,86,228,102,10,3,131,101,1,1,
            139,1,1,61,244,162,61,102,48,118,
            1,13,2,10,206,158,207,102,209,101,
            210,137,102,1,102,48,118,118,118,118,
            118,163,186,102,1,48,107,1,205,2,
            211,28,128,6,114,114,109,109,116,116,
            115,115,115,115,115,115,119,117,121,120,
            222,131,122,48,102,160,171,131,37,131,
            131,61,69,61,102,240,102,102,209,188,
            68,48,102,185,102,163,175,102,164,128,
            128,61,61,231,102,171,126,118,1,118,
            118,163,48,206,226,61,152,127,198,188,
            185,175,118,188,48,233,245,70,35,101,
            234,126,171,131,139,48,61,198,127,153,
            68,162,70,35,171,126,118,99,127,69,
            162,118,171,162,118
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            ">?",
            "<?",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "initializer_seq",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "extended_asm_param",
            "case_range_expression",
            "typeof_declaration_specifiers",
            "typeof_type_specifier",
            "field_name_designator"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 34,
           SCOPE_UBOUND      = 91,
           SCOPE_SIZE        = 92,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 375,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3775,
           MAX_LA            = 2147483647,
           NUM_RULES         = 387,
           NUM_NONTERMINALS  = 147,
           NUM_SYMBOLS       = 247,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2589,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 98,
           EOLT_SYMBOL       = 98,
           ACCEPT_ACTION     = 3240,
           ERROR_ACTION      = 3388;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
