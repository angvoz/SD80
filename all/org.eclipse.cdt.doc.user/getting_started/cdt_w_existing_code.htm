<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html lang="en">
<head>
	<meta http-equiv="Content-Language" content="en-us">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>How to bring C/C++ source files into Eclipse</title>
	<link rel="stylesheet" type="text/css" href="../help.css">
</head>

<body>

<h1>How to bring C/C++ source files into Eclipse</h1>

<p>A common scenario that you may encounter when starting to use the CDT, is determining how 
to bring existing C/C++ source files into Eclipse. There are a number of ways to 
do this. The scenarios described below are recommended approaches.</p>

<h2>Create a project from CVS</h2>

<p>If your existing source tree is managed in CVS, you can use the CVS 
Repository perspective to &quot;Checkout As...&quot; any folder in the repository. 
The first time you &quot;Checkout As...&quot;, the New Project wizard is launched and you need to 
create a C or C++ project for the folder. For more information, see
<a href="../tasks/cdt_t_proj_new.htm">Creating a project</a> and
<a href="../tasks/cdt_o_proj_files.htm">Working with C/C++ project files</a>.</p>

<p>A CVS checkout of the project into the project's location occurs.  It is recommended that you eventually add and commit the CDT project files aback into CVS.  
The CDT project files include .project, .cdtproject and .cdtbuild (for Managed Build projects) and are located at the root folder of each CDT project.</p>


<h2>Create new projects from existing source roots</h2>

If your resource code is not managed in CVS but is available from the file system, then you need to perform two steps:
<ol>
	<li>Identify a "root folder" of your source code tree.</li>
	<li>Create a new C/C++ project using the New Project Wizard, and specify the "root folder" as a non-default location of the new project.</li>
</ol>
<p>Typically existing projects will have their own makefiles, so you should create a new Standard Make C/C++ project.  For more information see 
<a href="../tasks/cdt_t_proj_new.htm">Creating a project</a> and
<a href="../tasks/cdt_o_proj_files.htm">Working with C/C++ project files</a>.</p>

<p>To help you to identify a root folder for your project, consider the following guidelines:
<ul>
	<li>all source code for the project is available on or beneath the root folder</li>
	<li>the build results are also produced in or beneath the root folder</li>
	<li>there is often a makefile in the root folder.  In complex projects, the makefile in the root folder calls other makefiles in other directories to produce the build results.</li>
	<li>external header files and library files do not need to be in or beneath the root folder.</li>
</ul></p>

<p>The resources for the project are maintained in the remote location specified, 
not in the workspace folder for Eclipse. However, your existing folder structure 
is displayed in the C/C++ Projects view. Meta data for the project, such as the 
index for the project and the link to the existing source, is stored in the metadata 
directory in the workspace folder. For more information on the workspace folder, 
see <b>Workbench User Guide &gt; Tasks &gt; Upgrading Eclipse</b>.</p>

Once you create a CDT project, you cannot easily move it or redefine its root folders.  
If you need to, you can delete the CDT project (without deleting its contents) and then 
recreate it specifying a different non-default location.

<h2>Import your C/C++ source file system</h2>

<p>Another approach would be to create a C/C++ Project and then import your 
existing file system.

For more information, see <b>Workbench User Guide &gt; Tasks &gt; Importing &gt; 
Importing resources from the file system</b>.</p>

<p>This approach copies the files from your file system to an Eclipse Workbench 
project or folder. Your original source files remain unchanged and it is the 
copies of the files that will be edited, built and debugged using the CDT.&nbsp; 
When you have successfully imported your existing file system, the folder 
structure is displayed in the C/C++ Projects view.  Again, you should identify an
appropriate "root folder" to import from.</p>

<p><b>Tip:</b>

<ul>
  <li>Importing your existing file system can consume significant disk space 
  depending on the size of your files.</li>
  <li>Your files may become detached from an existing source control system that 
  previously referenced the original file location such as a ClearCase view.</li>
</ul></p>

<p><img border="0" src="../images/ngconcepts.gif" ALT="Related concepts" width="143" height="21">
<br>
<a href="../concepts/cdt_c_over_cdt.htm">Overview of the CDT</a><br>
&nbsp;<a href="../concepts/cdt_c_projects.htm">CDT Projects</a></p>
<p><img border="0" src="../images/ngtasks.gif" ALT="Related tasks" width="143" height="21">
<br>
<a href="../tasks/cdt_o_proj_files.htm">Working with C/C++ project files</a></p>
<p><img border="0" src="../images/ngref.gif" ALT="Related reference" width="143" height="21">
<br>
<a href="../reference/cdt_o_proj_prop_pages.htm">Project properties</a></p><p>

<img src="../images/ng03_04.gif" ALT="IBM Copyright Statement" BORDER=0 width="324" height="14">

</body>

</html>