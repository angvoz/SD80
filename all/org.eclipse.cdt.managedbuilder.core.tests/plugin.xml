<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin
   id="org.eclipse.cdt.managedbuilder.core.tests"
   name="Tests"
   version="3.0.0"
   provider-name="Eclipse.org"
   class="org.eclipse.cdt.managedbuilder.testplugin.CTestPlugin">
   <runtime>
      <library name="mbscoretests.jar">
         <export name="*"/>
      </library>
   </runtime>

   <requires>
      <import plugin="org.eclipse.core.runtime"/>
      <import plugin="org.junit"/>
      <import plugin="org.eclipse.cdt.managedbuilder.core"/>
      <import plugin="org.eclipse.cdt.core"/>
      <import plugin="org.eclipse.cdt.make.core"/>
      <import plugin="org.eclipse.core.resources"/>
      <import plugin="org.eclipse.ui"/>
      <import plugin="org.eclipse.ui.ide"/>
      <import plugin="org.eclipse.compare"/>
   </requires>

<!-- Managed Make Builder Tool Specifications - CDT 2.0 format -->

   <extension
         id="buildTest"
         name="Tools for Build Test"
         point="org.eclipse.cdt.managedbuilder.core.ManagedBuildInfo">
         
	  <!-- Test tools and project types that primarily test support for the old extension point,
	       and reading and writing elements and attributes   -->
      <tool
            natureFilter="both"
            name="Target Independent Tool"
            sources="rc"
            headerExtensions="h"
            outputFlag="/fo"
            command="RC.EXE"
            outputs="free"
            id="target.independent.tool">
         <optionCategory
               owner="target.independent.tool"
               name="Free"
               id="indy.cat.free">
         </optionCategory>
         <option
               defaultValue="Live free or die"
               name="String in Free"
               category="indy.cat.free"
               valueType="string"
               id="indy.cat.free.string">
         </option>
         <optionCategory
               owner="indy.cat.free"
               name="Chained"
               id="indy.cat.chained">
         </optionCategory>
         <option
               defaultValue="false"
               name="Boolean in Chained"
               category="indy.cat.chained"
               valueType="boolean"
               id="indy.cat.chained.boolean">
         </option>
      </tool>
      <target
            name="Test Root"
            id="test.root"
            cleanCommand="del /myworld"
            isTest="true"
            defaultExtension="toor"
            isAbstract="false"
            makeCommand="make"
            binaryParser="org.eclipse.cdt.core.PE"
            makeArguments="-k"
            osList="win32">
         <tool
               natureFilter="cnature"
               sources="foo,bar"
               name="Root Tool"
               headerExtensions="baz"
               outputFlag="-r"
               outputs="toor"
               command="doIt"
               id="root.tool">
            <optionCategory
                  owner="root.tool"
                  name="Category"
                  id="category">
            </optionCategory>
            <option
                  name="List Option in Top"
                  command="-L"
                  valueType="stringList"
                  id="list.option">
               <listOptionValue
                     value="a">
               </listOptionValue>
               <listOptionValue
                     value="b"
                     builtIn="false">
               </listOptionValue>
               <listOptionValue
                     value="c"
                     builtIn="true">
               </listOptionValue>
            </option>
            <option
                  defaultValue="false"
                  name="Boolean Option in Top"
                  command="-b"
                  valueType="boolean"
                  id="boolean.option">
            </option>
            <option
                  defaultValue="x"
                  name="String Option in Category"
                  category="category"
                  valueType="string"
                  id="string.option">
            </option>
            <option
                  defaultValue=""
                  name="Another String Option in Category"
                  category="category"
                  command="-str"
                  id="another.string.option"
                  valueType="string">
            </option>
            <option
                  name="Enumerated Option in Category"
                  category="category"
                  valueType="enumerated"
                  id="enumerated.option">
               <enumeratedOptionValue
                     name="Default Enum"
                     isDefault="true"
                     command="-e1"
                     id="default.enum.option">
               </enumeratedOptionValue>
               <enumeratedOptionValue
                     name="Another Enum"
                     command="-e2"
                     id="another.enum.option">
               </enumeratedOptionValue>
            </option>
            <option
                  commandFalse="-nob"
                  name="Boolean Option in Category"
                  category="category"
                  id="boolean.false.option"
                  valueType="boolean">
            </option>
         </tool>
         <configuration
               name="Root Config"
               id="root.config">
         </configuration>
         <configuration
               name="Root Override Config"
               id="root.override.config">
            <toolReference
                  id="root.tool">
               <optionReference
                     defaultValue="y"
                     id="string.option">
               </optionReference>
               <optionReference
                     defaultValue="true"
                     id="boolean.option">
               </optionReference>
            </toolReference>
         </configuration>
         <configuration
               name="Complete Override Config"
               id="complete.override.config">
            <toolReference
                  id="root.tool">
               <optionReference
                     defaultValue="overridden"
                     id="string.option">
               </optionReference>
               <optionReference
                     defaultValue="alsooverridden"
                     id="another.string.option">
               </optionReference>
               <optionReference
                     defaultValue="true"
                     id="boolean.option">
               </optionReference>
               <optionReference
                     defaultValue="true"
                     id="boolean.false.option">
               </optionReference>
               <optionReference
                     defaultValue="another.enum.option"
                     id="enumerated.option">
               </optionReference>
               <optionReference
                     id="list.option">
                  <listOptionValue
                        value="d">
                  </listOptionValue>
                  <listOptionValue
                        value="e">
                  </listOptionValue>
                  <listOptionValue
                        value="f">
                  </listOptionValue>
               </optionReference>
            </toolReference>
         </configuration>
      </target>
      <target
            name="Test Sub"
            id="test.sub"
            cleanCommand="rm -yourworld"
            isTest="true"
            defaultExtension="bus"
            isAbstract="false"
            binaryParser="org.eclipse.cdt.core.PE"
            archList="x86,ppc"
            parent="test.root"
            makeArguments="-d"
            osList="win32,linux,solaris">
         <configuration
               name="Sub Config"
               id="sub.config">
         </configuration>
         <tool
               natureFilter="both"
               sources="yarf"
               name="Sub Tool"
               headerExtensions="arf,barf"
               outputs="bus"
               outputPrefix="lib"
               id="tool.sub">
            <option
                  name="Include Paths"
                  command="-I"
                  browseType="directory"
                  valueType="includePath"
                  id="sub.tool.opt.inc.paths">
               <listOptionValue
                     value="/usr/include">
               </listOptionValue>
               <listOptionValue
                     value="/opt/gnome/include">
               </listOptionValue>
               <listOptionValue
                     value="/usr/gnu/include"
                     builtIn="true">
               </listOptionValue>
            </option>
            <option
                  name="Defined Symbols"
                  command="-D"
                  valueType="definedSymbols"
                  id="sub.tool.opt.def.symbols">
               <listOptionValue
                     value="BUILTIN"
                     builtIn="true">
               </listOptionValue>
            </option>
            <option
                  name="More Includes"
                  command="-I"
                  browseType="directory"
                  valueType="includePath"
                  id="sub.tool.opts.inc.paths.more">
               <listOptionValue
                     value="C:\home\tester/include"
                     builtIn="false">
               </listOptionValue>
               <listOptionValue
                     value="&quot;../includes&quot;"
                     builtIn="false">
               </listOptionValue>
            </option>
            <option
                  name="User Objects"
                  browseType="file"
                  valueType="userObjs"
                  id="sub.tool.opt.objs">
               <listOptionValue
                     value="obj1.o"
                     builtIn="false">
               </listOptionValue>
               <listOptionValue
                     value="obj2.o"
                     builtIn="false">
               </listOptionValue>
            </option>
            <option
                  valueType="stringList"
                  name="No Command StringList"
                  id="sub.tool.string.list">
               <listOptionValue value="x"/>
               <listOptionValue value="y"/>
               <listOptionValue value="z"/>
            </option>
         </tool>
      </target>
      <target
            isTest="true"
            name="Test Sub Sub"
            parent="test.sub"
            binaryParser="org.eclipse.cdt.core.ELF"
            defaultExtension="tss"
            makeCommand="nmake"
            id="test.sub.sub">
         <toolReference
               id="target.independent.tool">
            <optionReference
                  defaultValue="true"
                  id="indy.cat.chained.boolean"/>
         </toolReference>
         <configuration
               name="Sub Sub Config"
               id="sub.sub.config"/>
      </target>
      <dynamicElementProvider
            name="Test Target Provider"
            class="org.eclipse.cdt.managedbuilder.core.tests.TestManagedConfigProvider">
      </dynamicElementProvider>
      <target
            isTest="true"
            name="Forward Grandchild"
            parent="test.forward.child.target"
            binaryParser="org.eclipse.cdt.core.tests.target1"
            id="test.forward.grandchild.target">
         <toolReference
               command="newcommand"
               id="test.forward.tool">
         </toolReference>
      </target>
      <target
            isTest="true"
            osList="win32,solaris,linux"
            name="Forward Child"
            binaryParser="org.eclipse.cdt.core.tests.target2"
            parent="test.forward.parent.target"
            id="test.forward.child.target">
         <toolReference
               id="test.forward.tool">
            <optionReference
                  id="test.forward.option">
            </optionReference>
         </toolReference>
      </target>
      <target
            isTest="true"
            name="Forward Parent"
            binaryParser="org.eclipse.cdt.core.tests.target3"
            id="test.forward.parent.target">
         <tool
               natureFilter="both"
               name="Forward Parent Tool"
               id="test.forward.tool">
            <option
                  name="Test Forward Option"
                  category="test.forward.child.category"
                  valueType="boolean"
                  id="test.forward.option">
            </option>
            <optionCategory
                  owner="test.forward.parent.category"
                  name="Forward Child Category"
                  id="test.forward.child.category">
            </optionCategory>
            <optionCategory
                  owner="test.forward.tool"
                  name="Forward Parent Category"
                  id="test.forward.parent.category">
            </optionCategory>
         </tool>
         <configuration
         		name="Who Cares"
         		id="test.forward.parent.config">
         	<toolReference
         		id="test.forward.tool"/>
         </configuration>
      </target>
      <target
            isTest="true"
            errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser"
            name="Test Error Parsers"
            binaryParser="org.eclipse.cdt.core.PE"
            isAbstract="false"
            id="test.error.parsers">
         <tool
               natureFilter="cnature"
               sources="x,y"
               name="EP Tool"
               outputFlag="-o"
               outputs="xy"
               command="EP"
               id="error.parsers.tool">
         </tool>
         <configuration
               name="EP Config"
               id="ep.config"/>
      </target>
   </extension>

<!-- Managed Make Builder Tool Specifications - CDT 2.1 format -->
   <extension
         id="build.test.2.1"
         name="Managed Build Tools Test Description"
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <managedBuildRevision
            fileVersion="2.1.0">
      </managedBuildRevision>

	  <!-- Test tools and project types that correspond to the Gnu tool-chain  
	       NOTE:  The warnings are the result intentional testing of deprecated attributes -->
      <tool
            natureFilter="cnature"
            sources="o"
			outputs=""
            name="linker.gnu.c"
            outputFlag="-o"
            command="gcc"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            id="cdt.managedbuild.tool.testgnu.c.linker">
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.c.linker"
               name="General"
               id="testgnu.c.link.category.general">
         </optionCategory>
         <option
               defaultValue="false"
               name="Posix.Linker.NoStartFiles"
               category="testgnu.c.link.category.general"
               command="-nostartfiles"
               id="testgnu.c.link.option.nostart"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.NoDefLibs"
               category="testgnu.c.link.category.general"
               command="-nodefaultlibs"
               id="testgnu.c.link.option.nodeflibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.NoStdLibs"
               category="testgnu.c.link.category.general"
               command="-nostdlib"
               id="testgnu.c.link.option.nostdlibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.Strip"
               category="testgnu.c.link.category.general"
               command="--strip-all"
               id="testgnu.c.link.option.strip"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.Static"
               category="testgnu.c.link.category.general"
               command="-static"
               id="testgnu.c.link.option.noshared"
               valueType="boolean">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.c.linker"
               name="Libs"
               id="testgnu.c.link.category.libs">
         </optionCategory>
         <option
               name="Posix.Libs"
               category="testgnu.c.link.category.libs"
               command="-l"
               id="testgnu.c.link.option.libs"
               browseType="file"
               valueType="libs">
         </option>
         <option
               name="Posix.Libsearch"
               category="testgnu.c.link.category.libs"
               command="-L"
               id="testgnu.c.link.option.paths"
               browseType="directory"
               valueType="stringList">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.c.linker"
               name="Misc"
               id="testgnu.c.link.category.other">
         </optionCategory>
         <option
               name="Posix.Linker.Flags"
               category="testgnu.c.link.category.other"
               valueType="string"
               id="testgnu.c.link.option.ldflags">
         </option>
         <option
               name="Posix.Linker.XLinker"
               category="testgnu.c.link.category.other"
               command="-Xlinker,"
               valueType="stringList"
               id="testgnu.c.link.option.other">
         </option>
         <option
               name="Posix.UserObjs"
               category="testgnu.c.link.category.other"
               browseType="file"
               valueType="userObjs"
               id="testgnu.c.link.option.userobjs">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.c.linker"
               name="Shared.Settings"
               id="testgnu.c.link.category.shared">
         </optionCategory>
         <option
               defaultValue="false"
               name="Posix.Linker.Shared"
               category="testgnu.c.link.category.shared"
               command="-shared"
               id="testgnu.c.link.option.shared"
               valueType="boolean">
         </option>
         <option
               name="Posix.Linker.SOName"
               category="testgnu.c.link.category.shared"
               command="-Wl,-soname="
               id="testgnu.c.link.option.soname"
               valueType="string">
         </option>
         <option
               name="Posix.Linker.Implib"
               category="testgnu.c.link.category.shared"
               command="-Wl,--out-implib="
               id="testgnu.c.link.option.implname"
               valueType="string">
         </option>
         <option
               name="Posix.Linker.Defname"
               category="testgnu.c.link.category.shared"
               command="-Wl,--output-def="
               id="testgnu.c.link.option.defname"
               valueType="string">
         </option>
      </tool>
      <tool
            natureFilter="ccnature"
            sources="o"
            outputs=""
            name="linker.gnu.cpp"
            outputFlag="-o"
            command="g++"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            id="cdt.managedbuild.tool.testgnu.cpp.linker">
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.cpp.linker"
               name="General"
               id="testgnu.cpp.link.category.options">
         </optionCategory>
         <option
               defaultValue="false"
               name="Posix.Linker.NoStartFiles"
               category="testgnu.cpp.link.category.options"
               command="-nostartfiles"
               id="testgnu.cpp.link.option.nostart"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.NoDefLibs"
               category="testgnu.cpp.link.category.options"
               command="-nodefaultlibs"
               id="testgnu.cpp.link.option.nodeflibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.NoStdLibs"
               category="testgnu.cpp.link.category.options"
               command="-nostdlib"
               id="testgnu.cpp.link.option.nostdlibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="Posix.Linker.Strip"
               category="testgnu.cpp.link.category.options"
               command="--strip-all"
               id="testgnu.cpp.link.option.strip"
               valueType="boolean">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.cpp.linker"
               name="Libs"
               id="testgnu.cpp.link.category.libs">
         </optionCategory>
         <option
               name="Posix.Libs"
               category="testgnu.cpp.link.category.libs"
               command="-l"
               id="testgnu.cpp.link.option.libs"
               browseType="file"
               valueType="libs">
         </option>
         <option
               name="Posix.Libsearch"
               category="testgnu.cpp.link.category.libs"
               command="-L"
               id="testgnu.cpp.link.option.paths"
               browseType="directory"
               valueType="stringList">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.cpp.linker"
               name="Misc"
               id="testgnu.cpp.link.category.other">
         </optionCategory>
         <option
               name="Posix.Linker.Flags"
               category="testgnu.cpp.link.category.other"
               valueType="string"
               id="testgnu.cpp.link.option.flags">
         </option>
         <option
               name="Posix.Linker.XLinker"
               category="testgnu.cpp.link.category.other"
               command="-Xlinker "
               valueType="stringList"
               id="testgnu.cpp.link.option.other">
         </option>
         <option
               name="Posix.UserObjs"
               category="testgnu.cpp.link.category.other"
               browseType="file"
               valueType="userObjs"
               id="testgnu.cpp.link.option.userobjs">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.cpp.linker"
               name="Shared.Settings"
               id="testgnu.cpp.link.category.shared">
         </optionCategory>
         <option
               defaultValue="false"
               name="Posix.Linker.Shared"
               category="testgnu.cpp.link.category.shared"
               command="-shared"
               valueType="boolean"
               id="testgnu.cpp.link.option.shared">
         </option>
         <option
               name="Posix.Linker.SOName"
               category="testgnu.cpp.link.category.shared"
               command="-Wl,-soname="
               valueType="string"
               id="testgnu.cpp.link.option.soname">
         </option>
         <option
               name="Posix.Linker.Implib"
               category="testgnu.cpp.link.category.shared"
               command="-Wl,--out-implib="
               valueType="string"
               id="testgnu.cpp.link.option.implname">
         </option>
         <option
               name="Posix.Linker.Defname"
               category="testgnu.cpp.link.category.shared"
               command="-Wl,--output-def="
               valueType="string"
               id="testgnu.cpp.link.option.defname">
         </option>
      </tool>
      <tool
            natureFilter="both"
            isAbstract="true"
            sources="o"
            name="archiver.gnu"
            outputs="a"
            command="ar"
            outputPrefix="lib"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            id="cdt.managedbuild.tool.testgnu.archiver">
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.archiver"
               name="General"
               id="testgnu.lib.category.general">
         </optionCategory>
         <option
               defaultValue="-r"
               name="Posix.Archiver.Flags"
               category="testgnu.lib.category.general"
               valueType="string"
               id="testgnu.both.lib.option.flags">
         </option>
      </tool>
      <tool
            command="as"
            sources="s,S"
            outputs="o"
            name="assembler.gnu"
            outputFlag="-o"
            id="cdt.managedbuild.tool.testgnu.assembler"
            natureFilter="both">
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu.assembler"
               name="General"
               id="testgnu.asm.category.general">
         </optionCategory>
         <option
               name="Gnu.Assembler.Flags"
               category="testgnu.asm.category.general"
               valueType="string"
               id="testgnu.both.asm.option.flags">
         </option>
         <option
               command="-I"
               valueType="includePath"
               category="testgnu.asm.category.general"
               browseType="directory"
               name="Posix.InclPaths"
               id="testgnu.both.asm.option.include.paths"/>
         <option
               command="-W"
               defaultValue="false"
               valueType="boolean"
               category="testgnu.asm.category.general"
               name="Gnu.Assembler.warn.suppress"
               id="testgnu.both.asm.option.warnings.nowarn"/>
         <option
               command="-v"
               defaultValue="false"
               valueType="boolean"
               category="testgnu.asm.category.general"
               name="Gnu.Assembler.version"
               id="testgnu.both.asm.option.version"/>
      </tool>
      
      <tool
		  name="compiler.gnu.c"
		  id="cdt.managedbuild.tool.testgnu.c.compiler"
		  isAbstract="true"
		  sources="c"
		  command="gcc"
		  dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.gnu.DefaultGCCDependencyCalculator"
		  headerExtensions="h"
		  natureFilter="cnature"
		  outputs="o"
		  outputFlag="-o">
		  <optionCategory
		      owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Preproc"
			  id="testgnu.c.compiler.category.preprocessor">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="Posix.Nostdinc"
			  category="testgnu.c.compiler.category.preprocessor"
			  command="-nostdinc"
			  id="testgnu.c.compiler.option.preprocessor.nostdinc"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.PreprocOnly"
			  category="testgnu.c.compiler.category.preprocessor"
			  command="-E"
			  id="testgnu.c.compiler.option.preprocessor.preprocess"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Symbols"
			  id="testgnu.c.compiler.category.symbols">
		  </optionCategory>
		  <option
			  name="Posix.DefSym"
			  category="testgnu.c.compiler.category.symbols"
			  command="-D"
			  id="testgnu.c.compiler.option.preprocessor.def.symbols"
			  valueType="definedSymbols">
		  </option>
		  <option
			  name="Posix.UndefSym"
			  category="testgnu.c.compiler.category.symbols"
			  command="-U"
			  id="testgnu.c.compiler.option.preprocessor.undef.symbol"
			  valueType="stringList">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Dirs"
			  id="testgnu.c.compiler.category.dirs">
		  </optionCategory>
		  <option
			  name="Posix.InclPaths"
			  category="testgnu.c.compiler.category.dirs"
			  command="-I"
			  id="testgnu.c.compiler.option.include.paths"
			  valueType="includePath"
			  browseType="directory">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Optimize"
			  id="testgnu.c.compiler.category.optimization">
		  </optionCategory>
		  <option
			  name="Posix.OptLevel"
			  category="testgnu.c.compiler.category.optimization"
			  id="testgnu.c.compiler.option.optimization.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
		  		  name="Posix.Optimize.None"
				  isDefault="false"
				  command="-O0"
				  id="testgnu.c.optimization.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Optimize.Optimize"
				  command="-O1"
				  id="testgnu.c.optimization.level.optimize">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Optimize.More"
				  isDefault="true"
				  command="-O2"
				  id="testgnu.c.optimization.level.more">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Optimize.Most"
				  command="-O3"
				  id="testgnu.c.optimization.level.most">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="Posix.Optimize.Flags"
			  category="testgnu.c.compiler.category.optimization"
			  id="testgnu.c.compiler.option.optimization.flags"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Debug"
			  id="testgnu.c.compiler.category.debug">
		  </optionCategory>
		  <option
			  name="Posix.DebugLevel"
			  category="testgnu.c.compiler.category.debug"
			  id="testgnu.c.compiler.option.debugging.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="Posix.Debug.None"
				  isDefault="false"
				  id="testgnu.c.debugging.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Debug.Min"
				  command="-g1"
				  id="testgnu.c.debugging.level.minimal">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Debug.Def"
				  isDefault="true"
				  command="-g"
				  id="testgnu.c.debugging.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Debug.Max"
				  isDefault="false"
				  command="-g3"
				  id="testgnu.c.debugging.level.max">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="Posix.Debug.Other"
			  category="testgnu.c.compiler.category.debug"
			  id="testgnu.c.compiler.option.debugging.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Debug.gprof"
			  category="testgnu.c.compiler.category.debug"
			  command="-pg"
			  id="testgnu.c.compiler.option.debugging.gprof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Debug.prof"
			  category="testgnu.c.compiler.category.debug"
			  command="-p"
			  id="testgnu.c.compiler.option.debugging.prof"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Warn"
			  id="testgnu.c.compiler.category.warnings">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.Syntax"
			  category="testgnu.c.compiler.category.warnings"
			  command="-fsyntax-only"
			  id="testgnu.c.compiler.option.warnings.syntax"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.Pedandic"
			  category="testgnu.c.compiler.category.warnings"
			  command="-pedantic"
			  id="testgnu.c.compiler.option.warnings.pedantic"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.PedErrors"
			  category="testgnu.c.compiler.category.warnings"
			  command="-pedantic-errors"
			  id="testgnu.c.compiler.option.warnings.pedantic.error"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.nowarn"
			  category="testgnu.c.compiler.category.warnings"
			  command="-w"
			  id="testgnu.c.compiler.option.warnings.nowarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="true"
			  name="Posix.Warn.allwarn"
			  category="testgnu.c.compiler.category.warnings"
			  command="-Wall"
			  id="testgnu.c.compiler.option.warnings.allwarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.toerrs"
			  category="testgnu.c.compiler.category.warnings"
			  command="-Werror"
			  id="testgnu.c.compiler.option.warnings.toerrors"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.c.compiler"
			  name="Misc"
			  id="testgnu.c.compiler.category.other">
		  </optionCategory>
		  <option
			  defaultValue="-c -fmessage-length=0"
			  name="OtherFlags"
			  category="testgnu.c.compiler.category.other"
			  id="testgnu.c.compiler.option.misc.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Verbose"
			  category="testgnu.c.compiler.category.other"
			  command="-v"
			  id="testgnu.c.compiler.option.misc.verbose"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Ansi"
			  category="testgnu.c.compiler.category.other"
			  command="-ansi"
			  id="testgnu.c.compiler.option.misc.ansi"
			  valueType="boolean">
		  </option>
	  </tool>
	  <tool
		  name="compiler.gnu.cpp"
		  id="cdt.managedbuild.tool.testgnu.cpp.compiler"
		  isAbstract="true"
		  sources="c,C,cc,cxx,cpp"
		  command="g++"
		  dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.gnu.DefaultGCCDependencyCalculator"
		  headerExtensions="h,H,hpp"
		  natureFilter="ccnature"
		  outputs="o"
		  outputFlag="-o">
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.cpp.compiler"
			  name="Preproc"
			  id="testgnu.cpp.compiler.category.preprocessor">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="Posix.Nostdinc"
			  category="testgnu.cpp.compiler.category.preprocessor"
			  command="-nostdinc"
			  id="testgnu.cpp.compiler.option.preprocessor.nostdinc"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.PreprocOnly"
			  category="testgnu.cpp.compiler.category.preprocessor"
			  command="-E"
			  id="testgnu.cpp.compiler.option.preprocessor.preprocess"
			  valueType="boolean">
		  </option>
		  <option
			  name="Posix.DefSym"
			  category="testgnu.cpp.compiler.category.preprocessor"
			  command="-D"
			  id="testgnu.cpp.compiler.option.preprocessor.def"
			  valueType="definedSymbols">
		  </option>
		  <option
			  name="Posix.UndefSym"
			  category="testgnu.cpp.compiler.category.preprocessor"
			  command="-U"
			  id="testgnu.cpp.compiler.option.preprocessor.undef"
			  valueType="stringList">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.cpp.compiler"
			  name="Dirs"
			  id="testgnu.cpp.compiler.category.dirs">
		  </optionCategory>
		  <option
			  name="Posix.InclPaths"
			  category="testgnu.cpp.compiler.category.dirs"
			  command="-I"
			  id="testgnu.cpp.compiler.option.include.paths"
			  valueType="includePath"
			  browseType="directory">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.cpp.compiler"
			  name="Optimize"
			  id="testgnu.cpp.compiler.category.optimization">
		  </optionCategory>
		  <option
			  name="Posix.OptLevel"
			  category="testgnu.cpp.compiler.category.optimization"
			  id="testgnu.cpp.compiler.option.optimization.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="Posix.Optimize.None"
				  command="-O0"
				  id="testgnu.cpp.compiler.optimization.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Optimize.Optimize"
				  command="-O1"
				  id="testgnu.cpp.compiler.optimization.level.optimize">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Optimize.More"
				  isDefault="true"
				  command="-O2"
				  id="testgnu.cpp.compiler.optimization.level.more">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Optimize.Most"
				  command="-O3"
				  id="testgnu.cpp.compiler.optimization.level.most">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="Posix.Optimize.Flags"
			  category="testgnu.cpp.compiler.category.optimization"
			  id="testgnu.cpp.compiler.option.optimization.flags"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.cpp.compiler"
			  name="Debug"
			  id="testgnu.cpp.compiler.category.debug">
		  </optionCategory>
		  <option
			  name="Posix.DebugLevel"
			  category="testgnu.cpp.compiler.category.debug"
			  id="testgnu.cpp.compiler.option.debugging.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="Posix.Debug.None"
				  isDefault="false"
				  id="testgnu.cpp.compiler.debugging.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Debug.Min"
				  command="-g1"
				  id="testgnu.cpp.compiler.debugging.level.minimal">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Debug.Def"
				  isDefault="true"
				  command="-g"
				  id="testgnu.cpp.compiler.debugging.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="Posix.Debug.Max"
				  isDefault="false"
				  command="-g3"
				  id="testgnu.cpp.compiler.debugging.level.max">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="Posix.Debug.Other"
			  category="testgnu.cpp.compiler.category.debug"
			  id="testgnu.cpp.compiler.option.debugging.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Debug.prof"
			  category="testgnu.cpp.compiler.category.debug"
			  command="-p"
			  id="testgnu.cpp.compiler.option.debugging.prof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Debug.gprof"
			  category="testgnu.cpp.compiler.category.debug"
			  command="-pg"
			  id="testgnu.cpp.compiler.option.debugging.gprof"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.cpp.compiler"
			  name="Warn"
			  id="testgnu.cpp.compiler.category.warnings">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.Syntax"
			  category="testgnu.cpp.compiler.category.warnings"
			  command="-fsyntax-only"
			  id="testgnu.cpp.compiler.option.warnings.syntax"
			  valueType="boolean">
		   </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.Pedandic"
			  category="testgnu.cpp.compiler.category.warnings"
			  command="-pedantic"
			  id="testgnu.cpp.compiler.option.warnings.pedantic"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.PedErrors"
			  category="testgnu.cpp.compiler.category.warnings"
			  command="-pedantic-errors"
			  id="testgnu.cpp.compiler.option.warnings.pedantic.error"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.nowarn"
			  category="testgnu.cpp.compiler.category.warnings"
			  command="-w"
			  id="testgnu.cpp.compiler.option.warnings.nowarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="true"
			  name="Posix.Warn.allwarn"
			  category="testgnu.cpp.compiler.category.warnings"
			  command="-Wall"
			  id="testgnu.cpp.compiler.option.warnings.allwarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Warn.toerrs"
			  category="testgnu.cpp.compiler.category.warnings"
			  command="-Werror"
			  id="testgnu.cpp.compiler.option.warnings.toerrors"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu.cpp.compiler"
			  name="Misc"
			  id="testgnu.cpp.compiler.category.other">
		  </optionCategory>
		  <option
			  defaultValue="-c -fmessage-length=0"
			  name="OtherFlags"
			  category="testgnu.cpp.compiler.category.other"
			  id="testgnu.cpp.compiler.option.other.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="Posix.Verbose"
			  category="testgnu.cpp.compiler.category.other"
			  command="-v"
			  id="testgnu.cpp.compiler.option.other.verbose"
			  valueType="boolean">
		  </option>
	  </tool>
      
      <projectType      
            isAbstract="false"     
            isTest="true" 
            name="testgnu21.exe"
            id="cdt.managedbuild.target.testgnu21.exe">
         <configuration
               name="Dbg"
               id="cdt.managedbuild.config.testgnu.exe.debug"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">
               <toolChain
		          id="cdt.managedbuild.toolchain.testgnu.exe.debug"
		          name="Dbg ToolChain"
		          scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
		          osList="solaris,linux,hpux,aix,qnx"
		          archList="all">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu.platform.exe.debug"
		              name="Dbg Platform"
		              binaryParser="org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.PE"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
	              </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu.builder.exe.debug"
		              name="Dbg Builder"
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
		     	  </builder>               
                  <tool
                      id="cdt.managedbuild.tool.testgnu.c.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">                          
			  	      <option
					      id="testgnu.c.compiler.exe.debug.option.optimization.level"
						  defaultValue="testgnu.c.optimization.level.none"
						  superClass="testgnu.c.compiler.option.optimization.level">
					  </option>
					  <option   
					      id="testgnu.c.compiler.exe.debug.option.debugging.level"					     
						  defaultValue="testgnu.c.debugging.level.max"
					      superClass="testgnu.c.compiler.option.debugging.level">
					  </option>
				  </tool>
				  <tool
                      id="cdt.managedbuild.tool.testgnu.cpp.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">                         
                      <option
				          id="testgnu.cpp.compiler.exe.debug.option.optimization.level"
                          defaultValue="testgnu.cpp.compiler.optimization.level.none"
                          superClass="testgnu.cpp.compiler.option.optimization.level">
                      </option>
                      <option
						  id="testgnu.cpp.compiler.exe.debug.option.debugging.level"
                          defaultValue="testgnu.cpp.compiler.debugging.level.max"
                          superClass="testgnu.cpp.compiler.option.debugging.level">
                      </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.testgnu.c.linker.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu.c.linker">
                  </tool> 
                  <tool
                      id="cdt.managedbuild.tool.testgnu.cpp.linker.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.linker">
                  </tool> 
				  <tool
					  id="cdt.managedbuild.tool.testgnu.assembler.exe.debug"
					  superClass="cdt.managedbuild.tool.testgnu.assembler">
				  </tool>   
			  </toolChain>
         </configuration>
         <configuration
               name="Rel"
               id="cdt.managedbuild.config.testgnu.exe.release"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">               
               <toolChain
		          id="cdt.managedbuild.toolchain.testgnu.exe.release"
		          name="Rel ToolChain"
		          scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
		          osList="solaris,linux,hpux,aix,qnx"
		          archList="all">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu.platform.exe.release"
		              name="Rel Platform"		             
		              binaryParser="org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.PE"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">		              
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu.builder.exe.release"
		              name="Rel Builder"		              
		              command="make"
		              arguments="-k">
				  </builder> 
                  <tool
                      id="cdt.managedbuild.tool.testgnu.c.compiler.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">                          
					  <option
						  id="testgnu.c.compiler.exe.release.option.optimization.level"
						  defaultValue="testgnu.c.optimization.level.most"
						  superClass="testgnu.c.compiler.option.optimization.level">
					  </option>
					  <option
						  id="testgnu.c.compiler.exe.release.option.debugging.level"
						  defaultValue="testgnu.c.debugging.level.none"
						  superClass="testgnu.c.compiler.option.debugging.level">
					  </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.testgnu.cpp.compiler.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">                     
					  <option
						  id="testgnu.cpp.compiler.exe.release.option.optimization.level"
						  defaultValue="testgnu.cpp.compiler.optimization.level.most"
						  superClass="testgnu.cpp.compiler.option.optimization.level">
					  </option>
					  <option
						  id="testgnu.cpp.compiler.exe.release.option.debugging.level"
						  defaultValue="testgnu.cpp.compiler.debugging.level.none"
						  superClass="testgnu.cpp.compiler.option.debugging.level">
					  </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.testgnu.c.linker.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu.c.linker">
                  </tool> 
                  <tool
                      id="cdt.managedbuild.tool.testgnu.cpp.linker.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.linker">
                  </tool>  
				  <tool
					  id="cdt.managedbuild.tool.testgnu.assembler.exe.release"
					  superClass="cdt.managedbuild.tool.testgnu.assembler">
				  </tool>   
               </toolChain>
         </configuration>
      </projectType>     
      
      <projectType      
            isAbstract="false"     
            isTest="true"
            name="testgnu21.so"
            id="cdt.managedbuild.target.testgnu21.so">
         <configuration
               name="Debug"
               cleanCommand="rm -rf"
               artifactExtension="so"               
               errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"                          
               id="cdt.managedbuild.config.testgnu.so.debug">
               <toolChain
		          id="cdt.managedbuild.toolchain.testgnu.so.debug"
		          name="so Debug ToolChain"
		          scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"		          
		          osList="solaris,linux,hpux,aix,qnx"                
		          archList="all">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu.platform.so.debug"
		              name="so Debug Platform"
		              binaryParser="org.eclipse.cdt.core.ELF"		            
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu.builder.so.debug"
		              name="so Debug Builder"
		              command="make"
		              arguments="-k">
				  </builder>               		         
				  <tool
				      id="cdt.managedbuild.tool.testgnu.c.compiler.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu.c.compiler">
					  <option
						  id="testgnu.c.compiler.so.debug.option.optimization.level"
						  defaultValue="testgnu.c.optimization.level.none"
						  superClass="testgnu.c.compiler.option.optimization.level">
					  </option>
					  <option
					      id="testgnu.c.compiler.so.debug.option.debugging.level"
						  defaultValue="testgnu.c.debugging.level.max"
						  superClass="testgnu.c.compiler.option.debugging.level">
					  </option>
				  </tool>
				  <tool
				      id="cdt.managedbuild.tool.testgnu.cpp.compiler.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">
					  <option
					      id="testgnu.cpp.compiler.so.debug.option.optimization.level"
						  defaultValue="testgnu.cpp.compiler.optimization.level.none"
						  superClass="testgnu.cpp.compiler.option.optimization.level">
					  </option>
					  <option
					      id="testgnu.cpp.compiler.so.debug.option.debugging.level"
						  defaultValue="testgnu.cpp.compiler.debugging.level.max"
						  superClass="testgnu.cpp.compiler.option.debugging.level">
					  </option>
				  </tool>
				  <tool
				      id="cdt.managedbuild.tool.testgnu.c.linker.so.debug"
					  outputs="so"
					  outputPrefix="lib"
					  superClass="cdt.managedbuild.tool.testgnu.c.linker">
					  <option
						  id="testgnu.c.link.so.debug.option.shared"
						  defaultValue="true"
						  superClass="testgnu.c.link.option.shared">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.cpp.linker.so.debug"
					  outputs="so"
					  outputPrefix="lib"
					  superClass="cdt.managedbuild.tool.testgnu.cpp.linker">
					  <option
						  id="testgnu.cpp.link.so.debug.option.shared"
						  defaultValue="true"
						  superClass="testgnu.cpp.link.option.shared">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.assembler.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu.assembler">
				  </tool>   
			   </toolChain>
         </configuration>
         <configuration
               name="Release"
               cleanCommand="rm -rf"
               artifactExtension="so"
               errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
               id="cdt.managedbuild.config.testgnu.so.release">
               <toolChain
		          id="cdt.managedbuild.toolchain.testgnu.so.release"
		          name="so Release ToolChain"
		          scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"		          
		          osList="solaris,linux,hpux,aix,qnx"                
		          archList="all">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu.platform.so.release"
		              name="so Release Platform"
		              binaryParser="org.eclipse.cdt.core.ELF"		            
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu.builder.so.release"
		              name="so Release Builder"
		              command="make"
		              arguments="-k">
				  </builder>               
				  <tool				     
				      id="cdt.managedbuild.tool.testgnu.c.compiler.so.release"
					  superClass="cdt.managedbuild.tool.testgnu.c.compiler">
				      <option
				          id="testgnu.c.compiler.so.release.option.optimization.level"
						  defaultValue="testgnu.c.optimization.level.most"
						  superClass="testgnu.c.compiler.option.optimization.level">
				      </option>
				      <option
				          id="testgnu.c.compiler.so.release.option.debugging.level"
						  defaultValue="testgnu.c.debugging.level.none"
						  superClass="testgnu.c.compiler.option.debugging.level">
				      </option>
				  </tool>
				  <tool
				      id="cdt.managedbuild.tool.testgnu.cpp.compiler.so.release"
					  superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">
				      <option
				          id="testgnu.cpp.compiler.so.release.option.optimization.level"
						  defaultValue="testgnu.cpp.compiler.optimization.level.most"
						  superClass="testgnu.cpp.compiler.option.optimization.level">
				      </option>
				      <option
				          id="testgnu.cpp.compiler.so.release.option.debugging.level"
						  defaultValue="testgnu.cpp.compiler.debugging.level.none"
						  superClass="testgnu.cpp.compiler.option.debugging.level">
				      </option>
				  </tool>				
				  <tool
				      id="cdt.managedbuild.tool.testgnu.c.linker.so.release"
					  outputs="so"
					  outputPrefix="lib"
					  superClass="cdt.managedbuild.tool.testgnu.c.linker">
					  <option
						  id="testgnu.c.link.so.release.option.shared"
						  defaultValue="true"
						  superClass="testgnu.c.link.option.shared">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.cpp.linker.so.release"
					  outputs="so"
					  outputPrefix="lib"
					  superClass="cdt.managedbuild.tool.testgnu.cpp.linker">
					  <option
						  id="testgnu.cpp.link.so.release.option.shared"
						  defaultValue="true"
						  superClass="testgnu.cpp.link.option.shared">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.assembler.so.release"
					  superClass="cdt.managedbuild.tool.testgnu.assembler">
				  </tool>   
			   </toolChain>  
         </configuration>         
      </projectType>
          
      <projectType 
            isTest="true"
            name="testgnu21.lib"
            isAbstract="false"
            id="cdt.managedbuild.target.testgnu21.lib">                        
         <configuration
			   name="Dbg"
			   artifactExtension="a"
			   cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
			   id="cdt.managedbuild.config.testgnu.lib.debug">
               <toolChain
		          id="cdt.managedbuild.toolchain.testgnu.lib.debug"
		          name="Dbg TC"
		          scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"		          
		          osList="solaris,linux,hpux,aix,qnx"                
		          archList="all">
				  <targetPlatform
					  id="cdt.managedbuild.target.testgnu.platform.lib.debug"
				 	  name="Dbg P"
					  binaryParser="org.eclipse.cdt.core.ELF"		            
					  osList="solaris,linux,hpux,aix,qnx"
					  archList="all">
				  </targetPlatform>
			  	  <builder
					  id="cdt.managedbuild.target.testgnu.builder.lib.debug"
					  name="Dbg B"
					  command="make"
					  arguments="-k">
			      </builder>               		         
				  <tool
					  id="cdt.managedbuild.tool.testgnu.c.compiler.lib.debug"
					  superClass="cdt.managedbuild.tool.testgnu.c.compiler">
				      <option
					      id="testgnu.c.compiler.lib.debug.option.optimization.level"
						  defaultValue="testgnu.c.optimization.level.none"
						  superClass="testgnu.c.compiler.option.optimization.level">
				      </option>
				      <option
						  id="testgnu.c.compiler.lib.debug.option.debugging.level"						
						  defaultValue="testgnu.c.debugging.level.max"
						  superClass="testgnu.c.compiler.option.debugging.level">
				      </option>
				  </tool>
                  <tool
					  id="cdt.managedbuild.tool.testgnu.cpp.compiler.lib.debug"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">
					  <option
					      id="testgnu.cpp.compiler.lib.debug.option.optimization.level"
					      defaultValue="testgnu.cpp.compiler.optimization.level.none"
					      superClass="testgnu.cpp.compiler.option.optimization.level">
					  </option>
					  <option
					      id="testgnu.cpp.compiler.lib.debug.option.debugging.level"
					      defaultValue="testgnu.cpp.compiler.debugging.level.max"
					      superClass="testgnu.cpp.compiler.option.debugging.level">
					  </option>
                  </tool>
			      <tool
		    		  id="cdt.managedbuild.tool.testgnu.archiver.lib.debug"
				      outputs="a"
                      outputPrefix="lib"
			          superClass="cdt.managedbuild.tool.testgnu.archiver">
				  </tool>                 
				  <tool
					  id="cdt.managedbuild.tool.testgnu.assembler.lib.debug"
					  superClass="cdt.managedbuild.tool.testgnu.assembler">
				  </tool>   
               </toolChain>                 
         </configuration>
         <configuration
               name="Rel"
               artifactExtension="a"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
               id="cdt.managedbuild.config.testgnu.lib.release">
               <toolChain
		          id="cdt.managedbuild.toolchain.testgnu.lib.release"
		          name="Rel TC"
		          scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"		          
		          osList="solaris,linux,hpux,aix,qnx"                
		          archList="all">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu.platform.lib.release"
		              name="Rel P"
		              binaryParser="org.eclipse.cdt.core.ELF"		            
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu.builder.lib.release"
		              name="Rel B"
		              command="make"
		              arguments="-k">
				  </builder>               		            
		          <tool
					  id="cdt.managedbuild.tool.testgnu.c.compiler.lib.release"
					  superClass="cdt.managedbuild.tool.testgnu.c.compiler">
					  <option
						  id="testgnu.c.compiler.lib.release.option.optimization.level"
						  defaultValue="testgnu.c.optimization.level.most"
						  superClass="testgnu.c.compiler.option.optimization.level">
					  </option>
					  <option
						  id="testgnu.c.compiler.lib.release.option.debugging.level"
					      defaultValue="testgnu.c.debugging.level.none"
					      superClass="testgnu.c.compiler.option.debugging.level">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.cpp.compiler.lib.release"
					  superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">
					  <option
						  id="testgnu.cpp.compiler.lib.release.option.optimization.level"
						  defaultValue="testgnu.cpp.compiler.optimization.level.most"
						  superClass="testgnu.cpp.compiler.option.optimization.level">
					  </option>
					  <option
						  id="testgnu.cpp.compiler.lib.release.option.debugging.level"
						  defaultValue="testgnu.cpp.compiler.debugging.level.none"
						  superClass="testgnu.cpp.compiler.option.debugging.level">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.archiver.lib.release"
					  outputs="a"
                      outputPrefix="lib"
				      superClass="cdt.managedbuild.tool.testgnu.archiver">
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu.assembler.lib.release"
					  superClass="cdt.managedbuild.tool.testgnu.assembler">
				  </tool>   
               </toolChain>				  
         </configuration>                  
      </projectType>
          
      <projectType 
            isTest="true"
            name="Test Java Attributes"
            isAbstract="false"
            id="cdt.managedbuild.test.java.attrs">                        
         <configuration
			   name="The One and Only"
			   artifactName="Testme"
			   artifactExtension="xyz"
			   id="cdt.managedbuild.test.java.attrs.config">
               <toolChain
		          id="cdt.managedbuild.test.java.attrs.toolchain"
		          name="The Tool-Chain">
				  <tool
					  id="cdt.managedbuild.test.java.attrs.tool"
					  superClass="cdt.managedbuild.tool.testgnu.c.compiler"
					  commandLineGenerator="org.eclipse.cdt.managedbuilder.core.tests.ManagedBuildCommandLineGenerator">
				      <option
						  id="testgnu.c.compiler.option.preprocessor.def.symbols.test"
						  superClass="testgnu.c.compiler.option.preprocessor.def.symbols">
						  <listOptionValue
						  	value="foo">
						  </listOptionValue>
						  <listOptionValue
						  	value="bar">
						  </listOptionValue>
				      </option>
				  </tool>
				  <builder
				      id="cdt.managedbuild.test.java.attrs.builder"
		              name="Test Builder"
		              command="makeMe"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.core.tests.BuildFileGenerator">
		     	  </builder>               
               </toolChain>                 
         </configuration>
      </projectType>
   </extension>

<!-- Managed Make Builder Tool Specifications - CDT 3.0 format -->
   <extension
         id="cdt.managed.build.test30.info"
         name="MBS 3.0 Test definitions"
         point="org.eclipse.cdt.managedbuilder.core.buildDefinitions">
      <managedBuildRevision
            fileVersion="3.0.0">
      </managedBuildRevision>

	  <!-- Test tools and project types that correspond to the Gnu tool-chain  -->
      <tool
            natureFilter="cnature"
            name="MBS30.linker.gnu.c"
            outputFlag="-o"
            command="gcc"
            id="cdt.managedbuild.tool.testgnu30.c.linker">
         <envVarBuildPath 
         	pathType="buildpathLibrary"
         	variableList="LIBRARY_PATH">
         </envVarBuildPath>
         
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.c.linker"
               name="MBS30OptCat.General"
               id="gnu.c.link.category30.general">
         </optionCategory>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.NoStartFiles"
               category="gnu.c.link.category30.general"
               command="-nostartfiles"
               id="gnu.c.link.option30.nostart"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.NoDefLibs"
               category="gnu.c.link.category30.general"
               command="-nodefaultlibs"
               id="gnu.c.link.option30.nodeflibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.NoStdLibs"
               category="gnu.c.link.category30.general"
               command="-nostdlib"
               id="gnu.c.link.option30.nostdlibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.Strip"
               category="gnu.c.link.category30.general"
               command="--strip-all"
               id="gnu.c.link.option30.strip"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.Static"
               category="gnu.c.link.category30.general"
               command="-static"
               id="gnu.c.link.option30.noshared"
               valueType="boolean">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.c.linker"
               name="MBS30OptCat.Libs"
               id="gnu.c.link.category30.libs">
         </optionCategory>
         <option
               name="MBS30Opt.Posix.Libs"
               category="gnu.c.link.category30.libs"
               command="-l"
               id="gnu.c.link.option30.libs"
               browseType="file"
               valueType="libs">
         </option>
         <option
               name="MBS30Opt.Posix.Libsearch"
               category="gnu.c.link.category30.libs"
               command="-L"
               id="gnu.c.link.option30.paths"
               browseType="directory"
               valueType="stringList">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.c.linker"
               name="MBS30OptCat.Misc"
               id="gnu.c.link.category30.other">
         </optionCategory>
         <option
               name="MBS30Opt.Posix.Linker.Flags"
               category="gnu.c.link.category30.other"
               valueType="string"
               id="gnu.c.link.option30.ldflags">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.XLinker"
               category="gnu.c.link.category30.other"
               command="-Xlinker ${VALUE}"
               valueType="stringList"
               id="gnu.c.link.option30.other">
         </option>
         <option
               name="MBS30Opt.Posix.UserObjs"
               category="gnu.c.link.category30.other"
               browseType="file"
               valueType="userObjs"
               id="gnu.c.link.option30.userobjs">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.c.linker"
               name="MBS30OptCat.Shared.Settings"
               id="gnu.c.link.category30.shared">
         </optionCategory>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.Shared"
               category="gnu.c.link.category30.shared"
               command="-shared"
               id="gnu.c.link.option30.shared"
               valueType="boolean">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.SOName"
               category="gnu.c.link.category30.shared"
               command="-Wl,-soname="
               id="gnu.c.link.option30.soname"
               browseType="file"
               valueType="string">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.Implib"
               category="gnu.c.link.category30.shared"
               command="-Wl,--out-implib="
               id="gnu.c.link.option30.implname"
               browseType="directory"
               valueType="string">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.Defname"
               category="gnu.c.link.category30.shared"
               command="-Wl,--output-def="
               id="gnu.c.link.option30.defname"
               valueType="string">
         </option>
         <inputType
            sources="o"
			multipleOfType="true"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            buildVariable="OBJS"
            id="cdt.managedbuild.tool.testgnu30.c.linker.input">
            <additionalInput
            	paths="$(USER_OBJS)"
            	kind="additionalinputdependency">
            </additionalInput>
            <additionalInput
            	paths="$(LIBS)"
            	kind="additionalinput">
            </additionalInput>
         </inputType>
         <outputType
			outputs=""
            buildVariable="EXECUTABLES"
            nameProvider="org.eclipse.cdt.managedbuilder.core.tests.TestLinkerNameProvider"
            id="cdt.managedbuild.tool.testgnu30.c.linker.output">
         </outputType>
      </tool>
      <tool
            natureFilter="ccnature"
            name="MBS30.linker.gnu.cpp"
            outputFlag="-o"
            command="g++"
            id="cdt.managedbuild.tool.testgnu30.cpp.linker">
         <envVarBuildPath 
         	pathType="buildpathLibrary"
         	variableList="LIBRARY_PATH">
         </envVarBuildPath>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.cpp.linker"
               name="MBS30OptCat.General"
               id="gnu.cpp.link.category30.options">
         </optionCategory>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.NoStartFiles"
               category="gnu.cpp.link.category30.options"
               command="-nostartfiles"
               id="gnu.cpp.link.option30.nostart"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.NoDefLibs"
               category="gnu.cpp.link.category30.options"
               command="-nodefaultlibs"
               id="gnu.cpp.link.option30.nodeflibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.NoStdLibs"
               category="gnu.cpp.link.category30.options"
               command="-nostdlib"
               id="gnu.cpp.link.option30.nostdlibs"
               valueType="boolean">
         </option>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.Strip"
               category="gnu.cpp.link.category30.options"
               command="--strip-all"
               id="gnu.cpp.link.option30.strip"
               valueType="boolean">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.cpp.linker"
               name="MBS30OptCat.Libs"
               id="gnu.cpp.link.category30.libs">
         </optionCategory>
         <option
               name="MBS30Opt.Posix.Libs"
               category="gnu.cpp.link.category30.libs"
               command="-l"
               id="gnu.cpp.link.option30.libs"
               browseType="file"
               valueType="libs">
         </option>
         <option
               name="MBS30Opt.Posix.Libsearch"
               category="gnu.cpp.link.category30.libs"
               command="-L"
               id="gnu.cpp.link.option30.paths"
               browseType="directory"
               valueType="stringList">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.cpp.linker"
               name="MBS30OptCat.Misc"
               id="gnu.cpp.link.category30.other">
         </optionCategory>
         <option
               name="MBS30Opt.Posix.Linker.Flags"
               category="gnu.cpp.link.category30.other"
               valueType="string"
               id="gnu.cpp.link.option30.flags">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.XLinker"
               category="gnu.cpp.link.category30.other"
               command="-Xlinker ${VALUE}"
               valueType="stringList"
               id="gnu.cpp.link.option30.other">
         </option>
         <option
               name="MBS30Opt.Posix.UserObjs"
               category="gnu.cpp.link.category30.other"
               browseType="file"
               valueType="userObjs"
               id="gnu.cpp.link.option30.userobjs">
         </option>
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.cpp.linker"
               name="MBS30OptCat.Shared.Settings"
               id="gnu.cpp.link.category30.shared">
         </optionCategory>
         <option
               defaultValue="false"
               name="MBS30Opt.Posix.Linker.Shared"
               category="gnu.cpp.link.category30.shared"
               command="-shared"
               valueType="boolean"
               id="gnu.cpp.link.option30.shared">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.SOName"
               category="gnu.cpp.link.category30.shared"
               command="-Wl,-soname="
               valueType="string"
               browseType="file"
               id="gnu.cpp.link.option30.soname">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.Implib"
               category="gnu.cpp.link.category30.shared"
               command="-Wl,--out-implib="
               valueType="string"
               browseType="directory"
               id="gnu.cpp.link.option30.implname">
         </option>
         <option
               name="MBS30Opt.Posix.Linker.Defname"
               category="gnu.cpp.link.category30.shared"
               command="-Wl,--output-def="
               valueType="string"
               id="gnu.cpp.link.option30.defname">
         </option>
         <inputType
            sources="o"
			multipleOfType="true"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            buildVariable="OBJS"
            id="cdt.managedbuild.tool.testgnu30.cpp.linker.input">
            <additionalInput
            	paths="$(USER_OBJS)"
            	kind="additionalinputdependency">
            </additionalInput>
            <additionalInput
            	paths="$(LIBS)"
            	kind="additionalinput">
            </additionalInput>
         </inputType>
         <outputType
			outputs=""
            buildVariable="EXECUTABLES"
            id="cdt.managedbuild.tool.testgnu30.cpp.linker.output">
         </outputType>
      </tool>
      <tool
            natureFilter="both"
            isAbstract="true"
            name="MBS30.archiver.gnu"
            command="ar"
            id="cdt.managedbuild.tool.testgnu30.archiver">
         <optionCategory
               owner="cdt.managedbuild.tool.testgnu30.archiver"
               name="MBS30OptCat.General"
               id="gnu.lib.category30.general">
         </optionCategory>
         <option
               defaultValue="-r"
               name="MBS30Opt.Posix.Archiver.Flags"
               category="gnu.lib.category30.general"
               valueType="string"
               id="gnu.both.lib.option30.flags">
         </option>
         <inputType
            sources="o"
			multipleOfType="true"
            dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.internal.DefaultNoDependencyCalculator"
            buildVariable="OBJS"
            id="cdt.managedbuild.tool.testgnu30.archiver.input">
            <additionalInput
            	paths="$(USER_OBJS)"
            	kind="additionalinputdependency">
            </additionalInput>
            <additionalInput
            	paths="$(LIBS)"
            	kind="additionalinput">
            </additionalInput>
         </inputType>
         <outputType
			outputs="a"
            outputPrefix="lib"
            buildVariable="ARCHIVES"
            id="cdt.managedbuild.tool.testgnu30.archiver.output">
         </outputType>
      </tool>
      
      <tool
		  name="MBS30.compiler.gnu.c"
		  id="cdt.managedbuild.tool.testgnu30.c.compiler"
		  isAbstract="true"
		  command="gcc"
		  natureFilter="cnature"
		  outputFlag="-o">
         <envVarBuildPath 
         	pathType="buildpathInclude"
         	variableList="CPATH,C_INCLUDE_PATH">
         </envVarBuildPath>
		  <optionCategory
		      owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Preproc"
			  id="gnu.c.compiler.category30.preprocessor">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Nostdinc"
			  category="gnu.c.compiler.category30.preprocessor"
			  command="-nostdinc"
			  id="gnu.c.compiler.option30.preprocessor.nostdinc"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.PreprocOnly"
			  category="gnu.c.compiler.category30.preprocessor"
			  command="-E"
			  id="gnu.c.compiler.option30.preprocessor.preprocess"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Symbols"
			  id="gnu.c.compiler.category30.symbols">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.DefSym"
			  category="gnu.c.compiler.category30.symbols"
			  command="-D"
			  id="gnu.c.compiler.option30.preprocessor.def.symbols"
			  valueType="definedSymbols">
		  </option>
		  <option
			  name="MBS30Opt.Posix.UndefSym"
			  category="gnu.c.compiler.category30.symbols"
			  command="-U"
			  id="gnu.c.compiler.option30.preprocessor.undef.symbol"
			  valueType="stringList">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Dirs"
			  id="gnu.c.compiler.category30.dirs">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.InclPaths"
			  category="gnu.c.compiler.category30.dirs"
			  command="-I"
			  id="gnu.c.compiler.option30.include.paths"
			  valueType="includePath"
			  browseType="directory">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Optimize"
			  id="gnu.c.compiler.category30.optimization">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.OptLevel"
			  category="gnu.c.compiler.category30.optimization"
			  id="gnu.c.compiler.option30.optimization.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
		  		  name="MBS30Opt.Posix.Optimize.None"
				  isDefault="false"
				  command="-O0"
				  id="gnu.c.optimization.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.Optimize"
				  command="-O1"
				  id="gnu.c.optimization.level.optimize">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.More"
				  isDefault="true"
				  command="-O2"
				  id="gnu.c.optimization.level.more">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.Most"
				  command="-O3"
				  id="gnu.c.optimization.level.most">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="MBS30Opt.Posix.Optimize.Flags"
			  category="gnu.c.compiler.category30.optimization"
			  id="gnu.c.compiler.option30.optimization.flags"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Debug"
			  id="gnu.c.compiler.category30.debug">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.DebugLevel"
			  category="gnu.c.compiler.category30.debug"
			  id="gnu.c.compiler.option30.debugging.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.None"
				  isDefault="false"
				  id="gnu.c.debugging.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.Min"
				  command="-g1"
				  id="gnu.c.debugging.level.minimal">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.Def"
				  isDefault="true"
				  command="-g"
				  id="gnu.c.debugging.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.Max"
				  isDefault="false"
				  command="-g3"
				  id="gnu.c.debugging.level.max">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="MBS30Opt.Posix.Debug.Other"
			  category="gnu.c.compiler.category30.debug"
			  id="gnu.c.compiler.option30.debugging.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Debug.gprof"
			  category="gnu.c.compiler.category30.debug"
			  command="-pg"
			  id="gnu.c.compiler.option30.debugging.gprof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Debug.prof"
			  category="gnu.c.compiler.category30.debug"
			  command="-p"
			  id="gnu.c.compiler.option30.debugging.prof"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Warn"
			  id="gnu.c.compiler.category30.warnings">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.Syntax"
			  category="gnu.c.compiler.category30.warnings"
			  command="-fsyntax-only"
			  id="gnu.c.compiler.option30.warnings.syntax"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.Pedandic"
			  category="gnu.c.compiler.category30.warnings"
			  command="-pedantic"
			  id="gnu.c.compiler.option30.warnings.pedantic"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.PedErrors"
			  category="gnu.c.compiler.category30.warnings"
			  command="-pedantic-errors"
			  id="gnu.c.compiler.option30.warnings.pedantic.error"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.nowarn"
			  category="gnu.c.compiler.category30.warnings"
			  command="-w"
			  id="gnu.c.compiler.option30.warnings.nowarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="true"
			  name="MBS30Opt.Posix.Warn.allwarn"
			  category="gnu.c.compiler.category30.warnings"
			  command="-Wall"
			  id="gnu.c.compiler.option30.warnings.allwarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.toerrs"
			  category="gnu.c.compiler.category30.warnings"
			  command="-Werror"
			  id="gnu.c.compiler.option30.warnings.toerrors"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.c.compiler"
			  name="MBS30OptCat.Misc"
			  id="gnu.c.compiler.category30.other">
		  </optionCategory>
		  <option
			  defaultValue="-c -fmessage-length=0"
			  name="MBS30Opt.OtherFlags"
			  category="gnu.c.compiler.category30.other"
			  id="gnu.c.compiler.option30.misc.other"
			  valueType="string">
		  </option>
		  <option
	          applicabilityCalculator="org.eclipse.cdt.managedbuilder.core.tests.AlwaysOnApplicabilityCalculator"
			  category="gnu.c.compiler.category30.other"
			  command="-v"
    	      defaultValue="true"
			  id="gnu.c.compiler.option30.misc.verbose"
        	  name="MBS30Opt.Posix.Verbose"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Ansi"
			  category="gnu.c.compiler.category30.other"
			  command="-ansi"
			  id="gnu.c.compiler.option30.misc.ansi"
			  valueType="boolean">
		  </option>
		  <option
	          applicabilityCalculator="org.eclipse.cdt.managedbuilder.core.tests.AlwaysOffApplicabilityCalculator"
        	  defaultValue="true"
        	  name="MBS30Opt.Posix.FakeOption"
			  category="gnu.c.compiler.category30.other"
    	      command="-fake"
	          id="gnu.c.compiler.option30.misc.FakeOption"
    	      isAbstract="false"
   		      valueType="boolean">
   		  </option>
          <inputType
		      sources="c"
			  dependencyExtensions="h"
			  dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.gnu.DefaultGCCDependencyCalculator"
              id="cdt.managedbuild.tool.testgnu30.c.compiler.input">
          </inputType>
          <outputType
			  outputs="o"
              buildVariable="OBJS"
              id="cdt.managedbuild.tool.testgnu30.c.compiler.output">
          </outputType>
	  </tool>
	  <tool
		  name="MBS30.compiler.gnu.cpp"
		  id="cdt.managedbuild.tool.testgnu30.cpp.compiler"
		  isAbstract="true"
		  command="g++"
		  natureFilter="ccnature"
		  outputFlag="-o">
         <envVarBuildPath 
         	pathType="buildpathInclude"
         	variableList="CPATH,CPLUS_INCLUDE_PATH">
         </envVarBuildPath>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.cpp.compiler"
			  name="MBS30OptCat.Preproc"
			  id="gnu.cpp.compiler.category30.preprocessor">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Nostdinc"
			  category="gnu.cpp.compiler.category30.preprocessor"
			  command="-nostdinc"
			  id="gnu.cpp.compiler.option30.preprocessor.nostdinc"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.PreprocOnly"
			  category="gnu.cpp.compiler.category30.preprocessor"
			  command="-E"
			  id="gnu.cpp.compiler.option30.preprocessor.preprocess"
			  valueType="boolean">
		  </option>
		  <option
			  name="MBS30Opt.Posix.DefSym"
			  category="gnu.cpp.compiler.category30.preprocessor"
			  command="-D"
			  id="gnu.cpp.compiler.option30.preprocessor.def"
			  valueType="definedSymbols">
		  </option>
		  <option
			  name="MBS30Opt.Posix.UndefSym"
			  category="gnu.cpp.compiler.category30.preprocessor"
			  command="-U"
			  id="gnu.cpp.compiler.option30.preprocessor.undef"
			  valueType="stringList">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.cpp.compiler"
			  name="MBS30OptCat.Dirs"
			  id="gnu.cpp.compiler.category30.dirs">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.InclPaths"
			  category="gnu.cpp.compiler.category30.dirs"
			  command="-I"
			  id="gnu.cpp.compiler.option30.include.paths"
			  valueType="includePath"
			  browseType="directory">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.cpp.compiler"
			  name="MBS30OptCat.Optimize"
			  id="gnu.cpp.compiler.category30.optimization">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.OptLevel"
			  category="gnu.cpp.compiler.category30.optimization"
			  id="gnu.cpp.compiler.option30.optimization.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.None"
				  command="-O0"
				  id="gnu.cpp.compiler.optimization.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.Optimize"
				  command="-O1"
				  id="gnu.cpp.compiler.optimization.level.optimize">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.More"
				  isDefault="true"
				  command="-O2"
				  id="gnu.cpp.compiler.optimization.level.more">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Optimize.Most"
				  command="-O3"
				  id="gnu.cpp.compiler.optimization.level.most">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="MBS30Opt.Posix.Optimize.Flags"
			  category="gnu.cpp.compiler.category30.optimization"
			  id="gnu.cpp.compiler.option30.optimization.flags"
			  valueType="string">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.cpp.compiler"
			  name="MBS30OptCat.Debug"
			  id="gnu.cpp.compiler.category30.debug">
		  </optionCategory>
		  <option
			  name="MBS30Opt.Posix.DebugLevel"
			  category="gnu.cpp.compiler.category30.debug"
			  id="gnu.cpp.compiler.option30.debugging.level"
			  valueType="enumerated">
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.None"
				  isDefault="false"
				  id="gnu.cpp.compiler.debugging.level.none">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.Min"
				  command="-g1"
				  id="gnu.cpp.compiler.debugging.level.minimal">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.Def"
				  isDefault="true"
				  command="-g"
				  id="gnu.cpp.compiler.debugging.level.default">
		  </enumeratedOptionValue>
		  <enumeratedOptionValue
				  name="MBS30Opt.Posix.Debug.Max"
				  isDefault="false"
				  command="-g3"
				  id="gnu.cpp.compiler.debugging.level.max">
		  </enumeratedOptionValue>
		  </option>
		  <option
			  name="MBS30Opt.Posix.Debug.Other"
			  category="gnu.cpp.compiler.category30.debug"
			  id="gnu.cpp.compiler.option30.debugging.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Debug.prof"
			  category="gnu.cpp.compiler.category30.debug"
			  command="-p"
			  id="gnu.cpp.compiler.option30.debugging.prof"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Debug.gprof"
			  category="gnu.cpp.compiler.category30.debug"
			  command="-pg"
			  id="gnu.cpp.compiler.option30.debugging.gprof"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.cpp.compiler"
			  name="MBS30OptCat.Warn"
			  id="gnu.cpp.compiler.category30.warnings">
		  </optionCategory>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.Syntax"
			  category="gnu.cpp.compiler.category30.warnings"
			  command="-fsyntax-only"
			  id="gnu.cpp.compiler.option30.warnings.syntax"
			  valueType="boolean">
		   </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.Pedandic"
			  category="gnu.cpp.compiler.category30.warnings"
			  command="-pedantic"
			  id="gnu.cpp.compiler.option30.warnings.pedantic"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.PedErrors"
			  category="gnu.cpp.compiler.category30.warnings"
			  command="-pedantic-errors"
			  id="gnu.cpp.compiler.option30.warnings.pedantic.error"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.nowarn"
			  category="gnu.cpp.compiler.category30.warnings"
			  command="-w"
			  id="gnu.cpp.compiler.option30.warnings.nowarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="true"
			  name="MBS30Opt.Posix.Warn.allwarn"
			  category="gnu.cpp.compiler.category30.warnings"
			  command="-Wall"
			  id="gnu.cpp.compiler.option30.warnings.allwarn"
			  valueType="boolean">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Warn.toerrs"
			  category="gnu.cpp.compiler.category30.warnings"
			  command="-Werror"
			  id="gnu.cpp.compiler.option30.warnings.toerrors"
			  valueType="boolean">
		  </option>
		  <optionCategory
			  owner="cdt.managedbuild.tool.testgnu30.cpp.compiler"
			  name="MBS30OptCat.Misc"
			  id="gnu.cpp.compiler.category30.other">
		  </optionCategory>
		  <option
			  defaultValue="-c -fmessage-length=0"
			  name="MBS30Opt.OtherFlags"
			  category="gnu.cpp.compiler.category30.other"
			  id="gnu.cpp.compiler.option30.other.other"
			  valueType="string">
		  </option>
		  <option
			  defaultValue="false"
			  name="MBS30Opt.Posix.Verbose"
			  category="gnu.cpp.compiler.category30.other"
			  command="-v"
			  id="gnu.cpp.compiler.option30.other.verbose"
			  valueType="boolean">
		  </option>
          <inputType
			  sources="c,C,cc,cxx,cpp"
			  dependencyExtensions="h,H,hpp"
			  dependencyCalculator="org.eclipse.cdt.managedbuilder.makegen.gnu.DefaultGCCDependencyCalculator"
              id="cdt.managedbuild.tool.testgnu30.cpp.compiler.input">
          </inputType>
          <outputType
			  outputs="o"
              buildVariable="OBJS"
              id="cdt.managedbuild.tool.testgnu30.cpp.compiler.output">
          </outputType>
	  </tool>
        
      <projectType      
            isAbstract="false"     
            isTest="true"
            name="MBS30TargetName.gnu.exe"
            id="cdt.managedbuild.target.gnu30.exe">
         <configuration
               name="MBS30ConfigName.Dbg"
               id="cdt.managedbuild.config.testgnu30.exe.debug"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">
               <toolChain
                     archList="all"
                     osList="solaris,linux,hpux,aix,qnx"
                     name="MBS30ToolChainName.Dbg"
                     targetTool="cdt.managedbuild.tool.testgnu30.c.linker.exe.debug;cdt.managedbuild.tool.testgnu30.cpp.linker.exe.debug"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                     id="cdt.managedbuild.toolchain.testgnu30.exe.debug">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu30.platform.exe.debug"
		              name="MBS30PlatformName.Dbg"
		              binaryParser="org.eclipse.cdt.core.ELF"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
	              </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu30.builder.exe.debug"
		              name="MBS30BuilderName.Dbg"
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
		     	  </builder>               
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.c.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.c.compiler">                          
			  	      <option
					      id="gnu.c.compiler.exe.debug.option30.optimization.level"
						  defaultValue="gnu.c.optimization.level.none"
						  superClass="gnu.c.compiler.option30.optimization.level">
					  </option>
					  <option   
					      id="gnu.c.compiler.exe.debug.option30.debugging.level"					     
						  defaultValue="gnu.c.debugging.level.max"
					      superClass="gnu.c.compiler.option30.debugging.level">
					  </option>
				  </tool>
				  <tool
                      id="cdt.managedbuild.tool.testgnu30.cpp.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">                         
                      <option
				          id="gnu.cpp.compiler.exe.debug.option30.optimization.level"
                          defaultValue="gnu.cpp.compiler.optimization.level.none"
                          superClass="gnu.cpp.compiler.option30.optimization.level">
                      </option>
                      <option
						  id="gnu.cpp.compiler.exe.debug.option30.debugging.level"
                          defaultValue="gnu.cpp.compiler.debugging.level.max"
                          superClass="gnu.cpp.compiler.option30.debugging.level">
                      </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.c.linker.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.c.linker">
                  </tool> 
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.cpp.linker.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.linker">
                  </tool> 
			  </toolChain>
         </configuration>
         <configuration
               name="MBS30ConfigName.Rel"
               id="cdt.managedbuild.config.testgnu30.exe.release"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">               
               <toolChain
                     archList="all"
                     osList="solaris,linux,hpux,aix,qnx"
                     name="MBS30ToolChainName.Rel"
                     targetTool="cdt.managedbuild.tool.testgnu30.c.linker.exe.release;cdt.managedbuild.tool.testgnu30.cpp.linker.exe.release"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                     id="cdt.managedbuild.toolchain.testgnu30.exe.release">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu30.platform.exe.release"
		              name="MBS30PlatformName.Rel"		             
		              binaryParser="org.eclipse.cdt.core.ELF"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">		              
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu30.builder.exe.release"
		              name="MBS30BuilderName.Rel"		              
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
				  </builder> 
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.c.compiler.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu30.c.compiler">                          
					  <option
						  id="gnu.c.compiler.exe.release.option30.optimization.level"
						  defaultValue="gnu.c.optimization.level.most"
						  superClass="gnu.c.compiler.option30.optimization.level">
					  </option>
					  <option
						  id="gnu.c.compiler.exe.release.option30.debugging.level"
						  defaultValue="gnu.c.debugging.level.none"
						  superClass="gnu.c.compiler.option30.debugging.level">
					  </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.cpp.compiler.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">                     
					  <option
						  id="gnu.cpp.compiler.exe.release.option30.optimization.level"
						  defaultValue="gnu.cpp.compiler.optimization.level.most"
						  superClass="gnu.cpp.compiler.option30.optimization.level">
					  </option>
					  <option
						  id="gnu.cpp.compiler.exe.release.option30.debugging.level"
						  defaultValue="gnu.cpp.compiler.debugging.level.none"
						  superClass="gnu.cpp.compiler.option30.debugging.level">
					  </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.c.linker.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu30.c.linker">
                  </tool> 
                  <tool
                      id="cdt.managedbuild.tool.testgnu30.cpp.linker.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.linker">
                  </tool>  
               </toolChain>
         </configuration>
      </projectType>     
      
      <projectType      
            isAbstract="false"     
            isTest="true"
            name="MBS30TargetName.gnu.so"
            id="cdt.managedbuild.target.gnu30.so">
         <configuration
               name="MBS30ConfigName.Dbg"
               cleanCommand="rm -rf"
               artifactExtension="so"               
               errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"                          
               id="cdt.managedbuild.config.testgnu30.so.debug">
               <toolChain
                     archList="all"
                     osList="solaris,linux,hpux,aix,qnx"
                     name="MBS30ToolChainName.Dbg"
                     targetTool="cdt.managedbuild.tool.testgnu30.c.linker.so.debug;cdt.managedbuild.tool.testgnu30.cpp.linker.so.debug"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                     id="cdt.managedbuild.toolchain.testgnu30.so.debug">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu30.platform.so.debug"
		              name="MBS30PlatformName.Dbg"
		              binaryParser="org.eclipse.cdt.core.ELF"		            
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu30.builder.so.debug"
		              name="MBS30BuilderName.Dbg"
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">		              
				  </builder>               		         
				  <tool
				      id="cdt.managedbuild.tool.testgnu30.c.compiler.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu30.c.compiler">
					  <option
						  id="gnu.c.compiler.so.debug.option30.optimization.level"
						  defaultValue="gnu.c.optimization.level.none"
						  superClass="gnu.c.compiler.option30.optimization.level">
					  </option>
					  <option
					      id="gnu.c.compiler.so.debug.option30.debugging.level"
						  defaultValue="gnu.c.debugging.level.max"
						  superClass="gnu.c.compiler.option30.debugging.level">
					  </option>
				  </tool>
				  <tool
				      id="cdt.managedbuild.tool.testgnu30.cpp.compiler.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">
					  <option
					      id="gnu.cpp.compiler.so.debug.option30.optimization.level"
						  defaultValue="gnu.cpp.compiler.optimization.level.none"
						  superClass="gnu.cpp.compiler.option30.optimization.level">
					  </option>
					  <option
					      id="gnu.cpp.compiler.so.debug.option30.debugging.level"
						  defaultValue="gnu.cpp.compiler.debugging.level.max"
						  superClass="gnu.cpp.compiler.option30.debugging.level">
					  </option>
				  </tool>
				  <tool
				      id="cdt.managedbuild.tool.testgnu30.c.linker.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu30.c.linker">
					  <option
						  id="gnu.c.link.so.debug.option30.shared"
						  defaultValue="true"
						  superClass="gnu.c.link.option30.shared">
					  </option>
			          <outputType
						  outputs="so"
						  outputPrefix="lib"
			              buildVariable="LIBRARIES"
			              superClass="cdt.managedbuild.tool.testgnu30.c.linker.output"
			              id="cdt.managedbuild.tool.testgnu30.c.linker.so.debug.output">
			          </outputType>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu30.cpp.linker.so.debug"
					  superClass="cdt.managedbuild.tool.testgnu30.cpp.linker">
					  <option
						  id="gnu.cpp.link.so.debug.option30.shared"
						  defaultValue="true"
						  superClass="gnu.cpp.link.option30.shared">
					  </option>
			          <outputType
						  outputs="so"
						  outputPrefix="lib"
			              buildVariable="LIBRARIES"
			              superClass="cdt.managedbuild.tool.testgnu30.cpp.linker.output"
			              id="cdt.managedbuild.tool.testgnu30.cpp.linker.so.debug.output">
			          </outputType>
				  </tool>
			   </toolChain>
         </configuration>
         <configuration
               name="MBS30ConfigName.Rel"
               cleanCommand="rm -rf"
               artifactExtension="so"
               errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
               id="cdt.managedbuild.config.testgnu30.so.release">
               <toolChain
                     archList="all"
                     osList="solaris,linux,hpux,aix,qnx"
                     name="MBS30ToolChainName.Rel"
                     targetTool="cdt.managedbuild.tool.testgnu30.c.linker.so.release;cdt.managedbuild.tool.testgnu30.cpp.linker.so.release"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                     id="cdt.managedbuild.toolchain.testgnu30.so.release">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu30.platform.so.release"
		              name="MBS30PlatformName.Rel"
		              binaryParser="org.eclipse.cdt.core.ELF"		            
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu30.builder.so.release"
		              name="MBS30BuilderName.Rel"
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">		              
				  </builder>               
				  <tool				     
				      id="cdt.managedbuild.tool.testgnu30.c.compiler.so.release"
					  superClass="cdt.managedbuild.tool.testgnu30.c.compiler">
				      <option
				          id="gnu.c.compiler.so.release.option30.optimization.level"
						  defaultValue="gnu.c.optimization.level.most"
						  superClass="gnu.c.compiler.option30.optimization.level">
				      </option>
				      <option
				          id="gnu.c.compiler.so.release.option30.debugging.level"
						  defaultValue="gnu.c.debugging.level.none"
						  superClass="gnu.c.compiler.option30.debugging.level">
				      </option>
				  </tool>
				  <tool
				      id="cdt.managedbuild.tool.testgnu30.cpp.compiler.so.release"
					  superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">
				      <option
				          id="gnu.cpp.compiler.so.release.option30.optimization.level"
						  defaultValue="gnu.cpp.compiler.optimization.level.most"
						  superClass="gnu.cpp.compiler.option30.optimization.level">
				      </option>
				      <option
				          id="gnu.cpp.compiler.so.release.option30.debugging.level"
						  defaultValue="gnu.cpp.compiler.debugging.level.none"
						  superClass="gnu.cpp.compiler.option30.debugging.level">
				      </option>
				  </tool>				
				  <tool
				      id="cdt.managedbuild.tool.testgnu30.c.linker.so.release"
					  superClass="cdt.managedbuild.tool.testgnu30.c.linker">
					  <option
						  id="gnu.c.link.so.release.option30.shared"
						  defaultValue="true"
						  superClass="gnu.c.link.option30.shared">
					  </option>
			          <outputType
						  outputs="so"
						  outputPrefix="lib"
			              buildVariable="LIBRARIES"
			              superClass="cdt.managedbuild.tool.testgnu30.c.linker.output"
			              id="cdt.managedbuild.tool.testgnu30.c.linker.so.release.output">
			          </outputType>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu30.cpp.linker.so.release"
					  superClass="cdt.managedbuild.tool.testgnu30.cpp.linker">
					  <option
						  id="gnu.cpp.link.so.release.option30.shared"
						  defaultValue="true"
						  superClass="gnu.cpp.link.option30.shared">
					  </option>
			          <outputType
						  outputs="so"
						  outputPrefix="lib"
			              buildVariable="LIBRARIES"
			              superClass="cdt.managedbuild.tool.testgnu30.cpp.linker.output"
			              id="cdt.managedbuild.tool.testgnu30.cpp.linker.so.release.output">
			          </outputType>
				  </tool>
			   </toolChain>  
         </configuration>         
      </projectType>
          
      <projectType 
            isTest="true"
            name="MBS30TargetName.gnu.lib"
            isAbstract="false"
            id="cdt.managedbuild.target.gnu30.lib">                        
         <configuration
			   name="MBS30ConfigName.Dbg"
			   artifactExtension="a"
			   cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
			   id="cdt.managedbuild.config.testgnu30.lib.debug">
               <toolChain
                     archList="all"
                     osList="solaris,linux,hpux,aix,qnx"
                     name="MBS30ToolChainName.Dbg"
                     targetTool="cdt.managedbuild.tool.testgnu30.archiver.lib.debug"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                     id="cdt.managedbuild.toolchain.testgnu30.lib.debug">
				  <targetPlatform
					  id="cdt.managedbuild.target.testgnu30.platform.lib.debug"
				 	  name="MBS30PlatformName.Dbg"
					  binaryParser="org.eclipse.cdt.core.ELF"		            
					  osList="solaris,linux,hpux,aix,qnx"
					  archList="all">
				  </targetPlatform>
			  	  <builder
					  id="cdt.managedbuild.target.testgnu30.builder.lib.debug"
					  name="MBS30BuilderName.Dbg"
					  command="make"
					  arguments="-k"
					  buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">		              
			      </builder>               		         
				  <tool
					  id="cdt.managedbuild.tool.testgnu30.c.compiler.lib.debug"
					  superClass="cdt.managedbuild.tool.testgnu30.c.compiler">
				      <option
					      id="gnu.c.compiler.lib.debug.option30.optimization.level"
						  defaultValue="gnu.c.optimization.level.none"
						  superClass="gnu.c.compiler.option30.optimization.level">
				      </option>
				      <option
						  id="gnu.c.compiler.lib.debug.option30.debugging.level"						
						  defaultValue="gnu.c.debugging.level.max"
						  superClass="gnu.c.compiler.option30.debugging.level">
				      </option>
				  </tool>
                  <tool
					  id="cdt.managedbuild.tool.testgnu30.cpp.compiler.lib.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">
					  <option
					      id="gnu.cpp.compiler.lib.debug.option30.optimization.level"
					      defaultValue="gnu.cpp.compiler.optimization.level.none"
					      superClass="gnu.cpp.compiler.option30.optimization.level">
					  </option>
					  <option
					      id="gnu.cpp.compiler.lib.debug.option30.debugging.level"
					      defaultValue="gnu.cpp.compiler.debugging.level.max"
					      superClass="gnu.cpp.compiler.option30.debugging.level">
					  </option>
                  </tool>
			      <tool
		    		  id="cdt.managedbuild.tool.testgnu30.archiver.lib.debug"
			          superClass="cdt.managedbuild.tool.testgnu30.archiver">
				  </tool>                 
               </toolChain>                 
         </configuration>
         <configuration
               name="MBS30ConfigName.Rel"
               artifactExtension="a"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
               id="cdt.managedbuild.config.testgnu30.lib.release">
               <toolChain
                     archList="all"
                     osList="solaris,linux,hpux,aix,qnx"
                     name="MBS30ToolChainName.Rel"
                     targetTool="cdt.managedbuild.tool.testgnu30.archiver.lib.release"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                     id="cdt.managedbuild.toolchain.testgnu30.lib.release">
		          <targetPlatform
		              id="cdt.managedbuild.target.testgnu30.platform.lib.release"
		              name="MBS30PlatformName.Rel"
		              binaryParser="org.eclipse.cdt.core.ELF"		            
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testgnu30.builder.lib.release"
		              name="MBS30BuilderName.Rel"
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">		              
				  </builder>               		            
		          <tool
					  id="cdt.managedbuild.tool.testgnu30.c.compiler.lib.release"
					  superClass="cdt.managedbuild.tool.testgnu30.c.compiler">
					  <option
						  id="gnu.c.compiler.lib.release.option30.optimization.level"
						  defaultValue="gnu.c.optimization.level.most"
						  superClass="gnu.c.compiler.option30.optimization.level">
					  </option>
					  <option
						  id="gnu.c.compiler.lib.release.option30.debugging.level"
					      defaultValue="gnu.c.debugging.level.none"
					      superClass="gnu.c.compiler.option30.debugging.level">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu30.cpp.compiler.lib.release"
					  superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">
					  <option
						  id="gnu.cpp.compiler.lib.release.option30.optimization.level"
						  defaultValue="gnu.cpp.compiler.optimization.level.most"
						  superClass="gnu.cpp.compiler.option30.optimization.level">
					  </option>
					  <option
						  id="gnu.cpp.compiler.lib.release.option30.debugging.level"
						  defaultValue="gnu.cpp.compiler.debugging.level.none"
						  superClass="gnu.cpp.compiler.option30.debugging.level">
					  </option>
				  </tool>
				  <tool
					  id="cdt.managedbuild.tool.testgnu30.archiver.lib.release"
				      superClass="cdt.managedbuild.tool.testgnu30.archiver">
				  </tool>
               </toolChain>				  
         </configuration>                  
      </projectType>
      
	  <!-- Test tools and project types for initial and final copy steps -->
      <tool
      		name="Copy tool"
      		command="cp"
      		commandLinePattern="${COMMAND} ${INPUTS} ${OUTPUT}"
      		id="cdt.managedbuild.tool30.copy.x.c">
         <inputType
            id="cdt.managedbuild.tool30.copy.x.c.inputs"
            sources="x">
         </inputType>
         <outputType
            id="cdt.managedbuild.tool30.copy.x.c.output"
			outputs="c"
			buildVariable="CS">
         </outputType>
      </tool>   
      <tool
      		name="Deploy tool"
      		command="cp"
      		commandLinePattern="${COMMAND} ${INPUTS} ${OUTPUT}"
      		id="cdt.managedbuild.tool30.deploy.x.c">
         <inputType
            id="cdt.managedbuild.tool30.deploy.x.c.inputs"
            buildVariable="EXECUTABLES"
            sources="foo">
         </inputType>
         <outputType
            id="cdt.managedbuild.tool30.deploy.x.c.output"
			outputs="exe"
			buildVariable="FINAL">
         </outputType>
      </tool>   
      
      <projectType      
            isAbstract="false"     
            isTest="true"
            name="Testprepost30.gnu.exe"
            id="cdt.managedbuild.Testprepost30.gnu.exe">
         <configuration
               name="Dbg"
               id="cdt.managedbuild.config.Testprepost30.gnu.exe.debug"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">
               <toolChain
                      archList="all"
                      osList="solaris,linux,hpux,aix,qnx"
                      name="ToolChainDbg"
                      scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                      targetTool="foo.bar;cdt.managedbuild.tool30.deploy.x.c.1"
                      id="cdt.managedbuild.Testprepost30.gnu.toolchain.exe.debug">
		          <targetPlatform
		              id="cdt.managedbuild.Testprepost30.gnu.platform.exe.debug"
		              name="PlatformDbg"
		              binaryParser="org.eclipse.cdt.core.ELF"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
	              </targetPlatform>
				  <builder
				      id="cdt.managedbuild.Testprepost30.gnu.builder.exe.debug"
		              name="BuilderDbg"
		              command="make"
		              arguments="-k"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
		     	  </builder>               
                  <tool
                      id="cdt.managedbuild.tool.Testprepost30.gnu.c.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.c.compiler">                         
			  	      <option
					      id="gnu.c.compiler.Testprepost30.exe.debug.option.optimization.level"
						  defaultValue="gnu.c.optimization.level.none"
						  superClass="gnu.c.compiler.option30.optimization.level">
					  </option>
					  <option   
					      id="gnu.c.compiler.Testprepost30.exe.debug.option.debugging.level"					     
						  defaultValue="gnu.c.debugging.level.max"
					      superClass="gnu.c.compiler.option30.debugging.level">
					  </option>
				  </tool>
				  <tool
                      id="cdt.managedbuild.tool.Testprepost30.gnu.cpp.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.compiler">                         
                      <option
				          id="gnu.cpp.compiler.Testprepost30.exe.debug.option.optimization.level"
                          defaultValue="gnu.cpp.compiler.optimization.level.none"
                          superClass="gnu.cpp.compiler.option30.optimization.level">
                      </option>
                      <option
						  id="gnu.cpp.compiler.Testprepost30.exe.debug.option.debugging.level"
                          defaultValue="gnu.cpp.compiler.debugging.level.max"
                          superClass="gnu.cpp.compiler.option30.debugging.level">
                      </option>
                  </tool>
                  <tool
                      id="cdt.managedbuild.tool.Testprepost30.gnu.c.linker.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.c.linker">
			         <outputType
	                    id="cdt.managedbuild.tool.Testprepost30.gnu.c.linker.exe.debug.output"
			            superClass="cdt.managedbuild.tool.testgnu30.c.linker.output"
						outputs="foo">
			         </outputType>
                  </tool> 
                  <tool
                      id="cdt.managedbuild.tool.Testprepost30.gnu.cpp.linker.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu30.cpp.linker">
                  </tool> 
				  <tool
					  id="cdt.managedbuild.tool30.copy.x.c.1"
					  superClass="cdt.managedbuild.tool30.copy.x.c">
				  </tool>   
				  <tool
					  id="cdt.managedbuild.tool30.deploy.x.c.1"
					  superClass="cdt.managedbuild.tool30.deploy.x.c">
				  </tool>   
			  </toolChain>
         </configuration>
      </projectType>     
      
	  <!-- Test tools and project types for a more complicated tool-chain, using
	       tar -xf, gcc, strip, linker, cjpeg, copy -->
      
      <projectType      
            isAbstract="false"     
            isTest="true"
            name="test30_1"
            id="test30_1.gnu.so">
         <configuration
               name="TheConfig"
               id="test30_1.gnu.so.config"
               artifactExtension="so.4.5.6"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser">
               <toolChain
                      archList="all"
                      osList="all"
                      name="ToolChain for test30_1"
                      scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile"
                      targetTool="test30_1.gnu.so.deploy"
                      secondaryOutputs="test30_1.gnu.so.cjpeg.output"
                      id="test30_1.gnu.so.toolchain">
		          <targetPlatform
		              id="test30_1.gnu.so.platform"
		              name="Platform for test30_1"
		              binaryParser="org.eclipse.cdt.core.ELF">
	              </targetPlatform>
				  <builder
		              id="test30_1.gnu.so.builder"
		              name="Builder for test30_1"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
		     	  </builder>               
                  <tool
                      id="test30_1.gnu.so.c.compiler"
                      superClass="cdt.managedbuild.tool.testgnu30.c.compiler">
			          <outputType
						  outputs="oprestripped"
	                      id="test30_1.gnu.so.c.compiler.output"
			              superClass="cdt.managedbuild.tool.testgnu30.c.compiler.output">
			          </outputType>
				  </tool>
                  <tool
                      id="test30_1.gnu.so.c.linker"
                      superClass="cdt.managedbuild.tool.testgnu30.c.linker">
			         <option
			               defaultValue="true"
			               id="test30_1.gnu.c.link.option30.shared"
			               superClass="gnu.c.link.option30.shared">
			         </option>
			         <inputType
			            buildVariable="STRIPPEDOBJS"
			            id="test30_1.gnu.so.c.linker.input"
			            superClass="cdt.managedbuild.tool.testgnu30.c.linker.input">
			         </inputType>
                  </tool> 
			      <tool
			      		name="Un-tar"
			      		command="tar"
			      		commandLinePattern="${COMMAND} ${FLAGS} ${INPUTS}"
			      		id="test30_1.gnu.so.tar">
					 <optionCategory
						  name="Misc"
						  id="test30_1.gnu.so.tar.category.misc">
					 </optionCategory>
					 <option
						  defaultValue="-xf"
						  name="All Flags"
						  category="test30_1.gnu.so.tar.category.misc"
						  id="test30_1.gnu.so.tar.misc.other"
						  valueType="string">
					 </option>
			         <inputType
			            id="test30_1.gnu.so.tar.input"
			            sources="tar">
			         </inputType>
			         <outputType
			            id="test30_1.gnu.so.tar.outputc"
			            multipleOfType="true"
						outputNames="f1.c;f2.c">
			         </outputType>
			         <outputType
			            id="test30_1.gnu.so.tar.outputh"
						outputNames="test_ar.h">
			         </outputType>
			         <outputType
			            id="test30_1.gnu.so.tar.outputbmp"
						outputNames="CDT.bmp">
			         </outputType>
			      </tool>   
			      <tool
			      		name="Strip object file"
			      		command="strip"
			            outputFlag="-o"
			            commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
			      		id="test30_1.gnu.so.strip">
					 <optionCategory
						  name="Misc"
						  id="test30_1.gnu.so.strip.category.misc">
					 </optionCategory>
					 <option
						  defaultValue="--preserve-dates"
						  name="All Flags"
						  category="test30_1.gnu.so.strip.category.misc"
						  id="test30_1.gnu.so.strip.misc.other"
						  valueType="string">
					 </option>
					 <!--  The following buildVariable should be ignored because a pattern rule is generated -->
			         <inputType
			            id="test30_1.gnu.so.strip.input"
			            buildVariable="OBJS"
			            sources="oprestripped">
			         </inputType>
			         <outputType
			            id="test30_1.gnu.so.strip.output"
			            buildVariable="STRIPPEDOBJS"
			            namePattern="%.o"
			            outputs="o">
			         </outputType>
			      </tool>   
			      <tool
			      		name="Convert to jpeg"
			      		command="cjpeg"
			            outputFlag="-outfile"
			            commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}"
			      		id="test30_1.gnu.so.cjpeg">
					 <optionCategory
						  name="Misc"
						  id="test30_1.gnu.so.cjpeg.category.misc">
					 </optionCategory>
					 <option
						  name="All Flags"
						  category="test30_1.gnu.so.cjpeg.category.misc"
						  id="test30_1.gnu.so.cjpeg.misc.other"
						  valueType="string">
					 </option>
			         <inputType
			            id="test30_1.gnu.so.cjpeg.input"
			            sources="bmp">
			         </inputType>
			         <outputType
			            id="test30_1.gnu.so.cjpeg.output"
			            primaryInputType="test30_1.gnu.so.cjpeg.input"
			            outputs="jpeg">
			         </outputType>
			      </tool>   
				  <tool
					 id="test30_1.gnu.so.deploy"
					 superClass="cdt.managedbuild.tool30.deploy.x.c">
					 <inputType
						 id="test30_1.gnu.so.deploy.input"
						 sources="so.1.2.3">
			         </inputType>
			         <outputType
						 id="test30_1.gnu.so.deploy.output"
						 outputs="so.4.5.6">
			         </outputType>
				  </tool>   
			  </toolChain>
         </configuration>
      </projectType>      
                 
      <toolChain
            archList="all"
            id="test30_sto.dummy.toolchain.parent"
            isAbstract="true"
            name="test30_sto ToolChain.Parent"
            osList="all">   
         <optionCategory
               id="test30_sto.dummy.category.5"
               name="Category.Top.5.NoIcon"/>
         <optionCategory
               icon="icons/two.gif"
               id="test30_sto.dummy.category.6"
               name="Category.Top.6.Icon2"/>
            <option
                  category="test30_sto.dummy.category.5"
                  id="test30_sto.dummy.option.parent.5.1"
                  isAbstract="true"
                  name="Option5.1.Handler.Parent"
                  valueHandler="org.eclipse.cdt.managedbuilder.core.tests.TestValueHandler"
                  valueHandlerExtraArgument="Option5.1"
                  valueType="boolean"/>
         <tool
               icon="icons/one.gif"
               id="test30_sto.dummy.tool.parent.1"
               isAbstract="true"
               name="test30_sto Tool1.Parent"/>
         <tool
               id="test30_sto.dummy.tool.parent.2"
               isAbstract="true"
               name="test30_sto Tool2.Parent">
            <option
                  id="test30_sto.dummy.option.parent.2.1.1"
                  isAbstract="true"
                  name="Option2.1.1.Handler.Parent"
                  valueHandler="org.eclipse.cdt.managedbuilder.core.tests.TestValueHandler"
                  valueHandlerExtraArgument="Option2.1.1"
                  valueType="string"/>
         </tool>
         <tool
               id="test30_sto.dummy.tool.parent.3"
               isAbstract="true"
               name="test30_sto Tool3.Parent">
            <optionCategory
                  icon="icons/one.gif"
                  id="test30_sto.dummy.category.parent.3.1"
                  name="Category.Tool3.1.Icon1"
                  owner="test30_sto.dummy.tool.parent.3"/>
            <option
                  category="test30_sto.dummy.category.parent.3.1"
                  id="test30_sto.dummy.option.parent.3.1.1"
                  isAbstract="true"
                  name="Option3.1.1.NoHandler.Parent"/>
            <option
                  category="test30_sto.dummy.category.parent.3.1"
                  id="test30_sto.dummy.option.parent.3.1.2"
                  isAbstract="true"
                  name="Option3.1.2.Handler.Parent"
                  valueHandler="org.eclipse.cdt.managedbuilder.core.tests.TestValueHandler"
                  valueHandlerExtraArgument="Option3.1.2"/>
         </tool>
      </toolChain>
      <projectType
            id="test30_sto.dummy"
            isAbstract="false"
            isTest="true"
            name="test30_sto">
         <configuration
               id="test30_sto.dummy.config"
               name="Configuration for test30_sto">
            <toolChain
                  id="test30_sto.dummy.toolchain"
                  isAbstract="false"
                  name="Toolchain for test30_sto"
                  superClass="test30_sto.dummy.toolchain.parent">
               <targetPlatform
                     archList="all"
                     id="test30_sto.dummy.platform"
                     isAbstract="false"
                     name="Platform for test30_sto"
                     osList="all"/>
               <builder
                     buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator"
                     id="test30_sto.dummy.builder"
                     isAbstract="false"
                     name="Builder for test30_sto"/>
               <tool
                     id="test30_sto.dummy.tool.1"
                     isAbstract="false"
                     name="Tool.1.Icon1"
                     superClass="test30_sto.dummy.tool.parent.1"/>
               <tool
                     id="test30_sto.dummy.tool.2"
                     isAbstract="false"
                     name="Tool.2.NoIcon"
                     superClass="test30_sto.dummy.tool.parent.2">
                  <optionCategory
                        icon="icons/two.gif"
                        id="test30_sto.dummy.category.2.1"
                        name="Category.Tool2.1.Icon2"
                        owner="test30_sto.dummy.tool.2"/>
                  <option
                        category="test30_sto.dummy.category.2.1"
                        id="test30_sto.dummy.option.2.1.1"
                        isAbstract="false"
                        name="Option2.1.1.Handler"
                        superClass="test30_sto.dummy.option.parent.2.1.1"/>
                  <option
                        category="test30_sto.dummy.category.2.1"
                        id="test30_sto.dummy.option.2.1.2"
                        isAbstract="false"
                        name="Option2.1.2.NoHandler"/>
                  <optionCategory
                        icon="icons/one.gif"
                        id="test30_sto.dummy.category.2.2"
                        name="Category.Tool2.2.Icon1"
                        owner="test30_sto.dummy.tool.2"/>
                  <option
                        category="test30_sto.dummy.category.2.2"
                        id="test30_sto.dummy.option.2.2.1"
                        isAbstract="false"
                        name="Option2.2.1.NoHandler"/>
                  <option
                        category="test30_sto.dummy.category.2.2"
                        id="test30_sto.dummy.option.2.2.2"
                        isAbstract="false"
                        name="Option2.2.2.Handler"
                        valueHandler="org.eclipse.cdt.managedbuilder.core.tests.TestValueHandler"
                        valueHandlerExtraArgument="Option2.2.2"/>
               </tool>
               <tool
                     icon="icons/two.gif"
                     id="test30_sto.dummy.tool.3"
                     isAbstract="false"
                     name="Tool.3.Icon2"
                     superClass="test30_sto.dummy.tool.parent.3">
                  <option
                        id="test30_sto.dummy.option.3.1.1"
                        superClass="test30_sto.dummy.option.parent.3.1.1"
                        isAbstract="false"
                        name="Option3.1.1.NoHandler"/>
                  <option
                        id="test30_sto.dummy.option.3.1.2"
                        superClass="test30_sto.dummy.option.parent.3.1.2"
                        isAbstract="false"
                        name="Option3.1.2.Handler"/>
               </tool>
               <tool
                     icon="icons/one.gif"
                     id="test30_sto.dummy.tool.4"
                     isAbstract="false"
                     name="Tool4.Icon1"/>                     
               <optionCategory
                     icon="icons/one.gif"
                     id="test30_sto.dummy.category.7"
                     name="Category.Top.7.Icon1"/>
               <option
                     id="test30_sto.dummy.option.5.1"
                     isAbstract="false"
                     name="Option5.1.Handler"
                     superClass="test30_sto.dummy.option.parent.5.1"/>
               <option
                     category="test30_sto.dummy.category.6"
                     id="test30_sto.dummy.option.6.1"
                     isAbstract="false"
                     name="Option6.1.NoHandler"
                     valueType="boolean"/>
               <option
                     category="test30_sto.dummy.category.7"
                     id="test30_sto.dummy.option.7.1"
                     isAbstract="false"
                     name="Option7.1.Handler"
                     valueHandler="org.eclipse.cdt.managedbuilder.core.tests.TestValueHandler"
                     valueHandlerExtraArgument="Option7.1"
                     valueType="boolean"/>
            </toolChain>
         </configuration>
      </projectType>
      
	  <!-- Test tools and project types for testing multiple input types,
	       multiple output types, and input & output options
	       tar -cf, tar -tf, & cat -->
      
      <projectType      
            isAbstract="false"     
            isTest="true"
            name="test30_2"
            id="test30_2.tar">
         <configuration
               name="X"
               id="test30_2.tar.config"
               artifactExtension="log"
               cleanCommand="rm -rf"
			   errorParsers="">
               <toolChain
                      name="ToolChain for test30_2"
                      targetTool="test30_2.cat"
                      id="test30_2.tar.toolchain">
				  <builder
		              id="test30_2.tar.builder"
		              name="Builder for test30_2"
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
		     	  </builder>               
			      <tool
			      		name="tar-create"
			      		command="tar"
			      		commandLinePattern="${COMMAND} ${FLAGS} ${INPUTS}"
			      		id="test30_2.tar-create">
					 <optionCategory
						  name="Options"
						  id="test30_2.tar-create.category">
					 </optionCategory>
					 <option
						  defaultValue="-cf"
						  name="All Flags"
						  category="test30_2.tar-create.category"
						  id="test30_2.tar-create.other"
						  valueType="string">
					 </option>
					 <option
					 	  defaultValue="new.tar"
					 	  name="Tar Filename"
						  category="test30_2.tar-create.category"
						  id="test30_2.tar-create.filename"
						  valueType="string">
					 </option>
			         <inputType
			            id="test30_2.tar-create.input1"
			            name="All cpp files"
			            multipleOfType="true"
			            primaryInput="true"
			            sourceContentType="org.eclipse.cdt.core.cxxSource">
			         </inputType>
			         <inputType
			            id="test30_2.tar-create.input2"
			            name="All asm files"
			            multipleOfType="true"
			            sourceContentType="org.eclipse.cdt.core.asmSource">
			         </inputType>
			         <outputType
			            id="test30_2.tar-create.outputtar"
			            name="Tar file"
			            outputs="tar"
			            buildVariable="TAROUT"
			            primaryOutput="true"
						option="test30_2.tar-create.filename">
			         </outputType>
			      </tool>   
			      <tool
			      		name="tar-list"
			      		command="tar"
			      		commandLinePattern="${COMMAND} ${FLAGS} ${INPUTS} &gt; ${OUTPUT}"
		 	            commandLineGenerator="org.eclipse.cdt.managedbuilder.core.tests.Test30_2_CommandLineGenerator"
			      		id="test30_2.tar-list">
					 <optionCategory
						  name="Options"
						  id="test30_2.tar-list.category">
					 </optionCategory>
					 <option
						  defaultValue="-tf"
						  name="All Flags"
						  category="test30_2.tar-list.category"
						  id="test30_2.tar-list.other"
						  valueType="string">
					 </option>
					 <option
						  defaultValue="new.log"
						  name="Log File Name"
						  category="test30_2.tar-list.category"
						  id="test30_2.tar-list.filename"
						  valueType="string">
					 </option>
			         <inputType
			            id="test30_2.tar-list.input1"
			            buildVariable="TAROUT"
			            sources="tar">
			         </inputType>
			         <outputType
			            id="test30_2.tar-list.outputlog"
			            name="Log file"
			            outputs="log"
			            buildVariable="LOGFILE"
			            option="test30_2.tar-list.filename">
			         </outputType>
			      </tool>   
			      <tool
			      		name="cat"
			      		command="cat"
			      		commandLinePattern="${COMMAND} ${INPUTS}"
			      		id="test30_2.cat">
			         <inputType
			            id="test30_2.cat.input"
			            buildVariable="LOGFILE"
			            sources="log">
			         </inputType>
			         <outputType
			            id="test30_2.cat.output"
			            name="Terminal (dummy output)"
			            outputs="tmp">
			         </outputType>
			      </tool>
			  </toolChain>
         </configuration>
      </projectType>                 

<!-- 
	Project type for testing Environment variables and Macros features
	Note: toolchains are cut and cannot be used for real compilation.
-->
            <projectType
                  id="cdt.managedbuild.target.testenv.exe"
                  isAbstract="false"
                  isTest="true"
                  name="testenv.exe"
                  projectEnvironmentSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                  projectMacroSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro">
         <configuration
               name="One"
               id="cdt.managedbuild.config.testenv.exe.debug"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">
               <toolChain
                     archList="all"
                     configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     configurationMacroSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     id="cdt.managedbuild.toolchain.testenv.exe.debug"
                     isToolChainSupported="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     name="Dbg ToolChain"
                     osList="solaris,linux,hpux,aix,qnx"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile">
		          <targetPlatform
		              id="cdt.managedbuild.target.testenv.platform.exe.debug"
		              name="Dbg Platform"
		              binaryParser="org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.PE"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
	              </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testenv.builder.exe.debug"
		              name="Dbg Builder"
		              command="make"
		              arguments="-k"
		              variableFormat="@="
		              isVariableCaseSensitive="false"
		              reservedMacroNames="PATH"		              
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.makegen.gnu.GnuMakefileGenerator">
		     	  </builder>               
                  <tool
                      id="cdt.managedbuild.tool.testenv.c.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">
			  	      <option
        		          id="macro.test.string"
        		          defaultValue="000"
                		  superClass="gnu.c.compiler.option30.optimization.flags"
                		  value="111"
        		          valueType="string">
					  </option>
					  <option
		                  valueType="stringList"
        		          name="ass"
        		          superClass="gnu.cpp.compiler.option30.preprocessor.undef"
                		  id="macro.test.list">
			               <listOptionValue value="x"/>
            			   <listOptionValue value="y"/>
			               <listOptionValue value="z"/>
            		  </option>
	                  <envVarBuildPath
        	                  pathType="buildpathInclude"
                	          variableList="CFGI,CFG0,PRJI">
	                  </envVarBuildPath>
        	          <envVarBuildPath
                	          pathType="buildpathLibrary"
                        	  variableList="CFGL,PRJL">
	                  </envVarBuildPath>
				  </tool>
				  <tool
                      id="cdt.managedbuild.tool.testenv.cpp.compiler.exe.debug"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">                         
                  </tool>
			  </toolChain>
         </configuration>
         <configuration
               name="Two"
               id="cdt.managedbuild.config.testenv.exe.release"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">               
               <toolChain
                     archList="all"
                     configurationMacroSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     id="cdt.managedbuild.toolchain.testenv.exe.release"
                     isToolChainSupported="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     name="Rel ToolChain"
                     osList="solaris,linux,hpux,aix,qnx"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile">
		          <targetPlatform
		              id="cdt.managedbuild.target.testenv.platform.exe.release"
		              name="Rel Platform"		             
		              binaryParser="org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.PE"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">		              
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testenv.builder.exe.release"
		              name="Rel Builder"		              
		              command="make"
		              isVariableCaseSensitive="true"
		              macroInputFileNameValue="$(notdir $&lt;)"
			          macroInputFileExtValue="$(suffix $(notdir $&lt;))"
			          macroInputFileBaseNameValue="$(basename $(notdir $&lt;))"
			          macroInputFileRelPathValue="$&lt;"
			          macroInputDirRelPathValue="$(dir $&lt;)"
			          macroOutputFileNameValue="$(notdir $@)"
			          macroOutputFileExtValue="$(suffix $(notdir $@))"
			          macroOutputFileBaseNameValue="$(basename $(notdir $@))"
			          macroOutputFileRelPathValue="$@"
			          macroOutputDirRelPathValue="$(dir $@)"
		              arguments="-k">
				  </builder> 
                  <tool
                      id="cdt.managedbuild.tool.testenv.c.compiler.exe.release"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">                          
	                  <envVarBuildPath
        	                  pathType="buildpathInclude"
                	          variableList="CFGI,CFG1,PRJI">
	                  </envVarBuildPath>
        	          <envVarBuildPath
                	          pathType="buildpathLibrary"
                        	  variableList="CFGL,PRJL">
	                  </envVarBuildPath>
                  </tool>
               </toolChain>
         </configuration>
         <configuration
               name="Three"
               id="cdt.managedbuild.config.testenv.exe.xz"
               cleanCommand="rm -rf">
               <toolChain
                     configurationMacroSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     id="cdt.managedbuild.toolchain.testenv.exe.xz"
                     isToolChainSupported="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     name="Three ToolChain"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile">
		          <targetPlatform
		              id="cdt.managedbuild.target.testenv.platform.exe.xz"
		              name="xz Platform">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testenv.builder.exe.xz"
		              name="XZ Builder"		              
		              command="make"
		              isVariableCaseSensitive="false"
		              variableFormat="@="
		              reservedMacroNameSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
		              arguments="-k">
				  </builder> 
                  <tool
                      id="cdt.managedbuild.tool.testenv.c.compiler.exe.xz"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">                          
                  </tool>
               </toolChain>
         </configuration>
         <configuration
               name="Four"
               id="cdt.managedbuild.config.testenv.exe.min">
               <toolChain
                     id="cdt.managedbuild.toolchain.testenv.exe.min"
                     isToolChainSupported="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     name="Three ToolChain">
		          <targetPlatform
		              id="cdt.managedbuild.target.testenv.platform.exe.min"
		              name="Rel Platform">
		          </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testenv.builder.exe.min"
		              name="Min Builder"		              
		              command="make"
		              isVariableCaseSensitive="true"
		              variableFormat="@=">
				  </builder> 
                  <tool
                      id="cdt.managedbuild.tool.testenv.c.compiler.exe.min"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">                          
                  </tool>
               </toolChain>
         </configuration>
         <configuration
               name="Five"
               id="cdt.managedbuild.config.testenv.exe.five"
               cleanCommand="rm -rf"
			   errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser">
               <toolChain
                     archList="all"
                     configurationEnvironmentSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     configurationMacroSupplier="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     id="cdt.managedbuild.toolchain.testenv.exe.five"
                     isToolChainSupported="org.eclipse.cdt.managedbuilder.core.tests.TestMacro"
                     name="Dbg ToolChain"
                     osList="solaris,linux,hpux,aix,qnx"
                     scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile">
		          <targetPlatform
		              id="cdt.managedbuild.target.testenv.platform.exe.five"
		              name="Dbg Platform"
		              binaryParser="org.eclipse.cdt.core.ELF;org.eclipse.cdt.core.PE"
		              osList="solaris,linux,hpux,aix,qnx"
		              archList="all">
	              </targetPlatform>
				  <builder
				      id="cdt.managedbuild.target.testenv.builder.exe.five"
		              name="Dbg Builder"
		              command="make"
		              arguments="-k"
		              variableFormat="@="
		              isVariableCaseSensitive="false"
		              reservedMacroNames="PATH"		              
		              buildfileGenerator="org.eclipse.cdt.managedbuilder.core.tests.TestMacro">
		     	  </builder>               
                  <tool
                      id="cdt.managedbuild.tool.testenv.c.compiler.exe.five"
                      superClass="cdt.managedbuild.tool.testgnu.c.compiler">
			  	      <option
        		          id="macro.test.string1"
        		          defaultValue="000"
                		  superClass="gnu.c.compiler.option30.optimization.flags"
                		  value="111"
        		          valueType="string">
					  </option>
					  <option
		                  valueType="stringList"
        		          name="ass"
        		          superClass="gnu.cpp.compiler.option30.preprocessor.undef"
                		  id="macro.test.list1">
			               <listOptionValue value="x"/>
            			   <listOptionValue value="y"/>
			               <listOptionValue value="z"/>
            		  </option>
				  </tool>
				  <tool
                      id="cdt.managedbuild.tool.testenv.cpp.compiler.exe.five"
                      superClass="cdt.managedbuild.tool.testgnu.cpp.compiler">                         
                  </tool>
			  </toolChain>
         </configuration>
         
      </projectType>     

  	  <!-- Test tool-chain defined at top level -->

      <toolChain
      	id="TopTC.toolchain.base"
      	name="TopLevel Toolchain"
      	isAbstract="true"
      	scannerConfigDiscoveryProfileId="org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile">
      		<targetPlatform
      			id="TopTC.platform"
      			name="TopTC Platform"
      			binaryParser="org.eclipse.cdt.core.PE"/>
      		<builder
      			id="TopTC.managedbuilder"
      			name="TopTC Builder"/>
      		<tool
      			id="TopTC.tool.assembler"
      			superClass="cdt.managedbuild.tool.gnu.assembler"/>
      </toolChain>
      <toolChain
      	id="TopTC.toolchain.release"
      	name="TopTC Release Toolchain"
      	isAbstract="true"
      	superClass="TopTC.toolchain.base">
      		<tool
      			id="TopTC.c.compiler.release"
      			superClass="cdt.managedbuild.tool.gnu.c.compiler"
      			command="$(CC)">
      				<option
      					id="TopTC.c.compiler.release.option.optimization.level"
      					superClass="gnu.c.compiler.option.optimization.level"
      					defaultValue="gnu.c.optimization.level.most"/>
      				<option
      					id="TopTC.c.compiler.release.option.debugging.level"
      					superClass="gnu.c.compiler.option.debugging.level"
      					defaultValue="gnu.c.debugging.level.none"/>
      		</tool>
      		<tool
      			id="TopTC.tool.cpp.compiler.release"
      			superClass="cdt.managedbuild.tool.gnu.cpp.compiler"
      			command="$(CXX)">
      				<option
      					id="TopTC.cpp.compiler.release.option.optimization.level"
      					superClass="gnu.cpp.compiler.option.optimization.level"
      					defaultValue="gnu.cpp.compiler.optimization.level.most"/>
      				<option
      					id="TopTC.cpp.compiler.release.option.debugging.level"
      					superClass="gnu.cpp.compiler.option.debugging.level"
      					defaultValue="gnu.cpp.compiler.debugging.level.none"/>
      		</tool>
      </toolChain>
      <toolChain
      	id="TopTC.toolchain.debug"
      	name="TopTC Debug Toolchain"
      	isAbstract="true"
      	superClass="TopTC.toolchain.base">
      		<tool
      			id="TopTC.c.compiler.debug"
      			superClass="cdt.managedbuild.tool.gnu.c.compiler"
      			command="$(CC)">
      				<option
      					id="TopTC.c.compiler.debug.option.optimization.level"
      					superClass="gnu.c.compiler.option.optimization.level"
      					defaultValue="gnu.c.optimization.level.none"/>
      				<option
      					id="TopTC.c.compiler.debug.option.debugging.level"
      					superClass="gnu.c.compiler.option.debugging.level"
      					defaultValue="gnu.c.debugging.level.max"/>
      		</tool>
      		<tool
      			id="TopTC.cpp.compiler.debug"
      			superClass="cdt.managedbuild.tool.gnu.cpp.compiler"
      			command="$(CXX)">
      				<option
      					id="TopTC.cpp.compiler.debug.option.optimization.level"
      					superClass="gnu.cpp.compiler.option.optimization.level"
      					defaultValue="gnu.cpp.compiler.optimization.level.none"/>
      				<option
      					id="TopTC.cpp.compiler.debug.option.debugging.level"
      					superClass="gnu.cpp.compiler.option.debugging.level"
      					defaultValue="gnu.cpp.compiler.debugging.level.max"/>
      		</tool>
      </toolChain>
      <projectType
      	isAbstract="false"
      	isTest="true"
        name="TopTC exe"
        id="TopTC.target.exe">   
            <configuration
            	id="TopTC.config.exe.debug"
            	name="Debug"
		      	errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
		      	cleanCommand="rm -rf">
		      		<toolChain
		      			id="TopTC.toolchain.exe.debug"
		      			superClass="TopTC.toolchain.debug">
		      				<tool
		      					id="TopTC..c.linker.exe.debug"
		      					superClass="cdt.managedbuild.tool.gnu.c.linker"
		      					command="$(CC)"/>
		      				<tool
		      					id="TopTC.cpp.linker.exe.debug"
		      					superClass="cdt.managedbuild.tool.gnu.cpp.linker"
		      					command="$(CXX)"/>
		      		</toolChain>
		    </configuration>
            <configuration
            	id="TopTC.config.exe.release"
            	name="Release"
		      	errorParsers="org.eclipse.cdt.core.MakeErrorParser;org.eclipse.cdt.core.GCCErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.GASErrorParser"
		      	cleanCommand="rm -rf">
		      		<toolChain
		      			id="TopTC.toolchain.exe.release"
		      			superClass="TopTC.toolchain.release">
		      				<tool
		      					id="TopTC..c.linker.exe.release"
		      					superClass="cdt.managedbuild.tool.gnu.c.linker"
		      					command="$(CC)"/>
		      				<tool
		      					id="TopTC..cpp.linker.exe.release"
		      					superClass="cdt.managedbuild.tool.gnu.cpp.linker"
		      					command="$(CXX)"/>
		      		</toolChain>
		    </configuration>
	  </projectType>

   </extension>
</plugin>
