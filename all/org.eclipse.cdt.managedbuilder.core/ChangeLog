2003-09-25 Sean Evoy
	This patch contains a lot of changes needed to implement fixes for 42648 and 
	43122. 

	For 42648, the schema for the the target had to be modified to include a 
	comma-separated list of valid host platforms.
	* schema/ManagedBuildTools.exsd
	
	The target had to be updated to properly read in and understand this info, and
	the interface had to be updated to return a list to the clients in the UI. The 
	target was also changed slightly. It now uses a safer accessor method to get at 
	the list of tools it maintains. I have also stopped persisting non-variant info 
	to the project file on serialize. There are elements of the target that are not 
	subject to change by the user (yet) so they should not be saved.
	* src/org/eclipse/cdt/managedbuilder/core/ITarget.java
	* src/org/eclipse/cdt/managedbuilder/internal/core/Target.java
	
	For 43122, I started by simply adding a tool reference to the configurations. 
	The tool reference had option references for debug and optimization levels. It 
	should have worked, but the model was not handling the inheritance properly. The 
	JUnit tests were not finding it because of how they were configured. It was most 
	evident in the UI. So, the way configurations and tool reference search for 
	overridden option references had to be modified. While I was in there, I cleaned 
	up some of the accessor and iteration code in ToolReference and OptionReference.
	
	For the configuration, the only significant change was a new search method to 
	find all option references for a given tool, no matter where they are stored. 
	The method had to consider what was overridden in a child config, what was added by 
	a child config, and what the parent (or parents) define.
	* src/org/eclipse/cdt/managedbuilder/internal/core/Configuration.java
	
	Option reference now pays attention to overidden values in the plugin file. Until 
	now, it only handled the overrides in the project file.
	* src/org/eclipse/cdt/managedbuilder/internal/core/OptionReference.java

	The ToolReference now distinguishes between local option references which it 
	manages directly, and option references held by tool references in the parent(s) 
	of its owner. It only serializes its own references, but when asked for options 
	relating to the tool it references, it replies with all option references in its 
	hierarchy.
	* src/org/eclipse/cdt/managedbuilder/internal/core/ToolReference.java
	

2003-09-24 Sean Evoy
	Changed the implementor of IScannerInfo to answer only absolute paths when asked for 
	includes paths. Users will specify the includes paths in the managed build UI in such a way
	that the compiler will not complain. Either they will use absolute paths, or they will specify 
	them relative to the build directory. In the second case, it is easier for the managed builder 
	to convert the paths relative to this directory into absolute paths before replying tha it is for 
	the client to figure this out. 
	* 	src/org/eclipse/cdt/managedbuilder/internal/core/ManagedBuildInfo.java
	
2003-09-23 Sean Evoy
	All the work in this patch is for critical bug 43292. In order to manage 
	configurations, there had to be a method through ITarget to remove 
	configurations. Also, to support the naming of newly created configurations, 
	I added a name method to the IConfiguration interface. Finally, the ITarget 
	needed to support setting (and resetting) the make command to use when building.
	* src/org/eclipse/cdt/managedbuilder/core/IConfiguration.java
	* src/org/eclipse/cdt/managedbuilder/core/ITarget.java
	* src/org/eclipse/cdt/managedbuilder/internal/core/Target.java

2003-09-19 Sean Evoy
	Added a new field to the target specification in the build model to 
	hard-code the binary parser for project creation. There is a new getter 
	method in the interface and the implementor contains additional code to 
	extract the information from a project file or plugin manifest. The 
	interface also contains new strings to make changing the specification 
	easier in the future.
	* schema/ManagedBuildTools.exsd
	* src/org/eclipse/cdt/managedbuilder/core/ITarget.java
	* src/org/eclipse/cdt/managedbuilder/internal/core/Target.java
	
	Fix for bug 41720: libraries are now found for Solaris and Linux 
	executables. The problem was the executable had no extension and 
	the client of the build model passed null instead of the empty string.
	* src/org/eclipse/cdt/managedbuilder/internal/core/GeneratedMakefileBuilder.java
	* src/org/eclipse/cdt/managedbuilder/internal/core/MakefileGenerator.java

2003-09-16 Sean Evoy
	Patch contains a fix for bug 43017. Renamed the "addDeps" method to a 
	more descriptive "addSourceDependencies". Added a flag when the 
	inter-project dependencies are calculated so that clean and all are 
	properly passed to the make invocation. Finally, I replaced the hard-coded
	'make' with $(MAKE)
	* src/org/eclipse/cdt/managedbuilder/internal/core/MakefileGenerator.java
	
	It also contains some more work on 41826, specifically on the logic to
	implement a rebuild when the build settings change. The builder checks for 
	a build model change whenever a build is requested and responds appropriately. 
	The make targets (i.e. 'clean' and 'all') are also calculated differently now.
	* src/org/eclipse/cdt/managedbuilder/internal/core/GeneratedMakefileBuilder.java
	
	The build model was modified to set a dirty flag when an option changes. I also
	made a change to avoid an NPE when the build info was loaded.
	* src/org/eclipse/cdt/managedbuilder/core/IManagedBuildInfo.java
	* src/org/eclipse/cdt/managedbuilder/internal/core/ManagedBuildInfo.java
	* src/org/eclipse/cdt/managedbuilder/core/ManagedBuildManager.java
	

2003-09-15 Sean Evoy
	First submission of code to new project. Moved the managed builder 
	source code out of the cdt.core project. This includes the code to 
	implement the build model, along with the shema and extension point 
	declaration. Moved the builder, scnanaer info provider and managed 
	nature definitions into the package as well.
	
	There are 2 new classes to handle the externalized strings:
	* src/org/eclipse/cdt/managedbuilder/core/ManagedBuilderCorePlugin.java
	* src/org/eclipse/cdt/managedbuilder/internal/core/PluginResources.properties