/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,4,
            4,3,3,2,2,8,1,0,1,1,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,3,2,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,5,5,6,6,2,2,2,1,0,
            1,2,4,2,1,1,3,1,1,2,
            3,6,7,1,0,1,3,1,3,1,
            1,1,1,1,1,3,1,1,1,1,
            1,3,1,2,2,1,5,3,1,3,
            5,1,3,1,3,2,4,3,5,4,
            6,6,3,5,1,1,2,3,4,1,
            2,1,3,1,1,3,2,1,1,1,
            1,2,1,2,3,1,1,1,3,1,
            2,2,2,3,4,5,1,5,1,1,
            3,3,4,1,1,2,3,2,3,2,
            1,0,1,2,1,1,1,1,1,2,
            4,3,6,2,4,-75,-240,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-2,-16,0,-4,0,-6,
            0,0,-8,-30,-50,0,0,0,-23,0,
            -77,-170,0,-47,-79,-18,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-3,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-5,
            0,0,0,0,0,0,0,0,-21,0,
            0,0,0,-70,0,0,-19,0,0,0,
            -115,0,-82,0,0,0,0,-28,0,0,
            0,0,0,0,0,0,0,0,-22,0,
            0,0,0,0,0,0,0,-37,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-186,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-196,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-271,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -32,-57,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -24,0,0,-262,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-27,0,0,0,0,-187,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-38,-74,0,-39,0,-188,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-53,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-25,0,0,-36,-177,
            0,0,0,0,0,0,0,0,0,-90,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-41,-125,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-64,-150,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-31,-181,
            0,0,0,0,0,0,0,0,0,0,
            -273,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -72,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -143,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-26,
            0,-179,0,0,0,0,0,0,0,0,
            0,0,0,-65,0,-152,-67,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-153,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-68,-154,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-71,-155,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-73,-156,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-84,-157,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-85,-158,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-93,-159,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-104,-160,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-105,-161,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-106,-162,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-107,-204,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-108,-206,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-210,-109,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-110,-185,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-211,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-40,-250,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-265,-61,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-180,0,0,0,
            0,0,0,0,0,0,0,0,-29,0,
            0,-276,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -258,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-42,
            0,-182,-10,0,0,0,0,0,0,0,
            0,0,-78,0,-111,0,-87,-112,0,0,
            -113,0,-114,0,-59,0,0,0,-62,-44,
            0,0,-11,0,0,0,0,0,0,0,
            -88,0,0,0,0,0,0,0,0,-35,
            0,0,0,-116,0,-83,0,0,0,0,
            0,0,0,0,0,0,0,0,-117,-183,
            0,0,0,0,0,0,0,0,0,0,
            -33,0,0,0,0,-43,0,-60,0,-13,
            0,0,0,0,0,0,0,0,0,-132,
            0,-69,0,0,0,-15,0,0,-86,0,
            0,0,0,0,0,-45,0,-121,0,0,
            0,0,0,0,-122,0,-123,0,-145,0,
            0,0,0,0,0,0,0,0,0,0,
            -193,0,-55,0,-96,0,0,0,0,0,
            0,0,0,0,0,0,-195,0,-48,0,
            0,-49,0,0,0,-144,0,0,0,0,
            0,0,-129,-242,0,0,0,0,0,-34,
            0,0,0,0,0,0,-203,0,0,0,
            0,0,-92,-124,0,0,0,0,0,0,
            -119,0,0,0,0,0,0,-147,0,-241,
            0,0,0,-194,0,-133,0,0,0,0,
            0,0,0,0,0,0,0,-20,0,-126,
            0,-190,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-52,
            0,0,-54,0,0,0,0,0,0,-266,
            -66,0,-135,0,-80,0,0,0,0,0,
            0,0,0,-136,0,-137,0,-139,0,0,
            0,0,0,0,0,-138,0,-200,0,-141,
            0,0,0,0,0,0,0,0,0,0,
            0,-134,0,0,0,0,0,0,-239,0,
            0,0,0,0,-140,0,0,0,0,0,
            0,0,0,-207,0,0,-146,-209,0,0,
            0,-168,-91,0,-151,0,0,0,0,0,
            0,0,-63,0,0,0,0,0,-245,0,
            -51,0,0,-221,0,0,0,0,0,0,
            0,0,-142,0,0,0,0,0,0,-169,
            0,-198,0,0,0,-163,0,-247,0,0,
            0,0,0,0,0,0,0,0,0,-191,
            0,0,0,0,0,0,0,0,0,-222,
            -164,0,-248,0,-192,0,-9,0,0,-223,
            -199,0,0,0,0,0,0,0,0,0,
            -215,0,0,0,-280,0,0,-224,-237,0,
            0,0,0,0,0,-149,0,0,0,0,
            0,0,0,0,0,-212,-283,0,0,0,
            -12,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-286,0,
            0,-225,-201,0,0,0,0,0,-202,-220,
            0,0,0,0,0,0,0,0,0,-56,
            0,-205,0,-249,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-226,
            0,0,-17,0,-208,-253,0,-251,0,0,
            0,-281,0,0,0,-197,0,-243,-217,-252,
            0,0,0,0,0,0,0,0,-1,0,
            0,0,0,0,0,0,0,0,-58,0,
            -7,0,0,0,0,0,0,0,-218,-219,
            0,0,-184,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -227,0,0,-228,0,0,0,0,0,0,
            0,0,0,-229,-230,-231,-232,0,0,0,
            0,-175,-238,0,0,0,0,0,0,0,
            0,0,-176,0,0,0,0,0,0,0,
            0,0,-216,0,-100,0,0,0,0,0,
            0,0,-165,0,-268,-233,-234,0,0,-235,
            0,-260,-236,-261,-256,0,-257,-263,-270,0,
            0,0,0,0,-274,-178,0,0,0,0,
            0,0,0,0,0,-89,0,0,-213,-14,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-46,0,-76,0,0,0,0,0,
            0,0,-269,0,0,0,0,-282,0,-285,
            0,-81,0,-264,0,-254,0,-97,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-118,0,0,0,-94,0,0,-272,0,
            0,0,0,0,0,-98,0,0,0,0,
            0,0,0,0,-275,0,0,0,0,0,
            0,0,0,0,-279,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-99,0,0,0,
            0,0,0,0,-101,0,0,0,0,0,
            0,0,-120,-277,0,0,0,0,0,0,
            -127,0,0,-166,0,0,-167,0,-172,0,
            0,0,0,0,0,0,0,-284,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-173,0,0,0,0,0,0,0,
            0,0,0,0,0,-174,0,0,0,0,
            0,0,0,-255,0,0,-259,0,0,-214,
            0,0,0,0,0,0,0,-95,0,0,
            0,0,0,0,-148,0,-244,0,0,0,
            0,0,-102,0,0,0,0,0,0,-103,
            0,0,0,0,0,0,0,-267,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-278,0,-128,0,0,0,0,
            0,0,0,0,0,-130,0,-131,0,0,
            0,-171,0,0,0,0,0,0,0,0,
            0,0,0,-189,0,0,0,0,0,0,
            0,0,0,0,0,-246,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            102,1,32,32,23,23,33,33,19,19,
            2,2,2,2,3,3,3,4,4,5,
            5,5,5,5,5,5,5,67,67,88,
            88,6,6,6,6,6,6,6,6,6,
            6,6,7,7,8,8,8,8,9,9,
            9,10,10,10,11,11,11,11,11,12,
            12,12,13,13,14,14,15,15,16,16,
            17,17,18,18,21,21,21,21,21,21,
            21,21,21,21,21,21,34,27,20,103,
            103,90,90,54,35,35,35,35,35,35,
            35,36,36,36,28,28,91,91,68,68,
            37,37,38,38,38,60,60,39,39,39,
            39,40,40,40,40,40,46,46,22,22,
            22,22,22,47,47,47,83,83,78,78,
            78,78,79,79,79,80,80,80,81,81,
            81,82,82,82,92,92,84,84,85,48,
            50,50,50,50,50,61,63,63,63,63,
            63,63,63,63,63,63,63,63,72,72,
            24,24,69,69,69,69,70,70,70,73,
            73,74,74,64,64,52,104,104,93,94,
            94,94,71,71,95,95,96,96,86,86,
            25,26,26,26,49,51,51,41,41,41,
            41,29,29,30,42,42,43,31,31,97,
            97,44,106,106,105,105,45,45,45,45,
            45,45,45,45,45,98,53,53,53,53,
            75,75,65,65,65,66,66,55,55,107,
            107,77,77,76,76,76,56,56,56,57,
            58,58,58,59,59,59,59,62,62,89,
            89,89,89,87,108,109,109,110,110,111,
            111,102,102,112,112,99,99,99,99,113,
            113,100,100,100,101,101,298,480,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,767,472,91,1293,1408,
            330,134,210,1072,363,1227,511,221,226,152,
            1210,1298,1304,650,632,859,120,126,216,1261,
            218,220,270,136,133,135,159,222,134,210,
            250,210,89,265,1570,1585,268,138,875,165,
            134,210,802,326,183,142,145,148,151,418,
            144,133,135,159,1731,333,1587,1631,1850,1286,
            412,372,136,133,135,159,1454,134,210,835,
            1180,407,221,229,835,1280,138,338,165,297,
            1221,363,328,1298,142,145,148,151,327,136,
            133,135,159,1731,333,1587,1631,1850,1286,717,
            206,302,304,138,227,165,296,104,1124,1236,
            895,142,145,148,151,1740,182,407,221,230,
            1731,333,1587,1631,1850,1286,1121,127,14,19,
            15,935,42,44,955,995,975,1036,1777,330,
            1073,1354,14,19,15,935,915,44,955,995,
            975,1036,1015,1195,1054,1201,1198,1203,74,294,
            295,277,1073,1354,14,19,15,935,915,44,
            955,995,975,1036,1015,1195,1054,1201,1198,1203,
            74,477,994,277,14,19,15,935,915,44,
            955,995,975,1036,1015,1195,1054,1201,1198,1203,
            74,719,279,277,1016,1354,14,19,15,935,
            915,44,955,995,975,1036,1015,1195,1054,1201,
            1198,1203,74,758,279,277,224,280,1121,1390,
            14,19,15,935,42,44,955,995,975,1036,
            1015,1195,1054,1816,157,30,1293,1443,759,280,
            1121,1702,14,19,15,935,42,44,955,995,
            975,1036,1015,1195,1817,126,281,950,1373,14,
            19,15,935,915,44,955,995,975,1036,1015,
            1195,1054,1201,1198,1203,74,152,1863,1513,330,
            1121,282,14,19,15,935,42,44,1590,236,
            1140,2055,14,19,15,935,915,44,955,995,
            975,1036,1015,1195,1054,1201,1198,1203,74,869,
            1121,1616,14,19,15,935,915,44,955,995,
            975,1036,1015,1195,1054,1201,1198,1203,74,429,
            974,91,14,19,15,935,915,44,955,995,
            975,1036,1015,1195,1054,1201,1198,1203,74,472,
            1121,1626,14,19,15,935,42,44,955,995,
            1761,994,237,14,19,15,935,915,44,955,
            995,975,1036,1015,1195,1054,1201,1198,1203,74,
            301,1121,277,14,19,15,935,42,44,955,
            995,975,1036,1015,1195,1054,1201,1198,1203,93,
            1454,1121,1531,14,19,15,935,42,44,955,
            995,975,1036,1015,1195,1054,1201,1198,1203,93,
            152,344,1121,283,14,19,15,935,42,44,
            955,995,975,1652,514,1396,1121,556,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,209,1121,85,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,593,1121,84,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,384,1121,83,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,809,1121,82,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,806,1121,81,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,1013,1121,80,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,361,1121,79,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,1243,1121,78,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,866,1121,77,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,119,1121,76,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,365,1121,75,14,19,
            15,935,915,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,74,1231,1121,92,14,19,
            15,935,42,44,955,995,975,1036,1015,1195,
            1054,1201,1198,1203,93,1121,441,14,19,15,
            935,915,44,955,995,975,1036,1015,1195,1054,
            1201,1198,1203,74,724,1121,1698,14,19,15,
            935,42,44,955,995,975,1036,1015,1776,1121,
            200,14,19,15,935,915,44,955,995,975,
            1036,1015,1195,1054,1201,1198,1203,74,472,1121,
            1710,14,19,15,935,42,44,955,995,975,
            1036,1015,1195,1054,1201,1198,1203,93,1121,1294,
            14,19,15,935,42,44,955,995,975,1036,
            1015,1195,1054,1201,1198,1203,93,1121,123,14,
            19,15,935,42,44,955,995,975,1690,877,
            335,1729,1121,201,14,19,15,935,42,44,
            955,995,975,1036,1015,1195,1054,1201,1198,1203,
            93,1121,1835,14,19,15,935,42,44,955,
            995,975,1036,1015,1195,1054,1201,1198,1203,73,
            184,306,1121,418,14,19,15,935,42,44,
            955,995,1764,1293,1495,971,1878,1227,891,110,
            86,893,576,426,855,1,306,429,95,1294,
            875,345,194,469,1282,108,94,96,97,98,
            99,1230,250,210,110,86,109,576,122,855,
            152,1323,195,95,333,1394,213,531,305,1282,
            108,94,96,97,98,99,251,210,106,1014,
            1121,109,14,19,15,935,42,44,955,995,
            1774,1314,1193,511,221,226,152,1865,1293,650,
            590,1205,1507,107,191,215,1261,218,220,270,
            241,306,1294,341,1445,259,859,124,87,632,
            263,1570,1585,268,553,1374,152,1882,871,110,
            86,111,576,1543,855,1059,225,62,95,213,
            260,134,210,875,1282,108,94,96,97,98,
            99,831,1489,152,345,1121,109,14,19,15,
            935,42,39,137,133,135,159,1319,345,152,
            1289,257,1046,1197,273,576,633,139,106,165,
            511,221,226,301,927,143,146,149,152,1234,
            1258,1433,215,1261,218,220,270,123,306,299,
            875,1367,334,1227,1294,206,1695,263,1570,1585,
            268,152,470,228,1309,895,110,86,805,576,
            1329,855,256,125,472,95,1317,1783,250,210,
            105,1282,108,94,96,97,98,99,58,1088,
            1294,231,1121,109,14,19,15,935,42,44,
            955,995,975,1036,1015,1195,1054,1201,1823,121,
            1258,1846,207,1037,345,107,1902,511,221,578,
            1289,486,650,58,689,1299,345,307,1515,215,
            1261,218,649,228,1146,1234,367,1824,1298,158,
            110,86,1828,1440,285,855,1197,195,639,95,
            1298,670,511,221,226,1282,1353,94,96,97,
            98,99,528,650,215,1261,218,220,255,1311,
            345,185,154,575,158,841,689,1193,411,1249,
            438,110,86,184,1321,619,855,1256,678,192,
            95,1234,674,1300,1230,1259,1282,101,94,96,
            97,98,99,633,511,221,226,154,575,570,
            650,327,251,210,591,438,215,1261,218,220,
            251,210,307,1298,255,238,1504,1410,110,86,
            674,286,1294,855,1822,1249,363,95,612,650,
            511,221,226,1282,118,94,96,97,98,99,
            1035,2057,216,1261,218,220,202,110,86,2040,
            675,363,855,654,650,1324,95,1184,196,198,
            1282,363,1282,114,94,96,97,98,99,1672,
            23,472,110,86,16,696,650,855,1284,1258,
            2037,95,134,210,1529,272,1300,1282,1829,94,
            96,97,98,99,110,86,1300,738,650,855,
            271,1213,274,95,147,133,135,159,22,1282,
            113,94,96,97,98,99,110,86,240,780,
            650,855,479,363,1886,95,134,210,239,363,
            1300,1282,120,94,96,97,98,99,110,86,
            58,689,1271,855,841,689,1558,95,150,133,
            135,159,1583,1282,119,94,96,97,98,99,
            483,193,20,58,689,1298,152,492,1300,511,
            221,226,1329,511,221,226,873,650,1294,363,
            1300,215,1261,218,220,215,1261,218,220,355,
            372,158,511,221,226,1504,87,2078,203,327,
            241,896,1825,115,215,1261,218,220,297,363,
            363,328,242,1121,334,14,19,15,935,42,
            44,955,995,1775,155,575,134,210,511,221,
            1305,1283,1827,21,1285,296,1708,197,198,1880,
            216,1261,218,1298,1308,1310,1060,1260,141,133,
            135,159,1121,363,14,19,15,935,42,44,
            955,1534,140,1121,165,14,19,15,935,42,
            44,955,1580,836,2034,1040,269,14,19,15,
            935,42,35,1228,1601,1294,1245,1287,293,295,
            1325,325,363,1326,1298,1327,273,1330,1331,641,
            2190,390,2190,2190,2094,1300,1121,243,14,19,
            15,935,42,44,1608,275,1273,345,270,1040,
            1242,14,19,15,935,42,35,278,270,263,
            1570,1585,268,875,345,875,345,287,1234,263,
            1570,1585,268,363,2190,134,210,2190,1300,1783,
            1298,244,875,345,633,195,1291,195,1121,262,
            14,19,15,935,42,38,1935,153,133,135,
            159,255,760,345,195,2190,152,306,288,363,
            289,411,1249,26,2190,1193,1121,1193,14,19,
            15,935,42,37,576,633,87,191,195,191,
            303,270,276,1581,1193,1294,413,1445,1458,1445,
            2190,2190,265,1570,1585,268,191,2190,300,290,
            2190,1388,2190,2190,117,1470,1445,1121,1813,14,
            19,15,935,42,36,1121,2190,14,19,15,
            935,42,34,1121,363,14,19,15,935,42,
            35,873,306,1556,152,306,2190,152,306,1121,
            2190,14,19,15,935,42,47,1627,363,2190,
            2190,87,2190,576,87,2190,195,87,115,195,
            2190,1581,2190,1121,1581,14,19,15,935,42,
            46,1649,2190,2190,2190,2190,1121,1706,14,19,
            15,935,42,45,1311,345,1813,1037,345,1813,
            1102,1552,14,19,15,935,42,43,1159,2190,
            14,19,15,935,40,1227,1234,873,650,1234,
            2190,1709,2190,1178,1739,14,19,15,935,33,
            1178,2190,14,19,15,935,32,87,873,650,
            250,210,2190,2190,115,2190,2190,1886,2190,255,
            2190,2190,255,2190,873,650,152,650,87,1822,
            1249,2190,1909,1249,2190,115,152,650,152,650,
            2190,2190,152,650,87,2190,87,1815,2190,2190,
            2190,115,2190,1591,152,650,87,2190,87,2190,
            1515,2190,87,1653,2190,1659,152,650,1974,1660,
            2190,2190,2190,2190,87,2190,2190,2190,2190,2190,
            2190,1820,2190,1035,1998,2190,87,2190,2190,2190,
            2190,2190,2190,1873,2190,0,179,223,0,2197,
            1,0,1,2424,0,7,9,0,179,17,
            0,178,18,0,1,2413,0,112,1605,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,0,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,0,1,2,
            60,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            61,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,0,0,
            1,60,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,0,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,47,
            48,49,50,51,52,53,54,55,56,0,
            62,63,60,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,0,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,57,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,0,1,2,
            0,4,5,0,7,8,9,10,11,12,
            13,14,15,16,17,18,0,20,21,22,
            23,24,25,26,27,28,0,1,2,0,
            4,31,0,1,2,6,4,0,1,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,0,1,2,3,4,5,
            0,29,0,0,0,3,0,1,2,3,
            4,7,8,19,20,21,22,23,24,25,
            26,27,28,0,30,19,20,21,22,23,
            24,25,26,27,28,29,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,0,1,2,3,4,5,0,0,2,
            58,61,5,6,58,0,0,73,0,1,
            19,20,21,22,23,24,25,26,27,28,
            0,30,59,83,84,85,86,87,88,89,
            90,91,92,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,0,0,
            2,0,0,5,6,4,0,1,0,0,
            1,2,0,4,73,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,29,81,82,29,69,
            70,71,72,0,1,30,31,32,33,34,
            35,36,37,38,39,40,41,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,69,70,71,
            72,69,70,71,72,0,1,30,31,32,
            33,34,35,36,37,38,39,40,41,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,0,
            0,2,0,1,5,6,0,7,8,30,
            31,32,33,34,35,36,37,38,39,40,
            41,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,0,0,2,2,0,5,5,0,1,
            0,30,31,32,33,34,35,36,37,38,
            39,40,41,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,0,0,2,0,0,5,2,
            0,7,8,30,31,32,33,34,35,36,
            37,38,39,40,41,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,0,0,2,0,79,
            5,0,6,0,6,30,31,32,33,34,
            35,36,37,38,39,40,41,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,0,0,0,
            0,0,0,6,6,6,0,30,31,32,
            33,34,35,36,37,38,39,40,41,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,76,
            0,0,1,2,0,0,5,3,0,30,
            31,32,33,34,35,36,37,38,39,40,
            41,20,21,22,23,24,25,26,27,28,
            0,1,2,3,0,0,1,3,3,73,
            0,1,2,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,0,29,
            2,57,58,5,29,0,61,59,0,4,
            0,3,0,3,0,3,0,3,20,21,
            22,23,24,25,26,27,28,19,58,19,
            0,19,0,58,60,0,20,21,22,59,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,20,21,22,23,24,
            25,26,27,28,0,57,0,57,0,61,
            58,61,67,68,60,0,0,42,43,44,
            45,46,47,48,49,50,51,52,53,0,
            1,2,3,4,5,29,7,8,9,10,
            11,12,13,14,15,16,17,18,78,77,
            0,0,23,0,1,2,3,4,5,9,
            7,8,9,10,11,12,13,14,15,16,
            17,18,66,0,1,2,23,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,0,0,65,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,0,1,0,0,65,0,
            1,2,3,4,5,0,7,8,9,10,
            11,12,13,14,15,16,17,18,0,0,
            0,0,0,29,6,20,21,22,9,57,
            57,0,0,1,2,60,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,20,21,22,23,24,25,26,27,28,
            64,0,1,2,65,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            0,1,2,0,4,5,3,7,8,9,
            10,11,12,13,14,15,16,17,18,0,
            1,2,19,4,5,0,7,8,9,10,
            11,12,13,14,15,16,17,18,0,1,
            2,0,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,0,1,2,
            57,4,5,0,7,8,9,10,11,12,
            13,14,15,16,17,18,0,1,2,3,
            4,0,57,20,21,22,23,24,25,26,
            27,28,0,0,0,19,20,21,22,23,
            24,25,26,27,28,29,0,0,1,0,
            0,4,20,21,22,23,24,25,26,27,
            28,0,0,1,0,0,20,21,22,20,
            21,22,10,11,58,0,29,0,0,0,
            3,20,21,22,23,24,25,26,27,28,
            0,29,0,3,2,20,21,22,20,21,
            22,0,0,0,0,4,0,4,0,19,
            0,1,0,0,4,3,3,0,0,0,
            3,3,3,0,74,75,3,0,66,0,
            0,19,19,0,4,58,0,29,0,29,
            0,77,80,0,0,0,0,57,0,0,
            0,0,6,74,75,6,64,0,0,0,
            0,0,29,0,62,63,62,63,67,68,
            67,68,29,0,66,0,0,60,60,0,
            0,58,76,0,65,0,0,0,0,62,
            63,62,63,0,64,59,0,0,0,59,
            0,0,64,59,0,57,0,0,0,0,
            59,61,0,0,0,0,59,0,0,0,
            0,0,0,78,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2190,1,3833,1307,1,3827,404,1,1,1,
            1,1,1,1,1,1,1,1,1,2198,
            1,1,1,1,1,1,1,1,1,156,
            2290,774,1109,721,1209,835,1441,669,1523,815,
            1268,777,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1693,2413,
            2196,7,2175,2175,2175,2175,2175,2175,2175,2175,
            2175,2175,2175,2175,2175,2175,2175,2175,2175,2175,
            2175,2175,2175,2175,2175,2175,2175,2175,2175,2175,
            512,2175,2175,2175,2175,2175,2175,2175,2175,2175,
            2175,2175,2175,2175,2175,2175,2175,2175,2175,2175,
            2175,2175,2175,2175,2175,2175,2175,2175,54,179,
            2166,2175,2190,1,3833,1307,1,3827,404,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2198,1,1,1,1,1,1,1,1,
            1,1,2290,774,1109,721,1209,835,1441,669,
            1523,815,1268,777,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2190,
            1782,1793,2196,2190,1,3833,2199,1,3827,404,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2198,1,1,1,1,1,1,1,
            1,1,28,2290,774,1109,721,1209,835,1441,
            669,1523,815,1268,777,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2190,1,3833,2199,1,3827,404,1,1,1,
            1,1,1,1,1,1,1,1,1,2198,
            1,1,1,1,1,1,1,1,1,2217,
            2290,774,1109,721,1209,835,1441,669,1523,815,
            1268,777,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,2190,1906,1456,
            2190,1973,1466,2190,1957,1916,1965,2070,2063,2048,
            2200,2201,2202,2203,1888,1325,2190,2401,2402,2403,
            2352,2353,2351,2404,2354,2350,2190,1693,2413,2190,
            1342,1468,258,1321,2413,399,1,2190,1360,2357,
            2362,2361,2359,2360,2358,2363,2364,2356,2365,2366,
            2367,1270,1213,1183,2190,1,1,2199,1,1,
            42,597,2190,2190,51,2195,17,2178,179,2178,
            2178,1836,620,2198,1,1,1,1,1,1,
            1,1,1,2190,2488,2178,179,179,179,179,
            179,179,179,179,179,2178,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2190,1,1,2199,1,1,2190,2190,2370,
            2194,976,2371,339,2178,72,2190,292,2190,1981,
            2198,1,1,1,1,1,1,1,1,1,
            59,2488,2293,956,936,916,896,876,836,856,
            816,796,776,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,2190,2190,
            2370,2190,2190,2371,616,1139,219,1430,61,264,
            1321,2413,60,1342,291,2190,1,3833,2199,1,
            3827,404,1,1,1,1,1,1,1,1,
            1,1,1,1,2198,597,1412,2124,597,1743,
            1250,1182,690,2190,2096,2290,774,1109,721,1209,
            835,1441,669,1523,815,1268,777,2190,1,3833,
            2199,1,3827,404,1,1,1,1,1,1,
            1,1,1,1,1,1,2198,1743,1250,1182,
            690,1743,1250,1182,690,2190,2106,2290,774,1109,
            721,1209,835,1441,669,1523,815,1268,777,2190,
            1,3833,2199,1,3827,404,1,1,1,1,
            1,1,1,1,1,1,1,1,2198,2190,
            53,2370,2190,2108,2371,760,2190,1836,620,2290,
            774,1109,721,1209,835,1441,669,1523,815,1268,
            777,2190,1,3833,2199,1,3827,404,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2198,205,2190,2370,2370,2190,2371,2371,2190,2136,
            112,2290,774,1109,721,1209,835,1441,669,1523,
            815,1268,777,2190,1,3833,2199,1,3827,404,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2198,2190,52,2219,2190,2190,2220,2425,
            2190,1836,620,2290,774,1109,721,1209,835,1441,
            669,1523,815,1268,777,2190,1,3833,2199,1,
            3827,404,1,1,1,1,1,1,1,1,
            1,1,1,1,2198,204,187,1346,186,2187,
            1346,2190,1266,66,1296,2290,774,1109,721,1209,
            835,1441,669,1523,815,1268,777,2190,1,3833,
            2199,1,3827,404,1,1,1,1,1,1,
            1,1,1,1,1,1,2198,188,226,1,
            2190,2190,2190,1339,229,404,2190,2290,774,1109,
            721,1209,835,1441,669,1523,815,1268,777,2190,
            1,3833,2199,1,3827,404,1,1,1,1,
            1,1,1,1,1,1,1,1,2198,1055,
            2190,1,1693,346,2190,208,2368,2195,2190,2290,
            774,1109,721,1209,835,1441,669,1523,815,1268,
            777,2401,2402,2403,2352,2353,2351,2404,2354,2350,
            1,1321,2184,2195,1,1,1803,2169,2195,2165,
            1,1693,2413,2357,2362,2361,2359,2360,2358,2363,
            2364,2356,2365,2366,2367,1270,1213,1183,2190,597,
            2369,1508,2194,2368,597,48,741,1482,232,2026,
            233,220,1,220,1,116,246,190,2401,2402,
            2403,2352,2353,2351,2404,2354,2350,220,2194,220,
            70,116,68,2194,2196,128,1,1,1,1016,
            2357,2362,2361,2359,2360,2358,2363,2364,2356,2365,
            2366,2367,1270,1213,1183,2401,2402,2403,2352,2353,
            2351,2404,2354,2350,2190,220,2190,220,2190,220,
            116,220,2013,1989,190,2190,2190,2357,2362,2361,
            2359,2360,2358,2363,2364,2356,2365,2366,2367,1,
            1906,2207,2193,1805,2208,1108,1957,1916,1965,2070,
            2063,2048,2200,2201,2202,2203,1888,1325,558,580,
            64,2190,630,2190,1906,2207,2193,1849,2208,456,
            1957,1916,1965,2070,2063,2048,2200,2201,2202,2203,
            1888,1325,1884,2190,1906,2207,1069,1973,2208,1381,
            1957,1916,1965,2070,2063,2048,2200,2201,2202,2203,
            1888,1325,204,252,2192,1,1906,2207,27,1973,
            2208,1381,1957,1916,1965,2070,2063,2048,2200,2201,
            2202,2203,1888,1325,266,1609,1,2190,2192,2190,
            1906,2207,2193,1973,2208,247,1957,1916,1965,2070,
            2063,2048,2200,2201,2202,2203,1888,1325,226,65,
            2190,2190,2190,597,230,1,1,1,456,3211,
            1337,129,1,1906,2207,27,1973,2208,1381,1957,
            1916,1965,2070,2063,2048,2200,2201,2202,2203,1888,
            1325,2401,2402,2403,2352,2353,2351,2404,2354,2350,
            2444,2190,1906,2207,2192,1973,2208,1696,1957,1916,
            1965,2070,2063,2048,2200,2201,2202,2203,1888,1325,
            2190,1906,2207,2190,1973,2208,2199,1957,1916,1965,
            2070,2063,2048,2200,2201,2202,2203,1888,1325,1,
            1906,2207,2198,1973,2208,88,1957,1916,1965,2070,
            2063,2048,2200,2201,2202,2203,1888,1325,2190,1984,
            2207,2190,1973,2208,2190,1957,1916,1965,2070,2063,
            2048,2200,2201,2202,2203,1888,1325,2190,1987,2207,
            1670,1973,2208,130,1957,1916,1965,2070,2063,2048,
            2200,2201,2202,2203,1888,1325,18,2181,178,2181,
            2181,2190,996,2401,2402,2403,2352,2353,2351,2404,
            2354,2350,131,2190,2190,2181,178,178,178,178,
            178,178,178,178,178,2181,2190,261,1803,248,
            62,1,2401,2402,2403,2352,2353,2351,2404,2354,
            2350,132,31,342,69,2190,2401,2402,2403,2401,
            2402,2403,2214,2215,2181,249,597,1,245,63,
            2195,2401,2402,2403,2352,2353,2351,2404,2354,2350,
            2190,2112,1,2199,2172,2401,2402,2403,2401,2402,
            2403,50,58,49,57,2026,67,2026,284,2198,
            264,1803,1,2190,1342,2199,2199,2190,1,2190,
            2197,189,2193,1,1127,762,90,56,1550,55,
            1,2198,2198,217,1139,2194,2190,1142,1,597,
            199,580,1512,267,2190,71,41,1674,28,2190,
            2190,1,1696,1127,762,1696,2444,1,2190,2190,
            2190,2190,597,2190,1782,1793,1782,1793,2013,1989,
            2013,1989,597,2190,1925,2190,2190,2196,189,2190,
            2190,90,1055,2190,2192,2190,2190,2190,2190,1782,
            1793,1782,1793,2190,2444,2292,2190,2190,2190,1089,
            2190,2190,2443,1161,2190,534,2190,2190,2190,2190,
            2371,701,2190,2190,2190,2190,2370,2190,2190,2190,
            2190,2190,2190,558
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            441,1,261,406,441,576,474,486,486,574,
            574,486,574,486,263,359,408,397,472,408,
            233,51,3,51,3,176,51,408,494,502,
            359,71,72,293,263,576,227,545,544,359,
            145,234,3,3,3,3,176,176,494,286,
            408,293,102,295,263,408,84,408,233,342,
            228,228,320,472,472,329,472,472,228,233,
            69,344,69,406,249,3,29,64,263,3,
            3,29,178,182,178,176,286,494,295,125,
            122,286,193,249,344,344,344,344,344,106,
            344,344,344,187,204,209,207,215,211,218,
            217,220,219,221,502,497,501,550,82,344,
            145,544,231,228,344,228,247,344,323,344,
            344,234,69,329,408,224,361,361,29,66,
            29,29,344,320,178,494,501,286,122,105,
            102,344,344,344,344,344,344,344,344,344,
            344,344,502,502,505,249,249,320,320,32,
            344,344,344,344,344,344,344,344,344,344,
            344,344,344,344,344,344,344,344,344,344,
            499,500,290,359,295,82,342,228,502,472,
            502,502,233,344,227,344,226,29,410,344,
            344,122,106,84,359,290,502,502,502,122,
            207,207,204,204,211,211,209,209,209,209,
            217,215,219,218,69,220,293,502,412,497,
            178,326,228,342,329,344,329,329,66,344,
            122,122,82,505,412,511,576,344,295,502,
            29,80,548,320,344,325,32,228,502,232,
            82,502,84,122,320,344,502,32,228,329,
            178,122,329,502,29,329
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            73,0,24,42,20,43,54,25,44,26,
            45,46,27,21,47,48,23,55,28,56,
            49,50,22,51,52,53,2,5,60,3,
            0,3,58,12,13,14,15,16,2,5,
            1,10,11,9,4,7,8,17,18,0,
            24,20,25,26,27,21,23,28,22,29,
            57,58,6,19,3,4,2,1,59,0,
            1,3,59,61,57,58,19,29,0,3,
            60,29,66,1,13,14,15,16,2,5,
            10,11,9,4,7,8,17,18,12,6,
            0,20,21,22,23,10,11,9,4,7,
            8,17,18,12,1,2,5,13,14,15,
            16,65,3,0,20,21,22,10,11,9,
            4,7,8,17,18,12,1,2,5,13,
            14,15,16,0,24,42,20,43,54,25,
            44,26,45,46,27,21,47,48,23,55,
            28,56,49,50,22,51,52,53,2,5,
            3,61,57,19,0,2,5,3,60,57,
            0,3,57,60,61,0,29,1,66,80,
            10,11,61,83,84,85,86,87,89,88,
            90,91,92,4,67,68,7,8,63,62,
            69,70,71,72,74,75,9,76,77,78,
            60,81,82,65,58,59,57,19,3,0,
            73,79,60,33,35,6,39,41,36,31,
            37,38,34,32,40,30,3,19,13,14,
            15,16,10,11,9,7,8,17,18,12,
            4,1,5,2,54,55,56,50,42,47,
            45,46,44,43,48,49,51,52,53,28,
            25,23,24,27,26,20,21,22,0,4,
            1,29,58,3,24,42,20,43,54,25,
            44,26,45,46,27,21,47,48,23,55,
            28,56,49,50,22,51,52,53,64,2,
            5,0,31,0,61,29,66,0,33,35,
            6,39,41,36,31,37,38,34,32,40,
            30,19,3,10,11,9,7,8,17,18,
            12,1,2,5,13,14,15,16,4,0,
            66,80,10,11,9,7,8,67,68,62,
            63,69,70,71,72,74,75,76,77,78,
            81,82,61,83,84,85,86,87,88,89,
            90,91,92,57,29,58,24,20,25,26,
            27,21,23,28,22,19,3,4,1,2,
            0,24,42,20,43,54,25,44,26,45,
            46,27,21,47,48,23,55,28,56,49,
            50,22,51,52,53,2,5,64,4,0,
            73,24,42,20,43,54,25,44,26,45,
            46,27,21,47,48,23,55,28,56,49,
            50,22,51,52,53,2,5,4,19,3,
            30,1,0,50,42,47,45,46,44,43,
            48,49,51,52,53,59,19,28,25,23,
            24,27,26,20,21,22,4,2,1,29,
            57,58,3,0,3,58,4,1,29,0,
            9,4,7,8,67,68,62,63,69,70,
            71,72,74,75,76,77,78,81,82,59,
            83,84,85,86,87,88,89,90,91,92,
            65,58,60,6,3,57,19,61,0,24,
            42,20,43,54,25,44,26,45,46,27,
            21,47,48,23,55,28,56,49,50,22,
            51,52,53,2,5,6,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            121,25,16,68,26,9,75,76,76,50,
            50,76,50,76,71,113,117,25,25,94,
            30,25,57,25,57,57,25,33,57,92,
            113,36,36,91,57,9,69,25,25,113,
            25,46,57,59,57,59,50,57,57,11,
            97,91,42,56,85,117,7,95,52,67,
            69,69,50,25,25,102,25,25,69,30,
            25,7,25,68,1,59,31,68,19,107,
            59,31,65,25,25,50,11,63,130,39,
            44,11,25,139,7,7,7,7,7,43,
            7,7,7,25,25,25,25,25,25,25,
            25,25,25,25,92,79,25,134,57,7,
            25,25,25,69,7,69,143,140,25,140,
            140,46,25,102,117,25,25,25,31,117,
            31,31,7,50,65,63,92,11,44,43,
            63,7,7,7,7,7,7,7,7,7,
            7,7,92,92,126,139,139,115,115,13,
            140,7,7,7,7,7,7,7,7,7,
            7,7,7,7,7,7,7,7,140,7,
            36,36,78,113,56,39,145,69,92,25,
            92,92,52,7,69,7,25,31,25,7,
            7,44,43,7,113,125,92,92,92,44,
            25,25,25,25,25,25,25,25,25,25,
            25,25,25,25,25,25,91,92,111,80,
            65,89,69,145,102,140,102,102,117,7,
            44,44,57,82,111,25,25,7,56,92,
            31,38,25,50,7,100,145,69,92,25,
            39,92,7,44,50,7,92,145,69,102,
            65,44,102,92,31,102
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            83,82,81,80,79,78,5,0,101,0,
            75,0,1,103,0,29,1,97,83,82,
            81,80,79,78,0,22,1,99,0,1,
            33,0,29,31,0,45,0,87,5,1,
            0,1,5,32,0,1,22,34,91,24,
            0,34,24,68,33,22,1,0,74,1,
            52,0,25,0,67,0,27,1,19,0,
            69,70,71,72,61,47,0,23,1,29,
            42,58,57,0,22,1,113,0,109,0,
            1,23,0,1,31,44,29,42,0,111,
            0,24,34,1,35,0,1,52,64,0,
            1,22,53,0,88,0,42,29,1,0,
            112,22,1,0,23,57,58,1,0,105,
            1,22,0,1,22,46,28,0,52,1,
            27,0,22,46,1,60,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            2,85,87,9,86,3,10,11,8,6,
            7,68,81,82,83,84,12,13,92,48,
            64,76,69,44,55,60,63,72,1,93,
            77,45,46,49,50,51,57,58,59,65,
            71,47,52,56,61,62,66,67,74,75,
            78,79,80,54,70,73,42,90,29,91,
            31,16,17,30,89,4,14,15,18,19,
            20,21,94,22,23,24,25,26,53,5,
            27,28,32,33,34,35,36,37,38,39,
            40,41,88
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,0,100,104,105,106,107,108,
            109,110,111,112,113,114,115,116,98,0,
            117,127,96,123,135,0,99,122,156,0,
            159,95,97,118,121,0,0,0,0,0,
            153,155,0,157,158,126,134,0,0,0,
            145,148,154,120,167,170,171,172,0,0,
            137,144,0,147,160,166,0,125,138,139,
            140,141,0,146,165,169,102,129,130,131,
            132,133,136,142,143,152,173,101,103,119,
            124,128,150,0,0,151,161,164,178,0,
            180,0,0,149,162,163,168,174,175,0,
            176,177,179,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            168,80,33,39,87,107,113,138,12,19,
            49,67,119,124,26,45,97,147,164,183,
            187,151,1,1,30,54,77,191,6,101,
            158,129,158,93,57,57,57
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            17,17,4,4,17,17,17,144,17,24,
            4,24,17,17,24,4,95,17,24,24,
            4,155,4,4,24,4,24,24,9,104,
            161,132,176,95,64,59,72
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            5,71,45,45,71,69,69,38,62,59,
            45,31,69,69,59,45,64,28,6,5,
            5,18,111,110,57,45,29,3,87,64,
            7,39,5,64,31,44,31
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            60,60,65,65,60,60,60,79,60,58,
            65,58,60,60,58,65,19,60,58,58,
            65,59,65,65,58,65,58,58,61,2,
            58,31,58,19,1,1,1
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            5,112,87,87,112,112,112,74,61,91,
            87,98,112,112,91,87,67,73,5,5,
            5,35,1,3,91,87,98,5,63,67,
            8,74,5,67,98,100,98
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            147,29,0,95,0,201,94,0,31,144,
            0,160,182,94,6,0,97,0,158,94,
            1,150,0,96,0,158,94,1,0,169,
            1,0,114,23,191,94,29,0,114,191,
            94,23,29,0,114,23,29,0,114,191,
            94,29,0,114,29,0,122,0,2,0,
            162,96,0,2,96,0,158,94,1,122,
            0,2,0,160,96,0,144,1,0,160,
            188,94,6,117,54,0,160,188,94,6,
            54,0,145,0,98,0,197,94,145,0,
            94,145,0,149,98,0,166,94,6,117,
            56,0,166,94,6,117,55,0,166,94,
            6,56,0,166,94,6,55,0,128,36,
            0,77,2,99,96,98,0,128,116,120,
            1,39,0,53,121,0,184,94,6,0,
            120,82,110,0,29,116,0,170,1,0,
            96,105,0,170,1,12,0,160,182,94,
            6,116,170,1,0,96,3,0,103,0,
            97,0,196,1,98,0,120,29,98,0,
            120,1,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1440,0,1354,0,2070,2063,2048,2040,1849,1412,
            580,558,456,1055,1743,1250,1182,690,1127,762,
            1836,620,1793,1782,2026,2013,1989,1973,1965,1805,
            1957,1916,1888,1325,1142,1108,1161,1089,1069,1035,
            1016,996,976,956,936,916,896,876,856,836,
            816,796,776,670,741,650,630,306,721,597,
            701,512,492,534,470,0,1882,1445,1865,1863,
            1210,0,1902,1649,1627,1605,1583,1558,1529,1367,
            1482,1280,1441,1205,1180,0,1585,1570,1261,511,
            1886,307,1803,1321,1813,1234,0,418,372,1674,
            307,1321,1495,1443,1234,1729,1670,1531,1408,1693,
            0,345,306,1286,372,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,195,94,115,205,190,171,172,173,56,
            55,174,54,175,176,94,1,2,122,94,
            6,117,6,117,6,6,117,146,4,144,
            94,122,135,1,199,190,185,178,124,94,
            137,94,6,94,6,94,94,6,4,94,
            146,1,29,94,94,57,61,146,184,40,
            32,34,38,37,31,36,41,39,127,6,
            35,33,117,115,94,94,166,145,94,167,
            94,166,188,117,189,94,94,168,94,23,
            114,94,99,1,12,18,17,8,7,4,
            9,11,10,98,101,103,102,105,104,107,
            106,109,108,110,158,115,159,206,6,4,
            137,124,3,120,94,117,1,1,128,1,
            1,94,147,59,94,183,2,5,166,94,
            166,160,61,57,188,168,198,94,114,191,
            168,92,91,90,88,89,87,86,85,84,
            83,61,170,120,145,1,1,80,66,1,
            29,68,67,4,62,63,8,7,75,74,
            72,71,70,69,76,9,78,77,82,81,
            150,151,1,94,57,94,139,153,120,31,
            120,120,184,57,197,59,144,160,57,191,
            23,114,4,116,94,1,170,170,196,120,
            102,102,101,101,104,104,103,103,103,103,
            106,105,108,107,120,109,1,169,94,146,
            182,94,153,112,116,1,116,116,57,59,
            114,114,6,146,94,116,116,59,94,158,
            160,57,201,66,29,202,112,153,120,128,
            94,158,61,147,66,29,153,112,116,79,
            182,147,116,153,160,116
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "member_name",
            "type_name",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "identifier_or_typedefname",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "typedef_name_in_declspec",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 30,
           SCOPE_UBOUND      = 36,
           SCOPE_SIZE        = 37,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 286,
           NT_OFFSET         = 93,
           LA_STATE_OFFSET   = 2495,
           MAX_LA            = 2147483647,
           NUM_RULES         = 305,
           NUM_NONTERMINALS  = 114,
           NUM_SYMBOLS       = 207,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1719,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 2165,
           ERROR_ACTION      = 2190;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
