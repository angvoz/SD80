/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCSizeofExpressionParserprs implements lpg.lpgjavaruntime.ParseTable, GCCSizeofExpressionParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,4,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,6,8,
            0,0,1,1,3,3,3,0,1,0,
            1,2,4,2,1,1,1,3,1,1,
            2,3,7,8,0,1,0,1,3,1,
            3,1,1,1,1,1,1,3,1,1,
            1,1,1,3,1,2,2,1,5,3,
            1,3,5,1,3,1,3,2,4,3,
            5,4,6,6,3,5,1,3,4,5,
            6,0,1,2,1,3,1,1,3,2,
            1,1,1,1,2,1,2,3,1,1,
            1,3,1,2,2,2,3,4,5,1,
            1,7,3,0,0,1,1,3,3,4,
            1,1,2,3,2,3,2,1,0,1,
            2,1,1,1,1,1,2,4,3,6,
            2,4,1,1,1,1,2,6,3,1,
            3,1,4,0,1,1,1,3,1,0,
            4,3,1,2,1,3,4,4,6,1,
            0,1,3,1,3,0,1,4,5,2,
            2,3,3,5,3,4,3,1,2,2,
            2,4,2,1,1,2,2,3,2,2,
            3,1,1,1,1,1,1,1,2,5,
            3,1,1,-39,0,0,0,0,0,0,
            -163,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-134,0,-2,
            0,-237,-31,0,0,0,-54,0,0,0,
            0,0,0,-119,0,0,0,0,0,-4,
            0,-290,0,0,0,0,0,-75,0,-60,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-173,0,0,0,0,0,
            0,0,0,0,0,0,-164,0,0,0,
            0,0,0,0,0,-40,0,0,0,0,
            0,0,0,-16,-132,0,0,0,-247,-55,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-136,0,0,0,0,0,0,
            -61,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-123,-18,0,0,0,
            0,0,0,0,0,0,0,-176,0,0,
            0,0,-35,0,-19,-80,-126,0,0,0,
            0,0,0,-199,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-238,0,
            0,0,0,0,0,0,0,0,0,-147,
            0,-274,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-33,-135,0,-181,
            0,-148,0,0,-125,-36,0,0,0,0,
            0,0,0,0,-57,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-20,0,0,0,0,-21,
            -118,-155,0,-269,0,0,0,0,0,0,
            0,0,0,0,0,0,-138,0,0,-22,
            0,0,0,0,0,0,0,0,0,-256,
            0,-276,0,0,0,0,0,0,0,0,
            0,0,0,0,-37,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-23,0,-130,-1,-220,-32,0,0,0,
            0,0,0,-160,-58,0,0,0,0,0,
            0,-170,0,0,0,0,0,0,0,0,
            0,0,0,0,-139,0,-24,0,-301,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-25,0,0,-26,0,0,0,0,0,
            0,0,0,-81,0,0,-78,0,0,0,
            0,0,0,0,0,0,0,0,0,-73,
            -140,0,-27,0,0,0,0,0,0,0,
            -149,0,-183,0,-159,0,0,0,-282,0,
            0,0,-252,0,0,-249,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-28,
            0,-273,0,0,0,0,0,0,0,0,
            0,-186,0,-3,0,0,0,0,0,0,
            -168,0,0,0,0,0,-288,0,-83,-187,
            0,0,0,0,0,0,0,0,0,-222,
            0,-124,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-296,0,0,0,
            0,0,0,0,0,0,-84,-230,0,-157,
            0,0,0,0,0,0,-85,0,0,0,
            0,0,0,-219,0,-207,0,0,0,0,
            0,0,0,0,-280,0,-94,-56,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -41,0,0,0,0,0,0,0,0,0,
            -169,0,0,0,0,0,0,0,0,0,
            0,0,0,-99,0,-137,-100,0,0,0,
            0,0,0,0,0,-201,-210,0,0,0,
            0,0,0,0,0,-308,0,0,0,0,
            0,0,-204,0,0,0,0,0,0,0,
            -141,-240,0,0,0,0,0,0,0,0,
            -177,-208,0,0,0,0,0,0,0,-29,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-101,0,-102,0,-62,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-281,-216,-299,0,0,0,0,0,0,
            0,-241,-305,0,0,0,0,0,0,-63,
            0,0,0,0,0,0,-242,0,0,0,
            0,0,0,0,-103,0,0,0,0,0,
            0,0,0,0,0,0,0,-64,0,0,
            0,0,0,0,-104,0,0,0,0,0,
            0,0,-259,-309,0,0,0,0,0,0,
            0,-277,0,0,0,-65,0,0,0,0,
            0,0,-218,0,0,0,0,0,0,0,
            -287,0,0,0,0,0,0,0,0,-303,
            0,-292,0,-66,0,0,0,0,0,0,
            -239,0,0,0,0,0,-315,0,-297,0,
            0,0,0,0,0,0,0,0,-105,-310,
            0,-67,0,0,0,0,0,0,-251,0,
            0,0,0,0,0,0,-106,-318,0,0,
            0,0,0,0,0,0,-107,-108,0,-68,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-109,-110,0,0,0,0,
            0,0,0,-111,-300,-112,0,-69,0,0,
            0,0,0,0,-302,0,0,0,0,0,
            -113,-114,-115,-116,0,0,0,0,0,0,
            0,-117,-120,-122,0,-70,0,0,0,0,
            0,0,-323,0,0,0,0,0,0,-133,
            -255,0,0,0,0,0,0,0,0,-143,
            -150,-151,0,-71,0,0,0,0,0,0,
            -332,0,0,0,0,0,0,-153,-154,-156,
            0,0,0,0,0,0,0,-158,-165,-174,
            0,-72,0,0,0,0,0,0,-178,0,
            0,0,0,0,0,-182,-96,0,0,0,
            0,0,0,0,0,-74,-185,-190,0,0,
            0,0,0,-161,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-194,-195,-198,
            0,-213,-215,-224,0,0,-235,0,0,0,
            -257,0,-46,0,0,0,0,0,0,-128,
            0,0,0,0,-258,0,0,-5,0,0,
            0,0,0,0,0,0,0,0,0,-271,
            -272,-275,-279,0,-294,0,-162,0,0,0,
            0,0,0,-298,0,0,0,0,0,-312,
            -320,-324,0,0,0,0,0,0,0,0,
            0,0,0,0,-202,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-203,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -228,0,0,0,0,0,0,-254,0,0,
            0,0,0,-131,0,-171,0,0,0,0,
            0,0,0,0,-278,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-289,0,0,0,0,0,0,0,0,
            0,0,0,0,-179,-184,-211,0,0,0,
            0,0,0,0,0,-304,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-311,0,0,0,0,0,0,0,
            0,0,0,0,0,-212,-214,-223,-225,0,
            0,0,0,0,0,0,-322,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-326,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-246,0,0,
            0,-82,0,0,0,0,-226,0,0,0,
            0,0,0,0,0,0,0,0,-47,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-236,0,0,0,-243,0,
            0,0,0,0,0,0,0,0,-98,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-145,0,0,-248,-245,
            0,0,0,0,0,-79,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-48,
            0,0,0,0,0,0,-197,0,0,0,
            0,0,0,0,0,0,-34,-253,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-172,0,0,0,-189,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-286,0,-175,0,
            0,-59,0,0,-250,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-270,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-284,0,
            0,-49,0,0,0,0,0,0,-206,0,
            0,0,0,-129,0,0,0,0,0,0,
            0,0,0,0,-293,0,0,0,0,0,
            0,0,0,0,-50,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-265,0,0,-306,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-266,0,
            0,0,0,-325,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -167,0,-307,0,-316,0,-8,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-313,-321,-330,0,0,0,-121,
            0,0,0,0,0,0,0,0,0,0,
            -232,0,0,0,0,0,-77,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-331,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-268,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-152,0,0,0,0,
            0,0,0,-6,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-193,0,0,0,0,0,-87,0,
            0,0,0,0,0,0,0,0,0,-196,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-227,0,0,0,
            0,0,-89,0,0,0,0,0,0,0,
            0,0,0,-229,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-295,0,0,0,0,
            0,0,0,0,0,-244,-261,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-263,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -221,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-264,0,0,
            -146,0,0,0,0,0,0,0,0,0,
            0,-38,0,0,-319,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-329,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-334,0,
            0,-191,-192,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -51,0,0,0,0,0,0,-86,0,0,
            0,0,-88,0,0,0,0,-91,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -7,0,0,0,0,0,0,0,0,0,
            0,-93,0,0,0,0,-95,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-76,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-52,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-53,0,0,0,0,0,0,-233,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-42,0,0,0,0,0,0,
            0,0,0,-127,0,0,0,0,0,0,
            0,0,-205,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-9,
            0,0,0,0,0,0,0,0,-10,0,
            0,0,0,0,0,0,0,-11,0,0,
            0,0,0,0,0,0,-12,0,0,0,
            0,0,0,0,0,-13,0,0,0,0,
            0,0,-17,0,-30,0,0,0,-92,0,
            0,0,-43,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-44,0,
            0,0,0,0,0,0,0,-45,0,0,
            0,0,0,0,-209,0,-144,0,-328,-188,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-234,0,0,0,-90,0,0,
            0,0,0,0,-166,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-333,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-14,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-15,0,0,0,0,0,0,-97,0,
            0,0,0,0,0,-180,0,0,0,-200,
            0,-142,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-231,-217,-283,-285,
            -267,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -314,0,0,0,0,-327,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-260,0,-291,0,0,0,0,
            0,-317,0,0,0,0,0,0,0,0,
            -262,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            114,7,115,34,34,24,24,56,56,26,
            26,1,1,2,2,2,2,3,3,3,
            4,5,5,5,5,5,5,5,5,76,
            76,90,6,6,6,6,6,6,6,6,
            6,6,8,8,9,9,9,9,10,10,
            10,11,11,11,12,12,12,12,12,17,
            17,17,18,18,19,19,20,20,21,21,
            22,22,23,23,27,27,27,27,27,27,
            27,27,27,27,27,27,35,29,25,116,
            116,91,91,58,36,36,36,36,36,36,
            36,37,37,37,30,30,117,117,92,92,
            38,38,39,39,39,65,65,40,40,40,
            40,41,41,41,41,41,77,77,33,33,
            33,33,33,51,51,51,98,98,93,93,
            93,93,94,94,94,95,95,95,96,96,
            96,97,97,97,118,118,99,99,100,52,
            55,55,55,55,55,69,70,70,70,70,
            70,70,70,70,70,70,70,70,81,78,
            78,119,120,82,82,79,79,79,83,101,
            101,102,102,84,84,84,60,121,121,103,
            85,85,85,80,80,122,104,104,105,105,
            86,86,31,32,32,32,53,54,54,42,
            42,42,42,45,45,47,43,43,44,48,
            48,140,140,46,141,141,123,123,49,49,
            49,49,49,49,49,49,49,106,67,67,
            67,67,50,72,72,71,71,71,73,73,
            68,68,124,124,75,75,74,74,74,61,
            61,61,62,63,63,63,64,64,64,64,
            66,66,57,57,59,126,125,125,125,125,
            107,127,128,128,129,129,130,130,142,142,
            143,143,144,144,144,144,146,146,145,145,
            145,147,147,13,13,13,28,28,14,14,
            131,131,108,108,108,109,109,132,132,110,
            110,15,15,133,133,111,111,111,16,87,
            134,134,135,135,112,112,112,88,88,88,
            6,6,12,12,23,3,37,136,113,113,
            113,89,89,33,77,51,100,100,100,103,
            103,103,122,119,120,50,83,129,129,137,
            138,107,114,114,205,927,17,21,18,484,
            830,878,44,545,527,650,645,365,313,314,
            315,712,670,762,747,793,765,74,1011,2836,
            133,91,1112,242,31,134,212,1526,20,17,
            21,18,484,42,49,44,545,527,650,645,
            50,391,242,1401,1235,136,133,135,849,159,
            1526,20,17,21,18,484,42,283,44,545,
            527,650,645,138,165,1201,178,712,670,762,
            747,1264,142,145,148,151,2179,49,365,313,
            314,315,22,358,554,430,550,1702,2448,2453,
            2458,2502,1347,1749,1671,1082,134,212,832,1359,
            1526,20,17,21,18,484,42,2507,44,545,
            527,650,1236,25,242,186,136,133,135,332,
            159,1526,20,17,21,18,484,42,209,44,
            545,527,650,645,138,165,991,225,712,670,
            762,1272,104,142,145,148,151,2179,1359,317,
            313,314,315,685,358,433,255,315,1702,2448,
            2453,2458,2502,1347,1430,20,17,21,18,484,
            830,569,44,545,527,650,645,355,2507,1723,
            1433,712,670,762,747,793,765,74,253,212,
            1482,280,1376,20,17,21,18,484,830,569,
            44,545,527,650,645,274,333,321,1392,712,
            670,762,747,793,765,74,123,299,1129,280,
            49,281,1482,1273,844,849,685,2858,1011,732,
            286,317,313,314,315,1526,20,17,21,18,
            484,42,89,44,545,527,650,645,122,281,
            2524,1273,712,670,1246,253,320,1392,288,240,
            333,418,1482,951,1454,20,17,21,18,484,
            830,287,44,545,527,650,645,242,185,1636,
            378,712,670,762,747,793,765,74,111,412,
            1179,280,1478,20,17,21,18,484,830,289,
            44,545,527,650,645,685,1432,925,292,712,
            670,762,747,793,765,74,682,378,28,280,
            1273,281,200,1273,733,393,1438,242,31,19,
            157,1869,844,1356,754,1526,20,17,21,18,
            484,42,573,44,545,527,650,645,277,281,
            87,1273,712,1261,382,1211,1346,293,381,1502,
            20,17,21,18,484,830,857,44,545,527,
            650,645,635,254,212,31,712,670,762,747,
            793,765,74,28,1241,1273,280,1328,20,17,
            21,18,484,830,547,44,545,527,650,645,
            685,242,187,547,712,670,762,747,793,765,
            74,242,860,49,615,1434,281,24,1273,1748,
            914,238,1817,878,651,290,1622,20,17,21,
            18,484,830,275,44,545,527,650,645,410,
            1625,126,878,712,670,762,747,793,765,74,
            254,212,1482,329,1526,20,17,21,18,484,
            830,849,44,545,527,650,645,878,1390,1292,
            1482,712,670,762,747,793,765,74,125,179,
            1482,91,1598,20,17,21,18,484,830,2031,
            44,545,527,650,645,242,121,840,1245,712,
            670,762,747,793,765,74,2904,1658,1727,851,
            1526,20,17,21,18,484,42,1682,44,545,
            527,650,645,203,431,1401,294,712,670,762,
            747,793,765,93,127,897,327,626,1526,20,
            17,21,18,484,42,430,44,545,527,650,
            1244,1526,20,17,21,18,484,42,1919,44,
            964,1352,20,17,21,18,484,830,1389,44,
            545,527,650,645,1224,227,1131,1264,712,670,
            762,747,793,765,74,1431,737,168,993,317,
            313,314,315,1002,455,239,1622,20,17,21,
            18,484,830,849,44,545,527,650,645,343,
            208,1702,315,712,670,762,747,793,765,74,
            1844,1082,1797,329,317,313,314,315,680,1415,
            1526,20,17,21,18,484,830,241,44,545,
            527,650,645,253,212,331,1388,712,670,762,
            747,793,765,74,430,259,1140,92,1526,20,
            17,21,18,484,830,293,44,545,527,650,
            645,226,315,1738,1019,712,670,762,747,793,
            765,74,849,1757,809,85,317,313,314,315,
            1526,20,17,21,18,484,830,849,44,545,
            527,650,645,253,212,1244,328,712,670,762,
            747,793,765,74,254,212,243,84,1526,20,
            17,21,18,484,830,1601,44,545,527,650,
            645,244,334,1482,878,712,670,762,747,793,
            765,74,242,295,1073,83,1526,20,17,21,
            18,484,830,49,44,545,527,650,645,2906,
            1291,1179,345,712,670,762,747,793,765,74,
            242,297,1482,82,1526,20,17,21,18,484,
            830,1065,44,545,527,650,645,878,1062,1482,
            180,712,670,762,747,793,765,74,2912,1766,
            1784,81,1526,20,17,21,18,484,830,49,
            44,545,527,650,645,339,2860,1777,1482,712,
            670,762,747,793,765,74,193,268,325,80,
            1526,20,17,21,18,484,830,1177,44,545,
            527,650,645,204,117,799,350,712,670,762,
            747,793,765,74,1578,167,819,79,1526,20,
            17,21,18,484,830,1736,44,545,527,650,
            645,590,400,875,711,712,670,762,747,793,
            765,74,572,929,413,78,1526,20,17,21,
            18,484,830,849,44,545,527,650,645,294,
            676,431,1401,712,670,762,747,793,765,74,
            790,1800,1821,77,1526,20,17,21,18,484,
            830,849,44,545,527,650,645,296,1822,1826,
            900,712,670,762,747,793,765,74,1093,1081,
            1003,76,1526,20,17,21,18,484,830,1832,
            44,545,527,650,645,380,1000,1201,178,712,
            670,762,747,793,765,74,685,69,677,75,
            365,313,314,315,1526,20,17,21,18,484,
            830,282,44,545,527,650,645,208,134,212,
            23,712,670,762,747,793,765,74,1130,201,
            1835,354,1836,1384,1842,1151,1415,1219,137,133,
            135,1533,159,1526,20,17,21,18,484,42,
            685,44,545,527,1044,1408,139,165,1550,20,
            17,21,18,484,351,143,146,149,152,2179,
            1843,1481,1557,1462,272,1672,359,1526,20,17,
            21,18,484,830,1427,44,545,527,650,645,
            1486,1007,1505,3120,712,670,762,747,793,765,
            74,3120,3120,3120,73,1526,20,17,21,18,
            484,830,3120,44,545,527,650,645,3120,3120,
            3120,3120,712,670,762,747,793,765,74,3120,
            3120,3120,1072,1526,20,17,21,18,484,830,
            3120,44,545,527,650,645,3120,3120,3120,3120,
            712,670,762,747,793,765,74,3120,3120,3120,
            1087,1526,20,17,21,18,484,42,777,44,
            545,527,650,645,1186,455,685,3120,712,670,
            762,747,793,765,93,1526,20,17,21,18,
            484,42,3120,44,545,527,650,645,319,3120,
            278,196,712,670,762,747,793,765,93,3120,
            3120,3120,1526,20,17,21,18,484,42,357,
            44,545,527,650,645,685,685,685,1828,712,
            670,762,747,793,765,93,1526,20,17,21,
            18,484,42,1255,44,545,527,650,645,338,
            716,279,192,712,670,762,747,793,765,93,
            3120,3120,3120,1526,20,17,21,18,484,42,
            211,44,545,527,650,645,1695,1734,685,685,
            712,670,762,747,793,765,93,1526,20,17,
            21,18,484,42,1283,44,545,527,650,645,
            1769,336,2277,2294,712,670,762,747,793,765,
            93,3120,3120,3120,1526,20,17,21,18,484,
            42,201,44,545,527,650,645,3120,3120,3120,
            3120,712,670,762,747,793,765,93,244,3120,
            3120,3120,1265,3120,3120,1311,3120,685,3120,3120,
            3120,316,313,314,315,365,313,314,315,1526,
            20,17,21,18,484,42,526,44,545,527,
            1046,2338,202,134,212,840,3120,3120,3120,685,
            218,916,220,1012,222,223,228,273,1329,137,
            1328,3120,3120,141,133,135,384,159,3120,268,
            774,546,271,224,3120,3120,1,1328,3120,685,
            733,140,165,384,86,110,757,2859,3120,95,
            3120,3120,805,1934,652,108,94,96,97,98,
            99,86,110,318,230,3120,95,3120,3120,805,
            276,652,108,94,96,97,98,99,3120,3120,
            1526,20,17,21,18,484,42,869,44,545,
            527,1095,105,1431,2754,273,109,49,1434,3120,
            316,313,314,315,844,1867,364,266,774,546,
            271,106,3120,109,289,2071,3120,342,49,3120,
            1410,2725,87,364,194,844,438,3120,107,217,
            916,220,1012,222,223,228,1766,541,3120,32,
            1896,2857,379,87,2754,685,455,1638,3120,844,
            316,313,314,315,3120,3120,217,916,220,1012,
            222,223,228,273,3120,2054,521,87,262,337,
            3120,1263,1844,3120,3120,266,774,546,271,217,
            916,220,1012,222,223,228,154,1397,263,1749,
            1179,1450,1526,20,17,21,18,484,42,974,
            44,545,527,1115,965,898,2276,258,3120,3120,
            1587,455,1330,323,3120,685,3120,316,313,314,
            315,3120,2881,276,3120,1526,20,17,21,18,
            484,42,526,44,545,527,1189,1844,260,1208,
            197,217,916,220,1012,222,223,228,273,3120,
            3120,3120,869,1739,1274,685,3120,1262,1190,2754,
            266,774,546,271,3120,316,313,314,315,1755,
            3120,2060,258,1410,705,1536,3120,1330,3120,229,
            2071,2754,317,313,314,315,3120,316,313,314,
            315,3120,3120,3120,217,916,220,1012,222,223,
            228,315,2054,1758,3120,685,2857,1526,20,17,
            21,18,484,42,3120,40,217,916,220,1012,
            222,223,228,3120,541,685,685,233,1450,2382,
            495,2754,253,212,3120,3120,3120,317,313,314,
            315,869,3120,316,313,314,315,636,2754,348,
            2399,155,1397,3120,317,313,314,315,526,2881,
            316,313,314,315,3120,3120,217,916,220,1012,
            222,223,228,732,685,526,3120,198,1450,273,
            1329,3120,3120,217,916,220,1012,222,223,228,
            917,268,774,546,271,2861,3120,1274,349,3120,
            3120,3120,3120,316,313,314,315,1465,3120,2886,
            3120,3120,3120,3120,2060,3120,469,1328,526,3120,
            3120,3120,3120,844,1550,20,17,21,18,484,
            350,3120,218,916,220,1012,222,223,228,3120,
            1329,86,110,517,1328,3120,95,3120,3120,800,
            844,652,1358,94,96,97,98,99,3120,3120,
            565,1328,316,313,314,315,3120,844,86,110,
            3120,3120,3120,95,3120,3120,3120,608,652,103,
            94,96,97,98,99,86,110,681,1328,3120,
            95,3120,3120,383,844,652,101,94,96,97,
            98,99,3120,3120,729,1328,316,313,314,315,
            3120,844,86,110,3120,3120,3120,95,3120,3120,
            3120,966,652,356,94,96,97,98,99,86,
            110,3120,3120,3120,95,3120,1771,3120,3120,652,
            102,94,96,97,98,99,1177,845,1328,317,
            313,314,315,455,844,3120,3120,3120,3120,316,
            313,314,315,3120,893,1328,3120,3120,408,3120,
            3120,844,86,110,526,3120,504,95,3120,1844,
            3120,3120,652,118,94,96,97,98,99,86,
            110,1061,3120,3120,95,3120,1274,3120,844,652,
            114,94,96,97,98,99,3120,3120,941,1328,
            3120,1434,3120,1698,258,844,87,1536,844,1330,
            115,3120,593,3120,3120,1057,1328,3120,3120,2077,
            3120,3120,844,86,110,3120,87,124,95,3120,
            842,3120,3120,652,1435,94,96,97,98,99,
            86,110,1105,1328,3120,95,1123,3120,3120,844,
            652,113,94,96,97,98,99,3120,3120,1153,
            1328,273,49,49,3120,3120,844,86,110,844,
            844,3120,95,266,774,546,271,652,120,94,
            96,97,98,99,86,110,265,87,87,95,
            3120,1639,1707,3120,652,119,94,96,97,98,
            99,1526,20,17,21,18,484,42,1002,44,
            545,527,1207,1214,3120,3120,3120,3120,1278,3120,
            3120,365,313,314,315,3120,365,313,314,315,
            3120,365,313,314,315,3120,3120,3120,3120,134,
            212,3120,3120,3120,134,212,3120,3120,3120,134,
            212,1550,20,17,21,18,484,41,3120,144,
            133,135,1642,159,147,133,135,1655,159,150,
            133,135,3120,159,3120,365,313,314,315,3120,
            365,313,314,315,1401,20,17,21,18,484,
            42,3120,43,134,212,3120,3120,3120,134,212,
            1526,20,17,21,18,484,42,3120,44,545,
            1217,3120,3120,153,133,135,3120,159,360,133,
            135,3120,159,1526,20,17,21,18,484,42,
            185,44,545,1218,3120,3120,3120,2754,3120,3120,
            3120,28,3120,1273,1526,20,17,21,18,484,
            42,3120,44,967,295,20,17,21,18,484,
            42,3120,36,295,20,17,21,18,484,42,
            3120,36,217,916,220,1012,222,223,228,3120,
            3120,3120,3120,3120,1739,3120,3120,3120,245,3120,
            1526,20,17,21,18,484,42,246,39,1526,
            20,17,21,18,484,42,3120,38,1526,20,
            17,21,18,484,42,3120,37,1526,20,17,
            21,18,484,42,3120,36,1526,20,17,21,
            18,484,42,417,35,417,3120,3120,3120,1692,
            384,3120,384,1526,20,17,21,18,484,42,
            3120,47,316,313,314,315,3120,3120,87,3120,
            87,3120,695,543,695,543,196,1001,196,1526,
            20,17,21,18,484,42,3120,46,1526,20,
            17,21,18,484,42,636,45,417,3120,1810,
            473,3120,3120,2352,384,2352,3120,384,316,313,
            314,315,317,313,314,315,3120,3120,616,3120,
            790,3120,87,526,636,87,695,543,1276,115,
            196,3120,791,805,3120,1704,3120,316,313,314,
            315,316,313,314,315,1274,3120,3120,316,313,
            314,315,526,1812,3120,3120,966,2352,3120,3120,
            3120,3120,1698,526,3120,870,317,313,314,315,
            3120,745,1586,3120,1274,3120,3120,2321,1550,20,
            17,21,18,484,34,976,3120,364,3120,3120,
            3120,2120,1550,20,17,21,18,484,33,1574,
            20,17,21,18,484,1300,1725,3120,3120,3120,
            1704,667,1574,20,17,21,18,484,361,316,
            313,314,315,316,313,314,315,1743,613,64,
            989,1760,3120,3120,1063,455,455,455,526,3120,
            316,313,314,315,316,313,314,315,3120,3120,
            3120,1788,3120,3120,3120,1999,1801,3120,3120,2266,
            1171,196,1844,196,316,313,314,315,3120,316,
            313,314,315,3120,1061,3120,1061,3120,3120,2729,
            3120,844,1061,844,2783,3120,3120,3120,1828,844,
            1828,49,3120,3120,3120,3120,3120,258,844,87,
            1985,87,1330,115,3120,115,3120,87,3120,3120,
            3120,115,191,3120,191,3120,87,3120,3120,3120,
            1945,3120,3120,3120,3120,3120,1393,3120,3120,813,
            1528,1124,1528,3120,3120,3120,3120,3120,3120,1162,
            3120,2035,3120,3120,3120,3120,3120,2056,3120,3120,
            3120,3120,2033,3120,0,607,32,0,1827,32,
            0,3128,1,0,859,128,0,897,128,0,
            907,128,0,859,129,0,897,129,0,907,
            129,0,859,130,0,897,130,0,907,130,
            0,859,184,0,897,184,0,907,184,0,
            184,188,0,859,183,0,897,183,0,907,
            183,0,183,188,0,859,131,0,897,131,
            0,907,131,0,859,132,0,897,132,0,
            907,132,0,20,178,0,859,363,0,897,
            363,0,907,363,0,1,724,0,859,375,
            0,897,375,0,907,375,0,1,859,0,
            1,897,0,1,907,0,351,361,0,859,
            252,0,897,252,0,907,252,0,8,10,
            0,1,3345,0,1,3356,0,112,2355,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            0,0,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,0,0,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,0,1,65,66,67,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,49,68,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,86,87,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,68,0,65,66,67,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,0,0,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,0,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,24,25,
            26,99,28,9,10,68,32,33,34,35,
            36,0,1,0,1,2,5,4,48,6,
            7,8,0,0,0,51,52,53,54,55,
            56,57,58,59,60,61,62,0,68,65,
            66,67,0,30,2,3,9,10,6,80,
            81,9,10,11,30,0,14,15,0,1,
            2,3,0,0,0,1,2,3,0,5,
            6,3,30,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,30,31,
            0,49,50,30,0,73,74,75,76,31,
            78,79,0,9,10,63,64,49,24,25,
            26,69,70,71,72,73,74,75,76,0,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            0,77,2,3,0,83,6,0,0,9,
            10,11,0,1,14,15,4,5,11,7,
            8,0,0,1,2,63,64,5,6,0,
            30,9,10,11,12,13,14,15,16,17,
            18,19,0,21,22,23,0,0,6,49,
            50,29,73,74,75,76,48,78,79,0,
            0,1,0,63,64,5,20,20,6,69,
            70,71,72,73,74,75,76,48,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,0,1,
            2,3,0,5,6,3,4,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,63,64,0,27,2,29,4,27,
            6,7,8,71,72,37,38,39,40,41,
            42,43,44,45,46,47,0,1,2,3,
            0,5,6,3,30,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,27,4,29,0,7,8,0,
            0,31,3,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,48,5,
            6,0,0,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,48,0,
            0,27,0,29,2,3,24,25,26,50,
            11,37,38,39,40,41,42,43,44,45,
            46,47,0,1,0,3,4,5,0,7,
            8,0,30,31,12,0,1,2,3,4,
            84,6,7,8,0,0,24,25,26,4,
            28,29,7,8,32,33,34,35,36,24,
            25,26,27,28,83,30,31,32,33,34,
            35,36,50,51,52,53,54,55,56,57,
            58,59,60,61,62,0,0,65,66,67,
            0,1,2,3,0,5,6,3,13,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,2,27,4,29,
            0,7,8,37,0,31,82,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            2,3,0,5,6,3,0,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,48,0,0,27,0,29,2,3,
            24,25,26,31,0,37,38,39,40,41,
            42,43,44,45,46,47,0,1,25,3,
            4,5,0,7,8,0,30,31,12,0,
            1,2,3,4,84,6,7,8,0,0,
            24,25,26,4,28,29,7,8,32,33,
            34,35,36,24,25,26,27,28,0,30,
            31,32,33,34,35,36,50,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,3,0,5,
            6,3,13,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,1,
            2,27,4,29,0,7,8,0,80,81,
            3,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,0,5,6,0,
            82,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,2,27,
            4,29,48,7,8,77,30,50,0,37,
            38,39,40,41,42,43,44,45,46,47,
            0,1,2,3,0,5,6,48,20,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,0,70,27,4,29,
            6,7,8,0,1,2,3,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            0,3,4,5,4,7,8,7,8,0,
            12,0,0,30,31,4,0,1,7,8,
            0,1,24,25,26,5,28,29,0,20,
            32,33,34,35,36,24,25,26,0,28,
            20,13,68,32,33,34,35,36,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,49,0,65,66,67,0,1,2,3,
            0,5,6,3,0,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,0,1,27,3,29,6,27,24,25,
            26,31,0,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,0,5,
            6,0,31,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,0,
            0,27,4,29,4,7,8,7,8,0,
            48,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,0,5,6,3,
            49,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,48,0,27,
            4,29,6,7,8,0,0,2,3,37,
            38,39,40,41,42,43,44,45,46,47,
            0,1,63,64,4,5,50,7,8,0,
            0,1,12,0,0,5,31,4,0,0,
            7,8,0,0,24,25,26,49,28,6,
            20,0,32,33,34,35,36,24,25,26,
            0,28,2,0,68,32,33,34,35,36,
            0,51,52,53,54,55,56,57,58,59,
            60,61,62,0,0,65,66,67,4,6,
            30,7,8,0,1,0,1,0,5,4,
            5,4,7,8,7,8,0,69,24,25,
            26,0,28,2,71,72,32,33,34,35,
            36,24,25,26,0,28,63,64,0,32,
            33,34,35,36,0,51,52,53,54,55,
            56,57,58,59,60,61,62,0,1,2,
            3,0,5,6,71,72,9,10,11,12,
            13,14,15,16,17,18,19,0,21,22,
            23,0,1,2,3,28,5,6,0,1,
            9,10,11,12,13,14,15,16,17,18,
            19,0,21,22,23,0,1,2,3,28,
            5,6,24,0,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            0,1,2,20,77,5,6,0,0,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,50,0,1,77,0,
            1,2,6,0,5,6,3,0,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,1,2,49,20,5,6,
            27,0,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,1,2,
            0,0,5,6,3,0,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,0,1,2,0,1,5,6,27,48,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,0,1,2,0,49,
            5,6,0,48,9,10,11,12,13,14,
            15,16,17,18,19,0,21,22,23,0,
            1,2,0,0,5,6,0,0,9,10,
            11,12,13,14,15,16,17,18,19,0,
            21,22,23,0,1,2,48,0,5,6,
            0,0,9,10,11,12,13,14,15,16,
            17,18,19,48,21,22,23,0,1,2,
            0,69,5,6,0,0,9,10,11,12,
            13,14,15,16,17,18,19,0,21,22,
            23,0,1,2,0,69,5,6,0,0,
            9,10,11,12,13,14,15,16,17,18,
            19,0,21,22,23,4,0,0,7,8,
            73,74,75,76,0,78,79,0,4,2,
            0,7,8,63,64,24,25,26,0,28,
            0,0,2,32,33,34,35,36,24,25,
            26,0,28,2,14,15,32,33,34,35,
            36,0,1,69,0,4,5,3,7,8,
            30,0,1,0,0,4,5,4,7,8,
            7,8,88,89,90,91,92,93,94,95,
            96,97,0,1,0,31,0,5,4,3,
            0,7,8,0,1,0,3,0,3,0,
            70,4,0,49,7,8,4,0,0,7,
            8,3,30,27,0,85,0,0,4,0,
            3,7,8,4,31,0,7,8,0,98,
            0,24,25,26,4,49,0,7,8,31,
            24,25,26,0,0,0,3,0,31,0,
            0,4,70,0,7,8,0,49,2,0,
            0,2,0,68,4,20,49,7,8,0,
            27,0,77,4,0,4,7,8,7,8,
            0,0,2,2,0,0,30,2,63,64,
            0,0,49,2,0,0,2,2,0,63,
            64,0,0,2,2,0,0,0,0,0,
            20,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3120,5049,1,1357,3075,5032,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            476,1,1,1,1,1,1,3129,1,3220,
            72,1,1,1,1,1,1,1302,580,900,
            612,1320,2146,1301,801,1319,2341,1318,1,88,
            3127,1,1,1,1,1,1,1,1,1,
            1,1,1,1,3114,1,1,1,8,3108,
            3108,3108,3108,3108,3108,3108,3108,3108,3108,3108,
            3108,3108,3108,3108,3108,3108,3108,3108,3108,3108,
            3108,3108,3108,3108,3108,3108,3108,3108,1020,3377,
            3108,3108,3108,3108,3108,3108,3108,3108,3108,3108,
            3108,3108,3108,3108,3108,3108,440,1872,3108,3108,
            3108,3108,3108,3108,3108,3108,3108,3108,3108,3108,
            3108,3377,3120,3108,3108,3108,3120,5049,1,3130,
            3075,5032,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,476,1,1,1,
            1,1,1,3129,1,3220,285,1,1,1,
            1,1,1,1302,580,900,612,1320,2146,1301,
            801,1319,2341,1318,1,3345,2570,1,1,1,
            1,1,1,1,1,1,1,1,1,62,
            3120,1,1,1,3120,3131,2673,3120,907,3132,
            2657,859,897,2648,2639,2666,2829,3136,2822,2808,
            2491,3133,3134,3135,51,2630,2037,2154,3333,3335,
            3334,2984,3282,2584,941,3376,3283,3281,3336,3284,
            3280,3120,3131,267,3345,1929,3132,907,2234,252,
            859,897,59,3120,270,3287,3292,3291,3289,3290,
            3288,3293,3294,3286,3295,3296,3297,53,1521,2679,
            2758,2223,1,777,3132,3132,2584,941,3132,928,
            490,3132,3132,3132,777,3120,3132,3132,1,3345,
            1929,261,68,219,3120,3131,2673,3124,1,3132,
            2657,90,3132,2648,2639,2666,1418,3136,2822,2808,
            2491,3133,3134,3135,3120,2630,2037,2154,777,261,
            3120,3132,3132,777,52,2441,1955,1922,1810,90,
            1719,1403,54,2584,941,3132,3132,261,3333,3335,
            3334,3132,3132,3132,3132,3132,3132,3132,3132,61,
            3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,
            3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,
            1,3123,3131,3131,3120,625,3131,64,1,3131,
            3131,3131,184,3030,3131,3131,3027,3030,417,3021,
            3024,3120,3120,1,1,2540,2563,1,1,3120,
            3131,1,1,1,1,1,1,1,1,1,
            1,1,3120,1,1,1,1,3120,2765,3131,
            3131,3503,2441,1955,1922,1810,2,1719,1403,353,
            207,3131,48,3131,3131,3132,476,4660,2718,3131,
            3131,3131,3131,3131,3131,3131,3131,1364,3131,3131,
            3131,3131,3131,3131,3131,3131,3131,3131,3131,3131,
            3131,3131,3131,3131,3131,3131,3131,3131,3120,5049,
            1,3130,1,5032,1,116,3075,1,1,1,
            1,1,1,1,1,1,1,1,476,1,
            1,1,2540,2563,267,3129,1776,3220,907,116,
            252,859,897,2709,2683,1302,580,900,612,1320,
            2146,1301,801,1319,2341,1318,3120,5049,1,3130,
            3120,5032,1,3126,777,1,1,1,1,1,
            1,1,1,1,1,1,476,1,1,1,
            1,3345,2570,3129,3093,3220,70,3087,3090,1,
            3120,3125,2991,1302,580,900,612,1320,2146,1301,
            801,1319,2341,1318,3120,5049,1,3130,887,5032,
            1,69,247,1,1,1,1,1,1,1,
            1,1,1,1,476,1,1,1,1623,65,
            3120,3129,1,3220,1776,264,3333,3335,3334,3127,
            417,1302,580,900,612,1320,2146,1301,801,1319,
            2341,1318,3120,1,3120,190,1,1,3120,1,
            1,3120,777,264,1,20,178,3063,3063,178,
            511,3063,178,178,66,252,1,1,1,907,
            1,3315,859,897,1,1,1,1,1,178,
            178,178,3063,178,625,3063,3063,178,178,178,
            178,178,190,1,1,1,1,1,1,1,
            1,1,1,1,1,3120,3120,1,1,1,
            3120,5049,1,3130,3120,5032,1,3126,1585,1,
            1,1,1,1,1,1,1,1,1,1,
            476,1,1,1,1,3345,2570,3129,3093,3220,
            71,3087,3090,1394,3120,3125,725,1302,580,900,
            612,1320,2146,1301,801,1319,2341,1318,3120,5049,
            1,3130,1,5032,1,3126,248,1,1,1,
            1,1,1,1,1,1,1,1,476,1,
            1,1,1623,341,3120,3129,1,3220,1776,3126,
            1,1,1,3125,3120,1302,580,900,612,1320,
            2146,1301,801,1319,2341,1318,3120,1,3460,189,
            1,1,3120,1,1,3120,777,3125,1,351,
            361,361,3096,361,511,3096,361,361,63,181,
            1,1,1,907,1,3315,859,897,1,1,
            1,1,1,361,361,361,3096,361,67,361,
            3096,361,361,361,361,361,189,1,1,1,
            1,1,1,1,1,1,1,1,1,346,
            3120,1,1,1,3120,5049,1,3130,3120,5032,
            1,3124,1430,1,1,1,1,1,1,1,
            1,1,1,1,476,1,1,1,1,3345,
            2570,3129,3093,3220,3120,3087,3090,3120,928,490,
            3128,1302,580,900,612,1320,2146,1301,801,1319,
            2341,1318,3120,5049,1,3130,291,5032,1,3120,
            725,1,1,1,1,1,1,1,1,1,
            1,1,476,1,1,1,252,3345,2570,3129,
            907,3220,1437,859,897,3123,1596,3127,3120,1302,
            580,900,612,1320,2146,1301,801,1319,2341,1318,
            3120,5049,1,3130,3120,5032,1,2173,467,1,
            1,1,1,1,1,1,1,1,1,1,
            476,1,1,1,1,3120,1160,3129,3093,3220,
            252,3087,3090,1,3111,1929,3126,1302,580,900,
            612,1320,2146,1301,801,1319,2341,1318,3120,1,
            375,190,1,1,3084,1,1,3078,3081,3120,
            1,129,255,777,3125,3009,3120,2104,3003,3006,
            3120,3131,1,1,1,3132,1,3315,3120,1143,
            1,1,1,1,1,3333,3335,3334,3120,3282,
            610,1430,3377,3283,3281,3336,3284,3280,190,1,
            1,1,1,1,1,1,1,1,1,1,
            1,977,3120,1,1,1,3120,5049,1,3130,
            1,5032,1,116,249,1,1,1,1,1,
            1,1,1,1,1,1,476,1,1,1,
            3120,3120,1339,3129,3126,3220,2840,116,1,1,
            1,116,3120,1302,580,900,612,1320,2146,1301,
            801,1319,2341,1318,3120,5049,1,3130,3120,5032,
            1,30,3125,1,1,1,1,1,1,1,
            1,1,1,1,476,1,1,1,373,3120,
            376,3129,907,3220,907,859,897,859,897,352,
            2190,1302,580,900,612,1320,2146,1301,801,1319,
            2341,1318,3120,5049,1,3130,284,5032,1,424,
            582,1,1,1,1,1,1,1,1,1,
            1,1,476,1,1,1,1,2217,30,3129,
            3093,3220,252,3087,3090,3120,3120,538,3126,1302,
            580,900,612,1320,2146,1301,801,1319,2341,1318,
            3120,3131,2540,2563,907,3132,424,859,897,3120,
            3120,3131,2842,130,3120,3132,3125,3018,156,3120,
            3012,3015,3120,50,3333,3335,3334,3149,3282,2718,
            803,3120,3283,3281,3336,3284,3280,3333,3335,3334,
            269,3282,714,58,3377,3283,3281,3336,3284,3280,
            3120,3287,3292,3291,3289,3290,3288,3293,3294,3286,
            3295,3296,3297,49,128,2679,2758,2223,3000,2718,
            777,2994,2997,206,432,183,3042,131,432,3039,
            3042,3051,3033,3036,3045,3048,3120,654,3333,3335,
            3334,3120,3282,1534,2709,2683,3283,3281,3336,3284,
            3280,3333,3335,3334,3120,3282,2540,2563,3120,3283,
            3281,3336,3284,3280,3120,3287,3292,3291,3289,3290,
            3288,3293,3294,3286,3295,3296,3297,1,3131,2673,
            3124,3120,3132,2594,2709,2683,2648,2639,2666,1418,
            3136,2822,2808,2491,3133,3134,3135,3120,2630,2037,
            2154,3120,3131,2673,3124,872,3132,2603,324,3445,
            2648,2639,2666,1418,3136,2822,2808,2491,3133,3134,
            3135,3120,2630,2037,2154,1,3874,2673,29,1493,
            3776,2657,3446,3120,2648,2639,2666,1418,3136,2822,
            2808,2491,3133,3134,3135,4660,2630,2037,2154,3120,
            3120,3131,2673,1199,3123,3132,2657,206,3120,2648,
            2639,2666,1418,3136,2822,2808,2491,3133,3134,3135,
            4660,2630,2037,2154,3120,29,3120,2055,3123,1,
            3874,2673,1451,1,3776,2657,3130,362,2648,2639,
            2666,1418,3136,2822,2808,2491,3133,3134,3135,4660,
            2630,2037,2154,3120,3131,2673,4777,4660,3132,2657,
            3129,3120,2648,2639,2666,1418,3136,2822,2808,2491,
            3133,3134,3135,4660,2630,2037,2154,377,3131,2673,
            344,3120,3132,2657,3130,200,2648,2639,2666,1418,
            3136,2822,2808,2491,3133,3134,3135,4660,2630,2037,
            2154,3120,3131,2673,3120,3357,3132,2657,3129,3499,
            2648,2639,2666,1418,3136,2822,2808,2491,3133,3134,
            3135,4660,2630,2037,2154,3120,3131,2673,1,1064,
            3132,2657,210,1674,2648,2639,2666,1418,3136,2822,
            2808,2491,3133,3134,3135,1,2630,2037,2154,3120,
            3131,2675,3120,3120,3132,2657,3120,3120,2648,2639,
            2666,1418,3136,2822,2808,2491,3133,3134,3135,3120,
            2630,2037,2154,3120,3131,2727,3132,60,3132,2657,
            3120,3120,2648,2639,2666,1418,3136,2822,2808,2491,
            3133,3134,3135,3131,2630,2037,2154,1,3131,2673,
            57,1572,3132,2657,3120,3120,2648,2639,2666,1418,
            3136,2822,2808,2491,3133,3134,3135,3120,2630,2037,
            2154,330,3131,2673,42,749,3132,2657,3120,3120,
            2648,2639,2666,1418,3136,2822,2808,2491,3133,3134,
            3135,132,2630,2037,2154,3060,3120,3120,3054,3057,
            2441,1955,1922,1810,363,1719,1403,3120,3072,485,
            3120,3066,3069,2540,2563,3333,3335,3334,3120,3282,
            32,112,2985,3283,3281,3336,3284,3280,3333,3335,
            3334,3120,3282,1290,3146,3147,3283,3281,3336,3284,
            3280,205,5289,1332,3120,907,5289,3126,859,897,
            2988,372,5334,252,3120,907,5334,3105,859,897,
            3099,3102,1304,1276,1248,1220,1192,1136,1164,1108,
            1080,1048,3120,3131,182,3125,3120,3132,907,3130,
            3120,859,897,3120,1875,3120,3126,374,3124,3120,
            717,907,158,489,859,897,907,250,3120,859,
            897,3126,1545,3129,367,413,251,3120,907,366,
            3126,859,897,907,3125,56,859,897,3120,3117,
            368,3333,3335,3334,907,1982,55,859,897,3125,
            3333,3335,3334,3120,3120,188,3130,199,3125,3120,
            3120,907,1132,3120,859,897,221,986,1770,3120,
            369,2730,3120,1647,907,205,1452,859,897,370,
            3129,371,3123,907,3120,907,859,897,859,897,
            3120,3120,1848,2402,3120,3120,777,2403,2540,2563,
            376,335,2004,1637,3120,322,1735,816,3120,2540,
            2563,3120,347,2921,1444,3120,3120,3120,3120,3120,
            372
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            159,1,611,3,611,611,611,611,611,611,
            611,611,611,611,611,11,583,278,275,282,
            280,290,288,292,291,294,293,264,611,583,
            390,390,243,611,261,261,261,63,347,331,
            611,611,611,611,611,611,611,611,611,611,
            611,611,611,611,611,611,611,611,489,611,
            611,611,611,611,611,611,611,611,611,611,
            611,611,261,261,233,82,67,211,452,206,
            205,413,445,445,445,425,576,425,576,576,
            425,576,425,16,425,362,611,332,275,275,
            280,280,280,280,280,280,278,278,288,282,
            282,291,290,200,200,293,292,100,133,100,
            63,70,58,608,233,485,215,261,509,455,
            409,260,574,98,576,390,387,390,98,390,
            576,611,20,583,331,555,306,306,390,445,
            445,542,445,445,306,200,611,200,438,202,
            611,611,133,80,70,58,485,233,214,211,
            261,61,362,405,457,72,260,259,261,578,
            102,100,236,261,329,306,306,345,611,393,
            611,611,542,200,395,542,440,445,80,58,
            58,611,611,233,215,452,314,313,67,457,
            261,405,404,260,100,578,102,236,236,179,
            555,306,261,445,261,261,542,611,542,305,
            317,440,440,67,320,447,238,154,58,485,
            233,233,261,509,455,61,72,261,242,261,
            102,133,437,102,236,238,398,238,306,555,
            542,611,542,542,440,317,317,440,82,7,
            403,6,133,78,323,136,390,611,200,309,
            485,58,457,405,102,194,238,133,611,390,
            243,306,261,330,317,447,306,627,574,11,
            82,325,390,611,58,261,405,242,133,305,
            611,301,194,302,133,261,243,306,542,391,
            261,611,233,391,194,611,302,302,542,261,
            261,233,302,542
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            99,0,77,27,99,49,31,3,48,0,
            48,68,77,50,99,70,85,14,15,35,
            28,36,34,33,32,11,9,10,71,72,
            63,64,73,74,75,76,80,81,82,83,
            84,86,87,69,88,89,90,91,92,93,
            94,95,96,97,78,79,27,24,26,25,
            49,1,3,31,2,30,4,8,7,6,
            0,3,49,31,1,24,0,3,50,30,
            70,14,15,11,6,9,10,21,22,16,
            23,12,2,17,18,19,13,1,5,20,
            0,32,51,24,52,65,33,53,34,54,
            55,35,26,56,57,28,66,36,67,58,
            59,25,60,61,62,1,5,12,7,8,
            4,29,3,50,0,69,14,15,11,6,
            9,10,21,22,16,23,12,2,17,18,
            19,13,20,1,5,30,70,0,16,17,
            18,19,13,1,5,2,14,15,11,6,
            9,10,21,22,12,23,29,0,32,24,
            33,34,35,26,28,36,25,3,30,49,
            31,27,20,6,1,2,4,8,7,48,
            0,2,25,0,2,3,49,31,30,0,
            24,26,25,28,14,15,11,6,9,10,
            21,22,16,23,12,2,1,5,17,18,
            19,13,77,3,0,1,5,3,50,49,
            0,49,16,17,18,19,13,5,14,15,
            11,6,9,10,21,22,12,23,2,1,
            31,3,0,69,88,89,90,91,92,94,
            93,95,96,97,6,71,72,9,10,64,
            63,73,74,75,76,78,79,80,81,11,
            82,83,84,68,77,31,50,99,86,87,
            48,4,8,7,49,27,3,0,69,30,
            70,0,2,48,31,30,4,8,7,3,
            49,27,69,0,77,3,68,0,31,98,
            50,39,41,20,45,47,42,37,43,44,
            40,38,46,29,3,27,2,17,18,19,
            13,14,15,11,6,9,10,21,22,16,
            23,12,65,66,67,59,51,56,54,55,
            53,52,57,58,60,61,62,36,33,28,
            32,35,24,26,25,34,4,8,7,5,
            1,0,37,0,48,68,0,3,49,50,
            69,0,48,2,3,31,49,0,31,3,
            2,0,59,51,56,54,55,53,52,57,
            58,60,61,62,30,49,31,36,33,28,
            32,35,24,26,25,34,48,27,3,6,
            1,7,8,4,2,0,3,48,31,13,
            0,6,2,30,31,3,32,51,52,65,
            33,53,34,54,55,35,56,57,28,66,
            36,67,58,59,60,61,62,1,5,12,
            7,8,4,68,24,26,25,0,16,17,
            18,19,13,1,5,2,14,15,11,6,
            9,10,21,22,12,23,48,0,6,32,
            51,24,52,65,33,53,34,54,55,35,
            26,56,57,28,66,36,67,58,59,25,
            60,61,62,1,5,12,68,4,8,7,
            0,39,41,20,45,47,42,37,43,44,
            40,38,46,29,16,17,18,19,1,5,
            2,14,15,11,6,9,10,21,22,12,
            23,27,3,13,0,1,5,20,4,8,
            7,0,32,51,52,65,33,53,34,54,
            55,35,56,57,28,66,36,67,58,59,
            60,61,62,7,8,4,20,24,26,25,
            2,17,18,19,13,5,14,15,11,9,
            10,21,22,16,23,12,1,6,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            49,22,41,22,41,41,41,41,41,41,
            41,41,41,41,41,22,155,22,22,22,
            22,22,22,22,22,22,22,22,41,155,
            12,12,43,157,69,69,69,108,1,23,
            41,41,41,41,41,41,41,41,41,41,
            41,41,41,41,41,41,41,41,117,41,
            41,41,41,41,41,41,41,41,41,41,
            41,41,69,69,58,151,130,56,107,31,
            31,79,22,22,22,80,90,80,90,90,
            80,90,80,22,80,73,41,94,22,22,
            22,22,22,22,22,22,22,22,22,22,
            22,22,22,22,22,22,22,152,126,22,
            133,22,140,60,58,33,57,69,128,46,
            69,26,22,8,140,8,140,8,8,8,
            140,41,22,155,100,147,149,149,8,22,
            22,142,22,22,149,22,63,22,148,52,
            41,41,24,126,22,90,33,58,57,54,
            69,122,14,22,104,29,68,22,69,90,
            126,22,126,69,22,149,149,160,157,22,
            157,157,142,22,22,142,112,22,39,90,
            126,41,41,58,57,121,31,31,130,104,
            69,69,22,69,22,140,165,126,8,152,
            162,149,69,22,69,69,142,41,142,149,
            90,137,124,130,22,92,10,35,126,33,
            58,58,69,128,46,86,29,69,41,69,
            126,24,148,82,8,10,22,22,149,162,
            142,157,142,142,112,140,90,88,40,69,
            22,22,24,38,22,40,8,41,22,66,
            33,54,169,69,165,112,10,24,41,8,
            162,149,69,22,140,92,149,22,92,71,
            40,58,8,41,54,69,69,41,24,149,
            41,22,137,90,24,69,162,149,142,22,
            69,41,58,22,112,41,90,140,142,69,
            69,58,140,142
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            98,113,96,95,82,94,93,1,0,76,
            0,90,0,98,113,97,96,95,82,94,
            93,0,7,56,0,133,24,0,109,0,
            49,0,72,0,1,137,0,107,7,59,
            5,0,7,116,0,24,7,0,7,114,
            0,134,0,31,0,7,5,34,0,5,
            7,0,5,136,0,130,0,111,24,0,
            126,0,82,78,79,80,81,89,69,51,
            0,7,60,84,0,63,62,45,43,28,
            0,88,0,7,33,1,35,117,0,35,
            1,56,92,7,33,0,24,62,63,7,
            0,7,45,43,28,0,7,29,115,0,
            24,63,62,43,45,7,0,7,33,28,
            67,0,63,62,28,0,43,45,7,13,
            0,1,35,7,36,0,29,7,26,0,
            5,59,57,0,60,30,7,29,0,33,
            77,7,65,0,102,7,60,0,123,7,
            33,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            87,2,89,99,88,9,97,98,10,11,
            8,95,86,6,7,70,83,84,85,3,
            12,13,96,50,78,66,94,71,100,1,
            92,46,57,62,65,74,79,47,48,51,
            52,53,59,60,61,67,73,29,42,93,
            49,54,58,63,64,68,69,76,77,80,
            81,82,16,17,56,72,75,30,31,4,
            14,15,18,19,20,21,91,43,44,22,
            23,24,25,26,5,27,28,32,33,34,
            35,36,37,38,39,40,41,55,101,90
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            107,0,0,0,109,113,0,114,115,116,
            117,118,183,0,0,0,119,120,121,122,
            123,124,0,104,0,106,125,184,108,130,
            142,0,134,103,126,129,0,0,0,0,
            0,162,164,0,165,0,0,0,166,0,
            141,0,0,152,0,105,112,128,0,156,
            175,176,177,0,0,151,163,172,144,0,
            167,170,171,174,111,0,133,145,146,147,
            148,153,0,155,159,161,0,188,191,110,
            127,132,136,137,138,139,140,143,149,150,
            0,154,158,0,160,169,179,0,185,0,
            187,0,190,102,0,0,131,135,0,0,
            157,0,168,173,178,0,180,181,0,182,
            0,0,186,0,0,189,192,0,0,0,
            0,0,0,0,0,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,236,315,198,295,103,129,135,264,77,
            344,366,323,1,86,119,145,163,63,244,
            305,35,59,91,141,215,280,386,409,413,
            340,362,375,393,375,329,15,27,56,8,
            8,95,98,150,173,98,225,230,233,292,
            417,50,71,111,219,284,390,400,400,8,
            111,254,188,353,188,254,20,20,41,211,
            41,41,41,41,41,290,384,20,20,45,
            124,153,124,153,153
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            186,186,302,186,302,109,6,6,186,83,
            350,372,310,6,39,109,6,39,68,249,
            310,39,39,39,6,213,213,186,39,6,
            302,302,302,397,379,333,18,18,39,6,
            6,39,101,6,39,176,228,228,228,213,
            39,53,74,126,222,287,53,403,406,11,
            114,249,205,356,191,257,25,33,43,213,
            270,272,274,276,278,213,213,22,30,47,
            126,160,114,155,168
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            80,78,40,80,40,67,49,49,78,57,
            40,39,40,138,64,67,49,48,14,78,
            40,89,108,64,49,84,77,30,5,5,
            40,39,39,23,39,40,103,100,3,130,
            129,62,74,49,45,54,79,79,79,41,
            3,37,107,67,84,77,37,8,5,138,
            67,78,80,40,80,78,103,100,113,84,
            97,96,95,94,93,77,38,103,100,136,
            67,48,67,46,48
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            50,50,31,50,31,24,77,77,50,50,
            31,98,27,77,31,24,77,31,31,20,
            27,31,31,31,77,27,27,50,31,77,
            31,31,31,48,31,27,7,7,31,77,
            77,31,2,77,31,1,1,1,1,27,
            31,48,69,6,1,1,48,31,31,68,
            6,20,20,37,1,1,1,1,12,27,
            1,65,66,66,59,27,27,1,1,68,
            6,2,6,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            42,42,104,42,104,84,90,90,42,33,
            104,104,104,6,94,84,90,15,46,42,
            104,42,12,94,90,8,29,101,118,118,
            104,104,104,154,104,104,1,24,118,4,
            6,94,96,90,15,17,42,42,42,104,
            118,104,188,84,8,29,104,125,118,6,
            84,42,42,104,42,42,1,24,43,8,
            43,43,43,43,43,29,104,1,24,27,
            84,15,84,15,15
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            158,68,158,30,0,103,0,158,30,0,
            30,128,103,0,185,128,0,184,0,128,
            0,159,184,0,159,0,154,128,0,152,
            184,0,152,0,175,2,12,0,104,0,
            198,0,191,0,158,0,30,128,0,236,
            39,0,29,129,0,130,2,0,232,2,
            209,0,231,2,2,7,0,104,104,0,
            227,107,0,31,151,0,176,225,107,20,
            159,0,105,0,0,171,107,2,162,0,
            171,107,2,0,174,2,0,167,107,0,
            175,0,107,150,6,150,167,0,170,0,
            150,167,0,9,0,0,170,0,107,150,
            6,150,0,150,0,9,0,0,127,28,
            206,107,30,0,127,206,107,28,30,0,
            127,28,30,0,127,206,107,30,0,127,
            30,0,145,0,2,0,168,104,0,2,
            104,0,171,107,2,145,0,2,0,167,
            104,0,154,2,0,162,0,176,204,107,
            20,101,222,65,0,105,0,222,65,0,
            107,3,0,0,0,105,0,176,204,107,
            20,222,65,0,3,0,0,0,105,0,
            160,0,106,0,221,107,160,0,107,160,
            0,157,106,0,183,65,0,107,0,183,
            67,0,183,66,0,201,107,20,220,101,
            219,182,0,220,101,219,182,0,3,0,
            0,105,0,219,182,0,107,0,3,0,
            0,105,0,201,107,20,219,182,0,148,
            0,147,0,146,0,145,0,144,0,218,
            107,133,0,107,133,0,135,106,0,133,
            0,129,46,0,165,126,165,177,2,43,
            0,104,129,0,165,177,2,43,0,106,
            0,104,129,0,165,126,165,126,165,2,
            43,0,165,126,165,2,43,0,165,2,
            43,0,106,0,106,0,104,129,0,129,
            2,37,0,129,2,37,136,42,0,104,
            106,0,136,42,0,79,2,108,104,106,
            0,129,2,47,0,136,124,129,2,45,
            0,55,129,0,129,2,45,0,104,129,
            55,129,0,135,0,217,107,20,0,158,
            39,0,129,87,122,0,29,125,0,175,
            2,0,104,114,0,104,112,0,216,2,
            105,0,129,30,105,0,129,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            2004,1867,0,925,0,569,0,2860,1528,2858,
            0,489,538,0,2120,1698,2004,2054,1867,2570,
            2071,1929,1844,1982,1817,0,900,0,2730,1766,
            1749,0,749,682,582,654,716,554,651,2524,
            0,1347,455,384,0,2783,2729,2886,2004,2881,
            2054,2266,1867,2120,2861,1999,1982,1698,2071,2857,
            1063,2840,1817,2836,455,2765,1001,966,608,526,
            2060,1347,2507,2502,2679,2458,2758,2223,2453,2179,
            2448,1702,384,2276,2754,2725,1934,2077,0,1012,
            916,774,546,1698,2060,1929,1844,1776,2352,0,
            2727,2675,2673,2399,2382,2355,2338,2294,2277,2234,
            2217,2190,2173,2146,1766,1749,0,2842,2829,2822,
            2808,2491,2154,1418,2603,2594,2524,511,440,725,
            625,928,490,417,2563,2540,2441,1955,1922,1810,
            1719,1403,2718,2709,2683,2584,941,2666,2657,2648,
            2639,2630,2037,1674,1647,1623,986,1596,749,1572,
            1545,682,654,816,1521,1493,1465,951,1437,1364,
            900,872,777,1332,1304,1276,1248,1220,1192,1164,
            1136,1108,1080,1048,384,1020,844,582,554,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,214,107,191,12,23,16,22,21,10,
            9,6,11,15,14,105,2,110,109,112,
            111,118,117,120,119,122,121,106,49,2,
            85,70,2,30,130,175,129,160,107,20,
            10,9,72,71,6,79,78,76,75,74,
            73,63,64,11,81,80,83,82,87,86,
            84,97,96,95,93,94,92,91,90,89,
            88,69,175,216,129,124,107,30,2,163,
            162,193,7,8,4,194,182,195,67,66,
            196,65,197,101,213,198,12,107,109,109,
            111,111,111,111,111,111,110,110,117,112,
            112,119,118,215,129,121,120,124,20,159,
            167,150,128,28,127,107,6,174,107,2,
            2,2,2,219,128,183,128,183,222,183,
            128,12,106,2,217,46,38,40,44,43,
            37,42,47,45,135,41,39,101,133,4,
            48,48,107,20,150,6,107,127,206,172,
            171,133,107,173,107,2,233,1,13,101,
            20,101,20,175,3,129,101,2,2,136,
            2,2,48,236,158,48,107,234,107,6,
            150,206,28,127,6,2,143,145,107,49,
            171,231,209,2,220,128,107,20,107,124,
            177,165,129,37,129,129,48,68,48,218,
            154,128,2,107,200,2,225,107,150,107,
            127,127,154,107,2,167,49,124,2,1,
            20,201,160,202,107,204,101,205,165,126,
            124,2,124,124,49,128,154,167,69,235,
            13,188,176,49,227,237,70,30,101,228,
            107,172,107,232,107,107,204,176,69,49,
            126,165,129,136,128,48,124,2,49,156,
            69,158,70,30,172,171,223,49,201,221,
            48,154,128,185,176,165,126,124,98,6,
            1,68,158,49,49,48,185,128,124,165,
            1,158,128,124
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            ">?",
            "<?",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "no_sizeof_type_name_start",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "identifier_list",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "initializer_seq",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "extended_asm_param",
            "case_range_expression",
            "typeof_declaration_specifiers",
            "typeof_type_specifier",
            "field_name_designator"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 84,
           SCOPE_SIZE        = 85,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 334,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3503,
           MAX_LA            = 2147483647,
           NUM_RULES         = 383,
           NUM_NONTERMINALS  = 147,
           NUM_SYMBOLS       = 247,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 715,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 99,
           EOLT_SYMBOL       = 99,
           ACCEPT_ACTION     = 2984,
           ERROR_ACTION      = 3120;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
