/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCSizeofExpressionParserprs implements lpg.lpgjavaruntime.ParseTable, GCCSizeofExpressionParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,4,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,6,8,
            0,0,1,1,3,3,3,0,1,0,
            1,2,4,2,1,1,1,3,1,1,
            2,3,7,8,0,1,0,1,3,1,
            3,1,1,1,1,1,1,3,1,1,
            1,1,1,3,1,2,2,1,5,3,
            1,3,5,1,3,1,3,2,4,3,
            5,4,6,6,3,5,1,3,4,5,
            6,0,1,2,1,3,1,1,3,2,
            1,1,1,1,2,1,2,3,1,1,
            1,3,1,2,2,2,3,4,5,1,
            1,7,3,0,0,1,1,3,3,4,
            1,1,2,3,2,3,2,1,0,1,
            2,1,1,1,1,1,2,4,3,6,
            2,4,1,1,1,1,2,6,3,1,
            3,1,4,0,1,1,1,3,1,0,
            4,3,1,2,1,3,4,4,4,6,
            1,0,1,3,1,3,0,1,4,5,
            2,2,3,3,5,3,4,3,1,2,
            2,2,4,2,1,1,2,2,3,2,
            2,3,1,1,1,1,1,1,1,2,
            5,3,1,1,-39,0,0,0,0,0,
            0,-163,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-134,0,
            -2,0,-237,-31,0,0,0,-54,0,0,
            0,0,0,0,-119,0,0,0,0,0,
            -4,0,-291,0,0,0,0,0,-75,0,
            -60,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-173,0,0,0,0,
            0,0,0,0,0,0,0,-164,0,0,
            0,0,0,0,0,0,-40,0,0,0,
            0,0,0,0,-16,-132,0,0,0,-247,
            -55,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-136,0,0,0,0,0,
            0,-61,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-123,-18,0,0,
            0,0,0,0,0,0,0,0,-176,0,
            0,0,0,-35,0,-19,-80,-126,0,0,
            0,0,0,0,-199,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-238,
            0,0,0,0,0,0,0,0,0,0,
            -147,0,-275,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-33,-135,0,
            -181,0,-148,0,0,-125,-36,0,0,0,
            0,0,0,0,0,-57,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-20,0,0,0,0,
            -21,-118,-155,0,-270,0,0,0,0,0,
            0,0,0,0,0,0,0,-138,0,0,
            -22,0,0,0,0,0,0,0,0,0,
            -257,0,-277,0,0,0,0,0,0,0,
            0,0,0,0,0,-37,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-23,0,-130,-1,-220,-32,0,0,
            0,0,0,0,-160,-58,0,0,0,0,
            0,0,-170,0,0,0,0,0,0,0,
            0,0,0,0,0,-139,0,-24,0,-302,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-25,0,0,-26,0,0,0,0,
            0,0,0,0,-81,0,0,-78,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -73,-140,0,-27,0,0,0,0,0,0,
            0,-149,0,-183,0,-159,0,0,0,-283,
            0,0,0,-253,0,0,-249,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -28,0,-274,0,0,0,0,0,0,0,
            0,0,-186,0,-3,0,0,0,0,0,
            0,-168,0,0,0,0,0,-289,0,-83,
            -187,0,0,0,0,0,0,0,0,0,
            -222,0,-124,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-297,0,0,
            0,0,0,0,0,0,0,-84,-230,0,
            -157,0,0,0,0,0,0,-85,0,0,
            0,0,0,0,-219,0,-207,0,0,0,
            0,0,0,0,0,-281,0,-94,-56,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-41,0,0,0,0,0,0,0,0,
            0,-169,0,0,0,0,0,0,0,0,
            0,0,0,0,-99,0,-137,-100,0,0,
            0,0,0,0,0,0,-201,-210,0,0,
            0,0,0,0,0,0,-309,0,0,0,
            0,0,0,-204,0,0,0,0,0,0,
            0,-141,-240,0,0,0,0,0,0,0,
            0,-177,-208,0,0,0,0,0,0,0,
            -29,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-101,0,-102,0,-62,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-282,-216,-300,0,0,0,0,0,
            0,0,-241,-306,0,0,0,0,0,0,
            -63,0,0,0,0,0,0,-242,0,0,
            0,0,0,0,0,-103,0,0,0,0,
            0,0,0,0,0,0,0,0,-64,0,
            0,0,0,0,0,-104,0,0,0,0,
            0,0,0,-260,-310,0,0,0,0,0,
            0,0,-278,0,0,0,-65,0,0,0,
            0,0,0,-218,0,0,0,0,0,0,
            0,-288,0,0,0,0,0,0,0,0,
            -304,0,-293,0,-66,0,0,0,0,0,
            0,-239,0,0,0,0,0,-316,0,-298,
            0,0,0,0,0,0,0,0,0,-105,
            -311,0,-67,0,0,0,0,0,0,-252,
            0,0,0,0,0,0,0,-106,-319,0,
            0,0,0,0,0,0,0,-107,-108,0,
            -68,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-109,-110,0,0,0,
            0,0,0,0,-111,-301,-112,0,-69,0,
            0,0,0,0,0,-303,0,0,0,0,
            0,-113,-114,-115,-116,0,0,0,0,0,
            0,0,-117,-120,-122,0,-70,0,0,0,
            0,0,0,-324,0,0,0,0,0,0,
            -133,-256,0,0,0,0,0,0,0,0,
            -143,-150,-151,0,-71,0,0,0,0,0,
            0,-333,0,0,0,0,0,0,-153,-154,
            -156,0,0,0,0,0,0,0,-158,-165,
            -174,0,-72,0,0,0,0,0,0,-178,
            0,0,0,0,0,0,-182,-96,0,0,
            0,0,0,0,0,0,-74,-185,-190,0,
            0,0,0,0,-161,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-194,-195,
            -198,0,-213,-215,-224,0,0,-235,0,0,
            0,-258,0,-46,0,0,0,0,0,0,
            -128,0,0,0,0,-259,0,0,-5,0,
            0,0,0,0,0,0,0,0,0,0,
            -272,-273,-276,-280,0,-295,0,-162,0,0,
            0,0,0,0,-299,0,0,0,0,0,
            -313,-321,-325,0,0,0,0,0,0,0,
            0,0,0,0,0,-202,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-203,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-228,0,0,0,0,0,0,-255,0,
            0,0,0,0,-131,0,-171,0,0,0,
            0,0,0,0,0,-279,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-290,0,0,0,0,0,0,0,
            0,0,0,0,0,-179,-184,-211,0,0,
            0,0,0,0,0,0,-305,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-312,0,0,0,0,0,0,
            0,0,0,0,0,0,-212,-214,-223,-225,
            0,0,0,0,0,0,0,-323,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-327,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-246,0,
            0,0,-82,0,0,0,0,-226,0,0,
            0,0,0,0,0,0,0,0,0,-47,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-236,0,0,0,-243,
            0,0,0,0,0,0,0,0,0,-98,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-145,0,0,-248,
            -245,0,0,0,0,0,-79,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -48,0,0,0,0,0,0,-197,0,0,
            0,0,0,0,0,0,0,-34,-254,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-172,0,0,0,-189,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-287,0,-175,
            0,0,-59,0,0,-250,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-251,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-271,
            0,0,-49,0,0,0,0,0,0,-206,
            0,0,0,0,-129,0,0,0,0,0,
            0,0,0,0,0,-285,0,0,0,0,
            0,0,0,0,0,-50,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-266,0,0,-294,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-267,
            0,0,0,0,-326,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-167,0,-307,0,-308,0,-8,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-314,-317,-322,0,0,0,
            -121,0,0,0,0,0,0,0,0,0,
            0,-232,0,0,0,0,0,-77,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-331,0,-332,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -269,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-152,0,0,0,
            0,0,0,0,-6,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-193,0,0,0,0,0,-87,
            0,0,0,0,0,0,0,0,0,0,
            -196,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-227,0,0,
            0,0,0,-89,0,0,0,0,0,0,
            0,0,0,0,-229,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-296,0,0,0,
            0,0,0,0,0,0,-244,-262,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-264,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-221,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-265,0,
            0,-146,0,0,0,0,0,0,0,0,
            0,0,-38,0,0,-320,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-330,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-335,
            0,0,-191,-192,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-51,0,0,0,0,0,0,-86,0,
            0,0,0,-88,0,0,0,0,-91,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-7,0,0,0,0,0,0,0,0,
            0,0,-93,0,0,0,0,-95,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-76,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -52,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-53,0,0,0,0,0,0,
            -233,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-42,0,0,0,0,0,
            0,0,0,0,-127,0,0,0,0,0,
            0,0,0,-205,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -9,0,0,0,0,0,0,0,0,-10,
            0,0,0,0,0,0,0,0,-11,0,
            0,0,0,0,0,0,0,-12,0,0,
            0,0,0,0,0,0,-13,0,0,0,
            0,0,0,-17,0,-30,0,0,0,-92,
            0,0,0,-43,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-44,
            0,0,0,0,0,0,0,0,-45,0,
            0,0,0,0,0,-209,0,-144,0,-329,
            -188,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-234,0,0,0,-90,0,
            0,0,0,0,0,-166,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-334,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-14,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-15,0,0,0,0,0,0,-97,
            0,0,0,0,0,0,-180,0,0,0,
            -200,0,-142,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-231,-217,-284,
            -286,-268,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-315,0,0,0,0,-328,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-261,0,-292,0,0,0,
            0,0,-318,0,0,0,0,0,0,0,
            0,-263,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            114,7,115,34,34,24,24,56,56,26,
            26,1,1,2,2,2,2,3,3,3,
            4,5,5,5,5,5,5,5,5,76,
            76,90,6,6,6,6,6,6,6,6,
            6,6,8,8,9,9,9,9,10,10,
            10,11,11,11,12,12,12,12,12,17,
            17,17,18,18,19,19,20,20,21,21,
            22,22,23,23,27,27,27,27,27,27,
            27,27,27,27,27,27,35,29,25,116,
            116,91,91,58,36,36,36,36,36,36,
            36,37,37,37,30,30,117,117,92,92,
            38,38,39,39,39,65,65,40,40,40,
            40,41,41,41,41,41,77,77,33,33,
            33,33,33,51,51,51,98,98,93,93,
            93,93,94,94,94,95,95,95,96,96,
            96,97,97,97,118,118,99,99,100,52,
            55,55,55,55,55,69,70,70,70,70,
            70,70,70,70,70,70,70,70,81,78,
            78,119,120,82,82,79,79,79,83,101,
            101,102,102,84,84,84,60,121,121,103,
            85,85,85,80,80,122,104,104,105,105,
            86,86,31,32,32,32,53,54,54,42,
            42,42,42,45,45,47,43,43,44,48,
            48,140,140,46,141,141,123,123,49,49,
            49,49,49,49,49,49,49,106,67,67,
            67,67,50,72,72,71,71,71,73,73,
            68,68,124,124,75,75,74,74,74,61,
            61,61,62,63,63,63,64,64,64,64,
            66,66,57,57,59,126,125,125,125,125,
            107,127,128,128,129,129,130,130,142,142,
            143,143,144,144,144,144,146,146,145,145,
            145,147,147,13,13,13,28,28,14,14,
            131,131,108,108,108,109,109,132,132,110,
            110,15,15,133,133,111,111,111,111,16,
            87,134,134,135,135,112,112,112,88,88,
            88,6,6,12,12,23,3,37,136,113,
            113,113,89,89,33,77,51,100,100,100,
            103,103,103,122,119,120,50,83,129,129,
            137,138,107,114,114,205,928,17,21,18,
            485,831,926,44,546,528,651,646,366,313,
            314,315,713,671,763,748,794,766,74,1287,
            2837,133,91,949,242,31,134,212,1526,20,
            17,21,18,485,42,49,44,546,528,651,
            646,50,392,242,1402,1236,136,133,135,804,
            159,1526,20,17,21,18,485,42,283,44,
            546,528,651,646,138,165,1201,178,713,671,
            763,748,1265,142,145,148,151,2180,49,366,
            313,314,315,22,359,555,431,714,1703,2449,
            2454,2459,2503,1348,1750,1721,1130,134,212,833,
            1359,1526,20,17,21,18,485,42,2508,44,
            546,528,651,1237,25,242,186,136,133,135,
            332,159,1526,20,17,21,18,485,42,209,
            44,546,528,651,646,138,165,967,225,713,
            671,763,1273,104,142,145,148,151,2180,1359,
            317,313,314,315,569,359,433,757,315,1703,
            2449,2454,2459,2503,1348,1430,20,17,21,18,
            485,831,570,44,546,528,651,646,356,2508,
            1652,1434,713,671,763,748,794,766,74,253,
            212,1434,280,1376,20,17,21,18,485,831,
            570,44,546,528,651,646,274,333,321,1393,
            713,671,763,748,794,766,74,123,299,1001,
            280,49,281,1434,1274,845,804,569,2859,1012,
            733,286,317,313,314,315,1526,20,17,21,
            18,485,42,89,44,546,528,651,646,122,
            281,2525,1274,713,671,1247,253,320,1393,288,
            240,333,1140,1434,952,1454,20,17,21,18,
            485,831,287,44,546,528,651,646,242,185,
            1637,677,713,671,763,748,794,766,74,111,
            413,1129,280,1478,20,17,21,18,485,831,
            289,44,546,528,651,646,569,1433,926,292,
            713,671,763,748,794,766,74,683,379,28,
            280,1274,281,200,1274,631,393,1485,242,31,
            19,157,1870,845,1357,783,1526,20,17,21,
            18,485,42,1112,44,546,528,651,646,277,
            281,87,1274,713,1262,383,1743,1347,593,382,
            1502,20,17,21,18,485,831,858,44,546,
            528,651,646,547,254,212,31,713,671,763,
            748,794,766,74,28,1803,1274,280,1328,20,
            17,21,18,485,831,548,44,546,528,651,
            646,569,242,187,711,713,671,763,748,794,
            766,74,242,861,49,616,1061,281,24,1274,
            1660,915,238,1818,926,652,290,1622,20,17,
            21,18,485,831,275,44,546,528,651,646,
            411,1665,126,926,713,671,763,748,794,766,
            74,254,212,1434,329,1526,20,17,21,18,
            485,831,804,44,546,528,651,646,926,1391,
            878,1434,713,671,763,748,794,766,74,125,
            179,1434,91,1598,20,17,21,18,485,831,
            2032,44,546,528,651,646,242,121,966,1246,
            713,671,763,748,794,766,74,2905,1185,1602,
            852,1526,20,17,21,18,485,42,1186,44,
            546,528,651,646,203,431,1402,1408,713,671,
            763,748,794,766,93,127,1109,327,1215,1526,
            20,17,21,18,485,42,431,44,546,528,
            651,1245,1526,20,17,21,18,485,42,1946,
            44,965,1352,20,17,21,18,485,831,1390,
            44,546,528,651,646,754,227,1028,1010,713,
            671,763,748,794,766,74,1432,1270,168,994,
            317,313,314,315,1003,456,239,1622,20,17,
            21,18,485,831,804,44,546,528,651,646,
            344,208,1026,315,713,671,763,748,794,766,
            74,1845,1130,1824,329,317,313,314,315,681,
            1416,1526,20,17,21,18,485,831,241,44,
            546,528,651,646,253,212,331,1389,713,671,
            763,748,794,766,74,430,259,589,92,1526,
            20,17,21,18,485,831,293,44,546,528,
            651,646,226,315,1203,1570,713,671,763,748,
            794,766,74,804,1771,810,85,317,313,314,
            315,1526,20,17,21,18,485,831,804,44,
            546,528,651,646,253,212,948,328,713,671,
            763,748,794,766,74,254,212,243,84,1526,
            20,17,21,18,485,831,1213,44,546,528,
            651,646,244,334,1434,926,713,671,763,748,
            794,766,74,242,295,1074,83,1526,20,17,
            21,18,485,831,49,44,546,528,651,646,
            2907,1292,1129,346,713,671,763,748,794,766,
            74,242,297,1434,82,1526,20,17,21,18,
            485,831,1647,44,546,528,651,646,926,1063,
            1434,180,713,671,763,748,794,766,74,2913,
            1773,1789,81,1526,20,17,21,18,485,831,
            49,44,546,528,651,646,340,2861,1781,1434,
            713,671,763,748,794,766,74,193,268,284,
            80,1526,20,17,21,18,485,831,1178,44,
            546,528,651,646,204,117,254,350,713,671,
            763,748,794,766,74,549,167,715,79,1526,
            20,17,21,18,485,831,1332,44,546,528,
            651,646,779,849,852,736,713,671,763,748,
            794,766,74,1052,1157,376,78,1526,20,17,
            21,18,485,831,804,44,546,528,651,646,
            294,427,431,1402,713,671,763,748,794,766,
            74,1278,1425,1654,77,1526,20,17,21,18,
            485,831,804,44,546,528,651,646,296,1693,
            1704,853,713,671,763,748,794,766,74,875,
            413,541,76,1526,20,17,21,18,485,831,
            1745,44,546,528,651,646,381,1244,1201,178,
            713,671,763,748,794,766,74,569,69,619,
            75,366,313,314,315,1526,20,17,21,18,
            485,831,282,44,546,528,651,646,208,134,
            212,23,713,671,763,748,794,766,74,879,
            201,1807,355,1825,1384,1829,1152,1416,255,137,
            133,135,1509,159,1526,20,17,21,18,485,
            42,569,44,546,528,1045,1189,139,165,1550,
            20,17,21,18,485,352,143,146,149,152,
            2180,1839,1433,1557,1065,272,1274,360,1526,20,
            17,21,18,485,831,378,44,546,528,651,
            646,1481,391,550,3121,713,671,763,748,794,
            766,74,3121,3121,3121,73,1526,20,17,21,
            18,485,831,3121,44,546,528,651,646,3121,
            3121,3121,3121,713,671,763,748,794,766,74,
            3121,3121,3121,1073,1526,20,17,21,18,485,
            831,3121,44,546,528,651,646,3121,3121,3121,
            3121,713,671,763,748,794,766,74,3121,3121,
            3121,1088,1526,20,17,21,18,485,42,777,
            44,546,528,651,646,1181,456,569,3121,713,
            671,763,748,794,766,93,1526,20,17,21,
            18,485,42,3121,44,546,528,651,646,319,
            3121,278,196,713,671,763,748,794,766,93,
            3121,3121,3121,1526,20,17,21,18,485,42,
            358,44,546,528,651,646,569,569,569,1829,
            713,671,763,748,794,766,93,1526,20,17,
            21,18,485,42,1256,44,546,528,651,646,
            339,717,279,192,713,671,763,748,794,766,
            93,3121,3121,3121,1526,20,17,21,18,485,
            42,211,44,546,528,651,646,1769,542,569,
            569,713,671,763,748,794,766,93,1526,20,
            17,21,18,485,42,1284,44,546,528,651,
            646,1770,336,2278,2295,713,671,763,748,794,
            766,93,3121,3121,3121,1526,20,17,21,18,
            485,42,201,44,546,528,651,646,3121,3121,
            3121,3121,713,671,763,748,794,766,93,244,
            3121,3121,3121,1265,3121,3121,1312,3121,569,3121,
            3121,3121,316,313,314,315,366,313,314,315,
            1526,20,17,21,18,485,42,527,44,546,
            528,1047,2339,202,134,212,966,3121,3121,3121,
            569,218,917,220,1013,222,223,228,273,1330,
            137,1329,3121,3121,141,133,135,385,159,3121,
            268,775,547,271,224,3121,3121,1,1329,3121,
            569,631,140,165,385,86,110,786,2860,3121,
            95,3121,3121,806,1935,653,108,94,96,97,
            98,99,86,110,318,230,3121,95,3121,3121,
            806,276,653,108,94,96,97,98,99,3121,
            3121,1526,20,17,21,18,485,42,869,44,
            546,528,1096,105,1432,2755,273,109,49,1061,
            3121,316,313,314,315,845,1868,365,266,775,
            547,271,106,3121,109,289,2072,3121,343,49,
            3121,1411,2726,87,365,194,845,439,3121,107,
            217,917,220,1013,222,223,228,1767,705,3121,
            32,1920,2858,400,87,2755,569,456,1639,3121,
            845,316,313,314,315,3121,3121,217,917,220,
            1013,222,223,228,273,3121,2055,569,87,262,
            338,3121,1264,1845,3121,3121,266,775,547,271,
            217,917,220,1013,222,223,228,154,1398,263,
            685,337,1451,1526,20,17,21,18,485,42,
            387,44,546,528,1116,591,899,2277,258,3121,
            3121,1588,456,1331,1180,3121,1779,3121,316,313,
            314,315,3121,2882,276,3121,1526,20,17,21,
            18,485,42,527,44,546,528,1190,1845,260,
            323,197,217,917,220,1013,222,223,228,273,
            3121,3121,3121,869,1740,1275,569,3121,1263,1191,
            2755,266,775,547,271,3121,316,313,314,315,
            1694,3121,2061,258,1411,792,1537,3121,1331,3121,
            1209,2072,2755,317,313,314,315,3121,316,313,
            314,315,3121,3121,3121,217,917,220,1013,222,
            223,228,315,2055,569,3121,1783,2858,1526,20,
            17,21,18,485,42,3121,40,217,917,220,
            1013,222,223,228,3121,705,569,569,229,1451,
            233,495,2755,253,212,3121,3121,3121,317,313,
            314,315,869,3121,316,313,314,315,636,2755,
            2383,349,155,1398,3121,317,313,314,315,527,
            2882,316,313,314,315,3121,3121,217,917,220,
            1013,222,223,228,733,569,527,569,198,1451,
            273,1330,3121,3121,217,917,220,1013,222,223,
            228,917,268,775,547,271,2862,3121,1275,2400,
            3121,350,3121,3121,316,313,314,315,1466,3121,
            2887,3121,3121,3121,3121,2061,3121,469,1329,527,
            3121,3121,3121,3121,845,1550,20,17,21,18,
            485,351,3121,218,917,220,1013,222,223,228,
            3121,1330,86,110,517,1329,3121,95,3121,3121,
            965,845,653,1359,94,96,97,98,99,3121,
            3121,565,1329,316,313,314,315,3121,845,86,
            110,3121,3121,3121,95,3121,3121,3121,609,653,
            103,94,96,97,98,99,86,110,681,1329,
            3121,95,3121,3121,650,845,653,101,94,96,
            97,98,99,3121,3121,729,1329,316,313,314,
            315,3121,845,86,110,3121,3121,3121,95,3121,
            3121,3121,967,653,357,94,96,97,98,99,
            86,110,3121,3121,3121,95,3121,1780,3121,3121,
            653,102,94,96,97,98,99,755,845,1329,
            317,313,314,315,456,845,3121,3121,3121,3121,
            316,313,314,315,3121,893,1329,3121,3121,409,
            3121,3121,845,86,110,527,3121,505,95,3121,
            1845,3121,3121,653,118,94,96,97,98,99,
            86,110,521,3121,3121,95,3121,1275,3121,845,
            653,114,94,96,97,98,99,3121,3121,941,
            1329,3121,1061,3121,1699,258,845,87,1537,845,
            1331,115,3121,630,3121,3121,1057,1329,3121,3121,
            2078,3121,3121,845,86,110,3121,87,124,95,
            3121,843,3121,3121,653,1436,94,96,97,98,
            99,86,110,1105,1329,3121,95,1124,3121,3121,
            845,653,113,94,96,97,98,99,3121,3121,
            1153,1329,273,49,49,3121,3121,845,86,110,
            845,845,3121,95,266,775,547,271,653,120,
            94,96,97,98,99,86,110,265,87,87,
            95,3121,1640,1708,3121,653,119,94,96,97,
            98,99,1526,20,17,21,18,485,42,1642,
            44,546,528,1208,1655,3121,3121,3121,3121,1692,
            3121,3121,366,313,314,315,3121,366,313,314,
            315,3121,366,313,314,315,3121,3121,3121,3121,
            134,212,3121,3121,3121,134,212,3121,3121,3121,
            134,212,1550,20,17,21,18,485,41,3121,
            144,133,135,1705,159,147,133,135,1742,159,
            150,133,135,3121,159,3121,366,313,314,315,
            3121,366,313,314,315,1401,20,17,21,18,
            485,42,3121,43,134,212,3121,3121,3121,134,
            212,1526,20,17,21,18,485,42,3121,44,
            546,1218,3121,3121,153,133,135,3121,159,361,
            133,135,3121,159,1526,20,17,21,18,485,
            42,185,44,546,1219,3121,3121,3121,2755,3121,
            3121,3121,28,3121,1274,1526,20,17,21,18,
            485,42,3121,44,968,295,20,17,21,18,
            485,42,3121,36,295,20,17,21,18,485,
            42,3121,36,217,917,220,1013,222,223,228,
            3121,3121,3121,3121,3121,1740,3121,3121,3121,245,
            3121,1526,20,17,21,18,485,42,246,39,
            1526,20,17,21,18,485,42,3121,38,1526,
            20,17,21,18,485,42,3121,37,1526,20,
            17,21,18,485,42,3121,36,1526,20,17,
            21,18,485,42,615,35,615,3121,3121,3121,
            999,385,3121,385,1526,20,17,21,18,485,
            42,3121,47,316,313,314,315,3121,3121,87,
            3121,87,3121,696,544,696,544,196,1002,196,
            1526,20,17,21,18,485,42,3121,46,1526,
            20,17,21,18,485,42,636,45,615,3121,
            1813,473,3121,3121,2353,385,2353,3121,385,316,
            313,314,315,317,313,314,315,3121,3121,617,
            3121,791,3121,87,527,636,87,696,544,814,
            115,196,3121,792,806,3121,1083,3121,316,313,
            314,315,316,313,314,315,1275,3121,3121,316,
            313,314,315,527,1815,3121,3121,967,2353,3121,
            3121,3121,3121,1699,527,3121,871,317,313,314,
            315,3121,746,1587,3121,1275,3121,3121,2322,1550,
            20,17,21,18,485,34,977,3121,365,3121,
            3121,3121,2121,1550,20,17,21,18,485,33,
            1574,20,17,21,18,485,1301,1085,3121,3121,
            3121,1083,668,1574,20,17,21,18,485,362,
            316,313,314,315,316,313,314,315,1224,613,
            64,989,1703,3121,3121,1064,456,456,456,527,
            3121,316,313,314,315,316,313,314,315,3121,
            3121,3121,1794,3121,3121,3121,2000,1804,3121,3121,
            2267,1172,196,1845,196,316,313,314,315,3121,
            316,313,314,315,3121,521,3121,521,3121,3121,
            2730,3121,845,521,845,2784,3121,3121,3121,1829,
            845,1829,49,3121,3121,3121,3121,3121,258,845,
            87,2034,87,1331,115,3121,115,3121,87,3121,
            3121,3121,115,191,3121,191,3121,87,3121,3121,
            3121,1986,3121,3121,3121,3121,3121,1394,3121,3121,
            814,1529,1125,1529,3121,3121,3121,3121,3121,3121,
            1163,3121,2056,3121,3121,3121,3121,3121,2105,3121,
            3121,3121,3121,2036,3121,0,608,32,0,1828,
            32,0,3129,1,0,860,128,0,898,128,
            0,908,128,0,860,129,0,898,129,0,
            908,129,0,860,130,0,898,130,0,908,
            130,0,860,184,0,898,184,0,908,184,
            0,184,188,0,860,183,0,898,183,0,
            908,183,0,183,188,0,860,131,0,898,
            131,0,908,131,0,860,132,0,898,132,
            0,908,132,0,20,178,0,860,364,0,
            898,364,0,908,364,0,1,725,0,860,
            376,0,898,376,0,908,376,0,1,860,
            0,1,898,0,1,908,0,352,362,0,
            860,252,0,898,252,0,908,252,0,8,
            10,0,1,3346,0,1,3357,0,112,2356,
            0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            0,0,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,0,0,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,0,1,65,66,67,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,49,68,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,86,87,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,68,0,65,66,67,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,0,0,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,0,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,24,25,
            26,99,28,9,10,68,32,33,34,35,
            36,0,1,0,1,2,5,4,48,6,
            7,8,0,0,0,51,52,53,54,55,
            56,57,58,59,60,61,62,0,68,65,
            66,67,0,30,2,3,9,10,6,80,
            81,9,10,0,12,0,14,15,0,1,
            2,3,9,10,0,1,2,3,0,5,
            6,3,30,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,30,31,
            0,49,50,69,0,73,74,75,76,31,
            78,79,0,80,81,63,64,49,24,25,
            26,69,70,71,72,73,74,75,76,0,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            0,77,2,3,0,0,6,0,1,9,
            10,6,12,6,14,15,0,1,2,3,
            0,1,0,1,2,63,64,5,6,0,
            30,9,10,11,12,13,14,15,16,17,
            18,19,0,21,22,23,30,31,6,49,
            50,29,73,74,75,76,0,78,79,0,
            0,1,0,63,64,5,0,11,6,69,
            70,71,72,73,74,75,76,48,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,0,1,
            2,3,0,5,6,3,4,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,63,64,0,27,2,29,4,27,
            6,7,8,71,72,37,38,39,40,41,
            42,43,44,45,46,47,0,1,2,3,
            0,5,6,3,30,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,0,1,27,3,29,0,27,0,0,
            1,31,11,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,0,5,
            6,3,31,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,49,
            0,27,0,29,4,0,6,7,8,31,
            0,37,38,39,40,41,42,43,44,45,
            46,47,0,1,0,3,4,5,0,7,
            8,73,74,75,76,13,78,79,82,0,
            0,2,3,3,20,0,24,25,26,4,
            28,29,7,8,32,33,34,35,36,0,
            1,63,64,4,5,37,7,8,68,30,
            31,31,50,51,52,53,54,55,56,57,
            58,59,60,61,62,83,0,65,66,67,
            0,1,2,3,0,5,6,3,12,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,2,27,4,29,
            0,7,8,0,0,31,3,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            2,3,48,5,6,0,0,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,48,0,0,27,0,29,4,6,
            6,7,8,50,0,37,38,39,40,41,
            42,43,44,45,46,47,0,1,0,3,
            4,5,0,7,8,0,30,2,3,13,
            12,0,1,2,84,4,82,0,7,8,
            24,25,26,0,28,29,3,25,32,33,
            34,35,36,0,1,30,31,4,5,84,
            7,8,68,0,71,72,50,51,52,53,
            54,55,56,57,58,59,60,61,62,48,
            0,65,66,67,0,1,2,3,0,5,
            6,0,0,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,1,
            2,27,4,29,0,7,8,0,0,2,
            77,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,48,5,6,48,
            48,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,2,27,
            4,29,48,7,8,0,48,0,3,37,
            38,39,40,41,42,43,44,45,46,47,
            0,1,2,3,0,5,6,0,0,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,0,0,27,4,29,
            4,7,8,7,8,50,11,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            0,3,4,5,0,7,8,49,0,1,
            0,13,4,5,4,7,8,7,8,0,
            63,64,24,25,26,6,28,29,0,0,
            32,33,34,35,36,0,1,0,0,4,
            5,4,7,8,7,8,0,0,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,0,0,65,66,67,0,1,2,3,
            0,5,6,3,0,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            71,72,0,27,0,29,4,27,4,7,
            8,7,8,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,0,5,
            6,0,48,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,0,
            1,27,3,29,83,24,25,26,30,0,
            0,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,0,5,6,20,
            31,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,20,49,70,27,
            0,29,2,3,0,0,2,2,0,37,
            38,39,40,41,42,43,44,45,46,47,
            0,1,0,0,4,5,4,7,8,7,
            8,31,0,13,0,1,2,3,4,0,
            6,7,8,0,24,25,26,4,28,0,
            7,8,32,33,34,35,36,49,24,25,
            26,27,28,0,30,31,32,33,34,35,
            36,51,52,53,54,55,56,57,58,59,
            60,61,62,20,0,65,66,67,4,0,
            0,7,8,0,0,63,64,0,1,2,
            3,4,0,6,7,8,0,1,24,25,
            26,5,28,24,25,26,32,33,34,35,
            36,24,25,26,27,28,20,30,31,32,
            33,34,35,36,0,51,52,53,54,55,
            56,57,58,59,60,61,62,0,1,2,
            3,0,5,6,3,0,9,10,11,12,
            13,14,15,16,17,18,19,0,21,22,
            23,0,1,2,3,28,5,6,0,1,
            9,10,11,12,13,14,15,16,17,18,
            19,98,21,22,23,0,1,2,3,28,
            5,6,24,0,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,68,
            0,1,2,20,77,5,6,0,77,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,50,2,0,77,0,
            1,2,0,0,5,6,3,30,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,1,2,0,1,5,6,
            27,5,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,1,2,
            0,49,5,6,0,0,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,0,1,2,20,20,5,6,0,0,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,0,1,2,48,0,
            5,6,0,0,9,10,11,12,13,14,
            15,16,17,18,19,0,21,22,23,0,
            1,2,20,0,5,6,0,48,9,10,
            11,12,13,14,15,16,17,18,19,0,
            21,22,23,0,1,2,0,69,5,6,
            11,48,9,10,11,12,13,14,15,16,
            17,18,19,0,21,22,23,0,1,2,
            0,0,5,6,3,0,9,10,11,12,
            13,14,15,16,17,18,19,0,21,22,
            23,0,1,2,0,69,5,6,27,0,
            9,10,11,12,13,14,15,16,17,18,
            19,0,21,22,23,4,0,0,7,8,
            49,0,1,0,0,2,5,0,4,0,
            3,7,8,0,0,24,25,26,0,28,
            24,25,26,32,33,34,35,36,24,25,
            26,30,28,24,25,26,32,33,34,35,
            36,0,0,0,2,4,0,4,7,8,
            7,8,0,0,0,2,4,50,4,7,
            8,7,8,0,0,24,25,26,0,28,
            0,70,2,32,33,34,35,36,24,25,
            26,0,28,69,14,15,32,33,34,35,
            36,0,0,1,0,4,2,5,7,8,
            30,0,88,89,90,91,92,93,94,95,
            96,97,20,0,0,24,25,26,0,28,
            0,3,0,32,33,34,35,36,0,0,
            0,3,0,4,0,3,7,8,0,0,
            70,3,0,0,24,25,26,4,0,31,
            7,8,0,0,2,85,0,4,2,31,
            7,8,0,31,0,27,4,49,4,7,
            8,7,8,0,0,2,2,49,0,0,
            2,49,30,0,0,63,64,49,0,0,
            2,0,0,63,64,0,0,0,0,0,
            0,0,0,30,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3121,5039,1,1358,3076,5015,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            477,1,1,1,1,1,1,3130,1,3221,
            72,1,1,1,1,1,1,1303,581,901,
            613,1321,2147,1302,802,1320,2342,1319,1,88,
            3128,1,1,1,1,1,1,1,1,1,
            1,1,1,1,3115,1,1,1,8,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,1021,3378,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3109,3109,3109,3109,3109,441,1873,3109,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3378,3121,3109,3109,3109,3121,5039,1,3131,
            3076,5015,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,477,1,1,1,
            1,1,1,3130,1,3221,285,1,1,1,
            1,1,1,1303,581,901,613,1321,2147,1302,
            802,1320,2342,1319,1,3346,2571,1,1,1,
            1,1,1,1,1,1,1,1,1,62,
            3121,1,1,1,3121,3132,2674,3121,908,3133,
            2658,860,898,2649,2640,3137,2667,2830,2823,2809,
            2492,3134,3135,3136,51,2631,2038,2155,3334,3336,
            3335,2985,3283,2585,942,3377,3284,3282,3337,3285,
            3281,3121,3132,267,3346,1930,3133,908,2235,252,
            860,898,59,63,156,3288,3293,3292,3290,3291,
            3289,3294,3295,3287,3296,3297,3298,53,1522,2680,
            2759,2224,1,778,3133,3133,2585,942,3133,929,
            491,3133,3133,52,3133,3121,3133,3133,1,3346,
            1930,261,2585,942,3121,3132,2674,3125,1,3133,
            2658,90,3133,2649,2640,3137,2667,1419,2823,2809,
            2492,3134,3135,3136,3121,2631,2038,2155,778,261,
            3121,3133,3133,655,3121,2442,1956,1923,1811,90,
            1720,1404,54,929,491,3133,3133,261,3334,3336,
            3335,3133,3133,3133,3133,3133,3133,3133,3133,61,
            3133,3133,3133,3133,3133,3133,3133,3133,3133,3133,
            3133,3133,3133,3133,3133,3133,3133,3133,3133,3133,
            1,3124,3132,3132,3121,3121,3132,3121,2057,3132,
            3132,2766,3132,1452,3132,3132,1,3112,1930,3127,
            3121,2107,3121,1,1,2541,2564,1,1,1,
            3132,1,1,1,1,1,1,1,1,1,
            1,1,3121,1,1,1,778,3126,2841,3132,
            3132,3505,2442,1956,1923,1811,3121,1720,1404,354,
            207,3132,48,3132,3132,3133,3121,1586,2719,3132,
            3132,3132,3132,3132,3132,3132,3132,2,3132,3132,
            3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,
            3132,3132,3132,3132,3132,3132,3132,3132,3121,5039,
            1,3131,1,5015,1,116,3076,1,1,1,
            1,1,1,1,1,1,1,1,477,1,
            1,1,2541,2564,267,3130,1777,3221,908,116,
            252,860,898,2710,2684,1303,581,901,613,1321,
            2147,1302,802,1320,2342,1319,3121,5039,1,3131,
            1,5015,1,116,778,1,1,1,1,1,
            1,1,1,1,1,1,477,1,1,1,
            255,3121,1897,3130,3127,3221,66,116,60,3121,
            3358,116,1876,1303,581,901,613,1321,2147,1302,
            802,1320,2342,1319,3121,5039,1,3131,3121,5015,
            1,3127,3126,1,1,1,1,1,1,1,
            1,1,1,1,477,1,1,1,353,978,
            1,3130,68,3221,3094,3121,252,3088,3091,3126,
            3121,1303,581,901,613,1321,2147,1302,802,1320,
            2342,1319,3121,1,1,190,1,1,3121,1,
            1,2442,1956,1923,1811,1,1720,1404,726,1,
            1,1777,264,3127,477,252,1,1,1,908,
            1,3316,860,898,1,1,1,1,1,184,
            3031,2541,2564,3028,3031,1395,3022,3025,3378,778,
            264,3126,190,1,1,1,1,1,1,1,
            1,1,1,1,1,626,64,1,1,1,
            3121,5039,1,3131,3121,5015,1,3127,418,1,
            1,1,1,1,1,1,1,1,1,1,
            477,1,1,1,1,3346,2571,3130,3094,3221,
            70,3088,3091,1,67,3126,2992,1303,581,901,
            613,1321,2147,1302,802,1320,2342,1319,3121,5039,
            1,3131,888,5015,1,71,3121,1,1,1,
            1,1,1,1,1,1,1,1,477,1,
            1,1,1624,50,1,3130,270,3221,3094,2719,
            252,3088,3091,3128,3121,1303,581,901,613,1321,
            2147,1302,802,1320,2342,1319,3121,1,65,189,
            1,1,342,1,1,1,778,1777,3127,1,
            418,1,3346,2571,512,3094,726,3121,3088,3091,
            1,1,1,3121,1,3316,3125,3462,1,1,
            1,1,1,183,3043,778,3126,3040,3043,512,
            3034,3037,3378,3121,2710,2684,189,1,1,1,
            1,1,1,1,1,1,1,1,1,1624,
            3121,1,1,1,3121,5039,1,3131,3121,5015,
            1,3121,3121,1,1,1,1,1,1,1,
            1,1,1,1,477,1,1,1,1,3346,
            2571,3130,3094,3221,3121,3088,3091,3121,3121,1535,
            3124,1303,581,901,613,1321,2147,1302,802,1320,
            2342,1319,3121,5039,1,3131,1365,5015,1,1438,
            2174,1,1,1,1,1,1,1,1,1,
            1,1,477,1,1,1,252,3346,2571,3130,
            908,3221,2191,860,898,3121,2218,3121,3129,1303,
            581,901,613,1321,2147,1302,802,1320,2342,1319,
            3121,5039,1,3131,3121,5015,1,58,30,1,
            1,1,1,1,1,1,1,1,1,1,
            477,1,1,1,181,347,376,3130,908,3221,
            3085,860,898,3079,3082,3128,1431,1303,581,901,
            613,1321,2147,1302,802,1320,2342,1319,3121,1,
            3121,190,1,1,3121,1,1,583,205,4991,
            374,1,908,4991,908,860,898,860,898,49,
            2541,2564,1,1,1,2719,1,3316,3121,3121,
            1,1,1,1,1,373,5038,377,3121,908,
            5038,908,860,898,860,898,3121,3121,190,1,
            1,1,1,1,1,1,1,1,1,1,
            1,69,3121,1,1,1,3121,5039,1,3131,
            1,5015,1,3131,3121,1,1,1,1,1,
            1,1,1,1,1,1,477,1,1,1,
            2710,2684,252,3130,182,3221,3106,3130,908,3100,
            3103,860,898,1303,581,901,613,1321,2147,1302,
            802,1320,2342,1319,3121,5039,1,3131,291,5015,
            1,247,3501,1,1,1,1,1,1,1,
            1,1,1,1,477,1,1,1,30,3121,
            1340,3130,3127,3221,626,3334,3336,3335,1597,3121,
            3121,1303,581,901,613,1321,2147,1302,802,1320,
            2342,1319,3121,5039,1,3131,3121,5015,1,5163,
            3126,1,1,1,1,1,1,1,1,1,
            1,1,477,1,1,1,468,3150,1161,3130,
            3121,3221,539,3127,3121,3121,486,1291,206,1303,
            581,901,613,1321,2147,1302,802,1320,2342,1319,
            3121,3132,375,3121,908,3133,908,860,898,860,
            898,3126,57,2843,20,178,3064,3064,178,3121,
            3064,178,178,158,3334,3336,3335,908,3283,3121,
            860,898,3284,3282,3337,3285,3281,4962,178,178,
            178,3064,178,3121,3064,3064,178,178,178,178,
            178,3288,3293,3292,3290,3291,3289,3294,3295,3287,
            3296,3297,3298,1144,128,2680,2759,2224,3001,248,
            3121,2995,2998,112,3121,2541,2564,352,362,362,
            3097,362,3121,3097,362,362,3121,3132,3334,3336,
            3335,3133,3283,1,1,1,3284,3282,3337,3285,
            3281,362,362,362,3097,362,611,362,3097,362,
            362,362,362,362,3121,3288,3293,3292,3290,3291,
            3289,3294,3295,3287,3296,3297,3298,1,3132,2674,
            3125,3121,3133,2595,3125,3121,2649,2640,3137,2667,
            1419,2823,2809,2492,3134,3135,3136,3121,2631,2038,
            2155,3121,3132,2674,3125,873,3133,2604,324,3446,
            2649,2640,3137,2667,1419,2823,2809,2492,3134,3135,
            3136,3118,2631,2038,2155,1,3876,2674,29,1494,
            3778,2658,3447,3121,2649,2640,3137,2667,1419,2823,
            2809,2492,3134,3135,3136,5163,2631,2038,2155,1648,
            3121,3132,2674,1200,3124,3133,2658,219,3124,2649,
            2640,3137,2667,1419,2823,2809,2492,3134,3135,3136,
            5163,2631,2038,2155,3121,29,2731,3121,3124,1,
            3876,2674,345,3121,3778,2658,3131,778,2649,2640,
            3137,2667,1419,2823,2809,2492,3134,3135,3136,5163,
            2631,2038,2155,3121,3132,2674,206,433,3133,2658,
            3130,433,2649,2640,3137,2667,1419,2823,2809,2492,
            3134,3135,3136,5163,2631,2038,2155,378,3132,2674,
            200,1065,3133,2658,363,188,2649,2640,3137,2667,
            1419,2823,2809,2492,3134,3135,3136,5163,2631,2038,
            2155,3121,3132,2674,5163,205,3133,2658,210,1,
            2649,2640,3137,2667,1419,2823,2809,2492,3134,3135,
            3136,5163,2631,2038,2155,3121,3132,2674,1675,3121,
            3133,2658,377,1,2649,2640,3137,2667,1419,2823,
            2809,2492,3134,3135,3136,3121,2631,2038,2155,3121,
            3132,2676,373,3121,3133,2658,3121,3133,2649,2640,
            3137,2667,1419,2823,2809,2492,3134,3135,3136,3121,
            2631,2038,2155,3121,3132,2728,3121,1573,3133,2658,
            1431,3132,2649,2640,3137,2667,1419,2823,2809,2492,
            3134,3135,3136,3121,2631,2038,2155,1,3132,2674,
            3121,3121,3133,2658,3131,3121,2649,2640,3137,2667,
            1419,2823,2809,2492,3134,3135,3136,3121,2631,2038,
            2155,330,3132,2674,3121,750,3133,2658,3130,3121,
            2649,2640,3137,2667,1419,2823,2809,2492,3134,3135,
            3136,129,2631,2038,2155,3010,249,3121,3004,3007,
            1983,3121,3132,3121,130,1849,3133,284,3019,250,
            425,3013,3016,3121,42,3334,3336,3335,3121,3283,
            1,1,1,3284,3282,3337,3285,3281,3334,3336,
            3335,1546,3283,3334,3336,3335,3284,3282,3337,3285,
            3281,131,3121,368,2403,3052,3121,908,3046,3049,
            860,898,367,3121,132,2404,908,425,3061,860,
            898,3055,3058,3121,3121,3334,3336,3335,3121,3283,
            32,1133,2986,3284,3282,3337,3285,3281,3334,3336,
            3335,3121,3283,1333,3147,3148,3284,3282,3337,3285,
            3281,364,3121,3132,335,3073,1638,3133,3067,3070,
            2989,3121,1305,1277,1249,1221,1193,1137,1165,1109,
            1081,1049,804,3121,3121,3334,3336,3335,3121,3283,
            251,3127,56,3284,3282,3337,3285,3281,3121,369,
            55,3127,3121,908,3121,3127,860,898,3121,3121,
            718,3131,3121,199,3334,3336,3335,908,3121,3126,
            860,898,269,370,715,414,3121,908,1736,3126,
            860,898,371,3126,372,3130,908,490,908,860,
            898,860,898,221,322,1771,817,987,3121,3121,
            2922,1453,778,3121,3121,2541,2564,2005,348,3121,
            1445,3121,3121,2541,2564,3121,3121,3121,3121,3121,
            3121,3121,3121,778
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            159,1,612,3,612,612,612,612,612,612,
            612,612,612,612,612,11,584,278,275,282,
            280,290,288,292,291,294,293,264,612,584,
            395,395,243,612,261,261,261,63,352,336,
            612,612,612,612,612,612,612,612,612,612,
            612,612,612,612,612,612,612,612,490,612,
            612,612,612,612,612,612,612,612,612,612,
            612,612,261,261,233,82,67,211,453,206,
            205,414,446,446,446,426,577,426,577,577,
            426,577,426,16,426,367,612,337,275,275,
            280,280,280,280,280,280,278,278,288,282,
            282,291,290,200,200,293,292,100,133,100,
            63,70,58,609,233,486,215,261,510,456,
            330,260,575,98,577,395,392,395,98,395,
            577,612,20,584,336,556,306,306,395,446,
            446,543,446,446,306,200,612,200,439,202,
            612,612,133,80,70,58,486,233,214,211,
            261,61,367,410,458,72,260,329,261,579,
            102,100,236,261,334,306,306,350,612,398,
            612,612,543,200,400,543,441,446,80,58,
            58,612,612,233,215,453,314,313,67,458,
            261,410,409,259,100,579,102,236,236,179,
            556,306,261,446,261,261,543,612,543,305,
            317,441,441,67,320,448,238,154,58,486,
            233,233,261,510,456,61,72,261,242,261,
            261,102,133,438,102,236,238,403,238,306,
            556,543,612,543,543,441,317,317,441,82,
            7,408,6,133,78,323,136,395,612,200,
            309,486,58,458,410,102,194,238,133,612,
            395,243,306,261,335,317,448,306,628,575,
            11,82,325,395,612,58,261,410,242,133,
            305,612,301,194,302,133,261,243,306,543,
            396,261,612,233,396,194,612,302,302,543,
            261,261,233,302,543
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            99,0,77,27,99,49,31,3,48,0,
            48,68,77,50,99,70,85,14,15,35,
            28,36,34,33,32,12,9,10,71,72,
            63,64,73,74,75,76,80,81,82,83,
            84,86,87,69,88,89,90,91,92,93,
            94,95,96,97,78,79,27,24,26,25,
            49,1,3,31,2,30,4,8,7,6,
            0,3,49,31,1,24,0,3,50,30,
            70,14,15,12,6,9,10,21,22,16,
            23,13,2,17,18,19,11,1,5,20,
            0,32,51,24,52,65,33,53,34,54,
            55,35,26,56,57,28,66,36,67,58,
            59,25,60,61,62,1,5,13,7,8,
            4,29,3,50,0,69,14,15,12,6,
            9,10,21,22,16,23,13,2,17,18,
            19,11,20,1,5,30,70,0,16,17,
            18,19,11,1,5,2,14,15,12,6,
            9,10,21,22,13,23,29,0,32,24,
            33,34,35,26,28,36,25,3,30,49,
            31,27,20,6,1,2,4,8,7,48,
            0,2,25,0,2,3,49,31,30,0,
            24,26,25,28,14,15,12,6,9,10,
            21,22,16,23,13,2,1,5,17,18,
            19,11,77,3,0,1,5,3,50,49,
            0,49,16,17,18,19,5,2,14,15,
            12,6,9,10,21,22,13,23,11,1,
            31,3,0,69,88,89,90,91,92,94,
            93,95,96,97,6,71,72,9,10,64,
            63,73,74,75,76,78,79,80,81,12,
            82,83,84,68,77,31,50,99,86,87,
            48,4,8,7,49,27,3,0,69,30,
            70,0,2,48,31,30,4,8,7,3,
            49,27,69,0,77,3,68,0,1,31,
            3,2,0,31,98,50,39,41,20,45,
            47,42,37,43,44,40,38,46,29,3,
            27,2,17,18,19,11,14,15,12,6,
            9,10,21,22,16,23,13,65,66,67,
            59,51,56,54,55,53,52,57,58,60,
            61,62,36,33,28,32,35,24,26,25,
            34,4,8,7,5,1,0,37,0,48,
            68,0,3,49,50,69,0,48,2,3,
            31,49,0,59,51,56,54,55,53,52,
            57,58,60,61,62,30,49,31,36,33,
            28,32,35,24,26,25,34,48,27,3,
            6,1,7,8,4,2,0,3,48,31,
            11,0,6,2,30,31,3,32,51,52,
            65,33,53,34,54,55,35,56,57,28,
            66,36,67,58,59,60,61,62,1,5,
            13,7,8,4,68,24,26,25,0,16,
            17,18,19,11,1,5,2,14,15,12,
            6,9,10,21,22,13,23,48,0,6,
            32,51,24,52,65,33,53,34,54,55,
            35,26,56,57,28,66,36,67,58,59,
            25,60,61,62,1,5,13,68,4,8,
            7,0,39,41,20,45,47,42,37,43,
            44,40,38,46,29,16,17,18,19,1,
            5,2,14,15,12,6,9,10,21,22,
            13,23,27,3,11,0,1,5,20,4,
            8,7,0,32,51,52,65,33,53,34,
            54,55,35,56,57,28,66,36,67,58,
            59,60,61,62,7,8,4,20,24,26,
            25,2,17,18,19,11,5,14,15,12,
            9,10,21,22,16,23,13,1,6,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            49,22,41,22,41,41,41,41,41,41,
            41,41,41,41,41,22,155,22,22,22,
            22,22,22,22,22,22,22,22,41,155,
            12,12,43,157,69,69,69,108,1,23,
            41,41,41,41,41,41,41,41,41,41,
            41,41,41,41,41,41,41,41,117,41,
            41,41,41,41,41,41,41,41,41,41,
            41,41,69,69,58,151,130,56,107,31,
            31,79,22,22,22,80,90,80,90,90,
            80,90,80,22,80,73,41,94,22,22,
            22,22,22,22,22,22,22,22,22,22,
            22,22,22,22,22,22,22,152,126,22,
            133,22,140,60,58,33,57,69,128,46,
            69,26,22,8,140,8,140,8,8,8,
            140,41,22,155,100,147,149,149,8,22,
            22,142,22,22,149,22,63,22,148,52,
            41,41,24,126,22,90,33,58,57,54,
            69,122,14,22,104,29,68,22,69,90,
            126,22,126,69,22,149,149,160,157,22,
            157,157,142,22,22,142,112,22,39,90,
            126,41,41,58,57,121,31,31,130,104,
            69,69,22,69,22,140,165,126,8,152,
            162,149,69,22,69,69,142,41,142,149,
            90,137,124,130,22,92,10,35,126,33,
            58,58,69,128,46,86,29,69,41,69,
            69,126,24,148,82,8,10,22,22,149,
            162,142,157,142,142,112,140,90,88,40,
            69,22,22,24,38,22,40,8,41,22,
            66,33,54,169,69,165,112,10,24,41,
            8,162,149,69,22,140,92,149,22,92,
            71,40,58,8,41,54,69,69,41,24,
            149,41,22,137,90,24,69,162,149,142,
            22,69,41,58,22,112,41,90,140,142,
            69,69,58,140,142
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            98,113,96,95,82,94,93,1,0,76,
            0,90,0,98,113,97,96,95,82,94,
            93,0,7,56,0,133,24,0,109,0,
            49,0,72,0,1,137,0,107,7,59,
            5,0,7,116,0,24,7,0,7,114,
            0,134,0,31,0,7,5,34,0,5,
            7,0,5,136,0,130,0,111,24,0,
            126,0,82,78,79,80,81,89,69,51,
            0,7,60,84,0,63,62,45,43,28,
            0,88,0,7,33,1,35,117,0,35,
            1,56,92,7,33,0,24,62,63,7,
            0,7,45,43,28,0,7,29,115,0,
            24,63,62,43,45,7,0,7,33,28,
            67,0,63,62,28,0,43,45,7,13,
            0,1,35,7,36,0,29,7,26,0,
            5,59,57,0,60,30,7,29,0,33,
            77,7,65,0,102,7,60,0,123,7,
            33,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            87,2,89,99,88,9,97,98,10,11,
            86,8,95,6,7,70,83,84,85,3,
            12,13,96,50,78,66,94,71,100,1,
            92,46,57,62,65,74,79,47,48,51,
            52,53,59,60,61,67,73,29,42,93,
            49,54,58,63,64,68,69,76,77,80,
            81,82,16,17,56,72,75,30,31,4,
            14,15,18,19,20,21,91,43,44,22,
            23,24,25,26,5,27,28,32,33,34,
            35,36,37,38,39,40,41,55,101,90
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            107,0,0,0,109,113,0,114,115,116,
            117,118,183,0,0,0,119,120,121,122,
            123,124,0,104,0,106,125,184,108,130,
            142,0,134,103,126,129,0,0,0,0,
            0,162,164,0,165,0,0,0,166,0,
            141,0,0,152,0,105,112,128,0,156,
            175,176,177,0,0,151,163,172,144,0,
            167,170,171,174,111,0,133,145,146,147,
            148,153,0,155,159,161,0,188,191,110,
            127,132,136,137,138,139,140,143,149,150,
            0,154,158,0,160,169,179,0,185,0,
            187,0,190,102,0,0,131,135,0,0,
            157,0,168,173,178,0,180,181,0,182,
            0,0,186,0,0,189,192,0,0,0,
            0,0,0,0,0,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,236,315,198,295,103,129,135,264,77,
            344,366,323,1,86,119,145,163,63,244,
            305,35,59,91,141,215,280,386,409,413,
            340,362,375,393,375,329,15,27,56,8,
            8,95,98,150,173,98,225,230,233,292,
            417,50,71,111,219,284,390,400,400,8,
            111,254,188,353,188,254,20,20,41,211,
            41,41,41,41,41,290,384,20,20,45,
            124,153,124,153,153
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            186,186,302,186,302,109,6,6,186,83,
            350,372,310,6,39,109,6,39,68,249,
            310,39,39,39,6,213,213,186,39,6,
            302,302,302,397,379,333,18,18,39,6,
            6,39,101,6,39,176,228,228,228,213,
            39,53,74,126,222,287,53,403,406,11,
            114,249,205,356,191,257,25,33,43,213,
            270,272,274,276,278,213,213,22,30,47,
            126,160,114,155,168
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            80,78,40,80,40,67,49,49,78,57,
            40,39,40,138,64,67,49,48,14,78,
            40,89,108,64,49,84,77,30,5,5,
            40,39,39,23,39,40,103,100,3,130,
            129,62,74,49,45,54,79,79,79,41,
            3,37,107,67,84,77,37,8,5,138,
            67,78,80,40,80,78,103,100,113,84,
            97,96,95,94,93,77,38,103,100,136,
            67,48,67,46,48
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            50,50,31,50,31,24,77,77,50,50,
            31,98,27,77,31,24,77,31,31,20,
            27,31,31,31,77,27,27,50,31,77,
            31,31,31,48,31,27,7,7,31,77,
            77,31,2,77,31,1,1,1,1,27,
            31,48,69,6,1,1,48,31,31,68,
            6,20,20,37,1,1,1,1,13,27,
            1,65,66,66,59,27,27,1,1,68,
            6,2,6,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            42,42,104,42,104,84,90,90,42,33,
            104,104,104,6,94,84,90,15,46,42,
            104,42,12,94,90,8,29,101,118,118,
            104,104,104,154,104,104,1,24,118,4,
            6,94,96,90,15,17,42,42,42,104,
            118,104,188,84,8,29,104,125,118,6,
            84,42,42,104,42,42,1,24,43,8,
            43,43,43,43,43,29,104,1,24,27,
            84,15,84,15,15
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            158,68,158,30,0,103,0,158,30,0,
            30,128,103,0,185,128,0,184,0,128,
            0,159,184,0,159,0,154,128,0,152,
            184,0,152,0,175,2,13,0,104,0,
            198,0,191,0,158,0,30,128,0,236,
            39,0,29,129,0,130,2,0,232,2,
            209,0,231,2,2,7,0,104,104,0,
            227,107,0,31,151,0,176,225,107,20,
            159,0,105,0,0,171,107,2,162,0,
            171,107,2,0,174,2,0,167,107,0,
            175,0,107,150,6,150,167,0,170,0,
            150,167,0,9,0,0,170,0,107,150,
            6,150,0,150,0,9,0,0,127,28,
            206,107,30,0,127,206,107,28,30,0,
            127,28,30,0,127,206,107,30,0,127,
            30,0,145,0,2,0,168,104,0,2,
            104,0,171,107,2,145,0,2,0,167,
            104,0,154,2,0,162,0,176,204,107,
            20,101,222,65,0,105,0,222,65,0,
            107,3,0,0,0,105,0,176,204,107,
            20,222,65,0,3,0,0,0,105,0,
            160,0,106,0,221,107,160,0,107,160,
            0,157,106,0,183,65,0,107,0,183,
            67,0,183,66,0,201,107,20,220,101,
            219,182,0,220,101,219,182,0,3,0,
            0,105,0,219,182,0,107,0,3,0,
            0,105,0,201,107,20,219,182,0,148,
            0,147,0,146,0,145,0,144,0,218,
            107,133,0,107,133,0,135,106,0,133,
            0,129,46,0,165,126,165,177,2,43,
            0,104,129,0,165,177,2,43,0,106,
            0,104,129,0,165,126,165,126,165,2,
            43,0,165,126,165,2,43,0,165,2,
            43,0,106,0,106,0,104,129,0,129,
            2,37,0,129,2,37,136,42,0,104,
            106,0,136,42,0,79,2,108,104,106,
            0,129,2,47,0,136,124,129,2,45,
            0,55,129,0,129,2,45,0,104,129,
            55,129,0,135,0,217,107,20,0,158,
            39,0,129,87,122,0,29,125,0,175,
            2,0,104,114,0,104,112,0,216,2,
            105,0,129,30,105,0,129,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            2005,1868,0,926,0,570,0,2861,1529,2859,
            0,490,539,0,2121,1699,2005,2055,1868,2571,
            2072,1930,1845,1983,1818,0,901,0,2731,1767,
            1750,0,750,683,583,655,717,555,652,2525,
            0,1348,456,385,0,2784,2730,2887,2005,2882,
            2055,2267,1868,2121,2862,2000,1983,1699,2072,2858,
            1064,2841,1818,2837,456,2766,1002,967,609,527,
            2061,1348,2508,2503,2680,2459,2759,2224,2454,2180,
            2449,1703,385,2277,2755,2726,1935,2078,0,1013,
            917,775,547,1699,2061,1930,1845,1777,2353,0,
            2728,2676,2674,2400,2383,2356,2339,2295,2278,2235,
            2218,2191,2174,2147,1767,1750,0,2843,2830,2823,
            2809,2492,2155,1419,2604,2595,2525,512,441,726,
            626,929,491,418,2564,2541,2442,1956,1923,1811,
            1720,1404,2719,2710,2684,2585,942,2667,2658,2649,
            2640,2631,2038,1675,1648,1624,987,1597,750,1573,
            1546,683,655,817,1522,1494,1466,952,1438,1365,
            901,873,778,1333,1305,1277,1249,1221,1193,1165,
            1137,1109,1081,1049,385,1021,845,583,555,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,214,107,191,13,23,16,22,21,10,
            9,6,12,15,14,105,2,110,109,112,
            111,118,117,120,119,122,121,106,49,2,
            85,70,2,30,130,175,129,160,107,20,
            10,9,72,71,6,79,78,76,75,74,
            73,63,64,12,81,80,83,82,87,86,
            84,97,96,95,93,94,92,91,90,89,
            88,69,175,216,129,124,107,30,2,163,
            162,193,7,8,4,194,182,195,67,66,
            196,65,197,101,213,198,13,107,109,109,
            111,111,111,111,111,111,110,110,117,112,
            112,119,118,215,129,121,120,124,20,159,
            167,150,128,28,127,107,6,174,107,2,
            2,2,2,219,128,183,128,183,222,183,
            128,13,106,2,217,46,38,40,44,43,
            37,42,47,45,135,41,39,101,133,4,
            48,48,107,20,150,6,107,127,206,172,
            171,133,107,173,107,2,233,1,11,101,
            20,101,20,175,3,129,101,2,2,136,
            2,2,48,236,158,48,107,234,107,6,
            150,206,28,127,6,2,143,145,107,49,
            171,231,209,2,220,128,107,20,107,124,
            177,165,129,37,129,129,48,68,48,218,
            154,128,2,107,200,2,225,107,150,107,
            127,127,154,107,2,167,49,124,2,11,
            1,20,201,160,202,107,204,101,205,165,
            126,124,2,124,124,49,128,154,167,69,
            235,11,188,176,49,227,237,70,30,101,
            228,107,172,107,232,107,107,204,176,69,
            49,126,165,129,136,128,48,124,2,49,
            156,69,158,70,30,172,171,223,49,201,
            221,48,154,128,185,176,165,126,124,98,
            6,1,68,158,49,49,48,185,128,124,
            165,1,158,128,124
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            ">?",
            "<?",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "no_sizeof_type_name_start",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "identifier_list",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "initializer_seq",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "extended_asm_param",
            "case_range_expression",
            "typeof_declaration_specifiers",
            "typeof_type_specifier",
            "field_name_designator"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 84,
           SCOPE_SIZE        = 85,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 335,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3505,
           MAX_LA            = 2147483647,
           NUM_RULES         = 384,
           NUM_NONTERMINALS  = 147,
           NUM_SYMBOLS       = 247,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 716,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 99,
           EOLT_SYMBOL       = 99,
           ACCEPT_ACTION     = 2985,
           ERROR_ACTION      = 3121;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
