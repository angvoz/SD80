/*
 * (c) Copyright IBM Corp. 2003.
 * Created on 27 févr. 03
 * All Rights Reserved. This program and the accompanying materials
 * are made available under the terms of the Common Public License v0.5
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v05.html
 *
 * Contributors:
 * IBM Software Group - Rational Software
 */

package org.eclipse.cdt.internal.cppunit.ui;

import org.eclipse.ui.texteditor.ITextEditor;

import org.eclipse.cdt.core.model.ICProject;
import org.eclipse.cdt.core.model.ICElement;
import org.eclipse.cdt.core.model.IFunctionDeclaration;
//import org.eclipse.cdt.core.model.IMethod;
import org.eclipse.cdt.core.model.IStructure;
import org.eclipse.cdt.core.model.ISourceRange;
import org.eclipse.cdt.core.model.CModelException;
import org.eclipse.cdt.internal.cppunit.util.ModelInterface;

/**
 * Open a class on a Test method.
 */
public class OpenTestAction extends OpenEditorAction
{
	private IFunctionDeclaration fMethod;
	private String fMethodName;
	private ISourceRange fRange;
	
	/**
	 * Constructor for OpenTestAction.
	 */
	public OpenTestAction(TestRunnerViewPart testRunner, String className, String method) {
		super(testRunner, className);
		fMethodName= method;
	}
	
	public OpenTestAction(TestRunnerViewPart testRunner, String className) {
		this(testRunner, className, null);
	}

	/*
	 * Returns the ITranslationUnit as an ICElement containing className
	 * findFile fills fStruct attribute and fMethod is computed before returning
	 */
	protected ICElement findElement(ICProject project, String className)
	{
		IStructure f=ModelInterface.findFile(project,className);
		if(f==null) return null;
		if(fMethodName!=null)
		{
			fMethod=ModelInterface.findMethod((IStructure)f,fMethodName);
			if(fMethod!=null)
			{
				try {
					fRange=fMethod.getSourceRange();
				}
				catch(CModelException e) {}
			}
		}
		else
		{
			try {
				fRange=((IStructure)f).getSourceRange();
			}
			catch(CModelException e) {}
		}
		return f.getParent();
	}
	
	protected void reveal(ITextEditor textEditor)
	{
		if (fRange != null)
		{
			textEditor.selectAndReveal(fRange.getIdStartPos(),fRange.getIdLength());
		}
	}
}
