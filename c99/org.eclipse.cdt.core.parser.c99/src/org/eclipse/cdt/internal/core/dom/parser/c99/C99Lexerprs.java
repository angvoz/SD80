/*******************************************************************************
* Copyright (c) 2006, 2007 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*******************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.parser.c99;

public class C99Lexerprs implements lpg.lpgjavaruntime.ParseTable, C99Lexersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static byte baseCheck[] = {0,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2,2,2,1,1,1,1,1,
            1,1,1,2,2,1,1,2,2,2,
            2,1,1,2,2,1,1,1,3,1,
            2,2,2,2,2,3,3,2,2,2,
            1,1,2,2,2,2,2,2,4,1,
            1,1,1,2,2,2,5,1,2,3,
            2,2,2,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,2,2,1,
            1,3,4,4,1,2,1,2,1,2,
            2,2,1,2,2,1,2,1,2,1,
            1,1,1,2,2,1,1,1,2,3,
            2,2,3,3,4,3,4,1,2,2,
            2,3,3,2,3,2,1,1,2,2,
            3,3,2,3,2,1,2,1,1,1,
            1,3,4,1,2,1,1,1,1,2,
            2,2,2,2,2,2,2,2,2,2,
            2,3,4,3,2,2,3,3,4,1,
            2,1,1
        };
    };
    public final static byte baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static byte rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            30,30,30,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,
            30,30,30,36,36,37,37,38,22,22,
            40,40,40,40,40,40,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,23,23,
            1,1,1,1,1,1,1,1,1,1,
            50,50,50,50,50,50,50,50,4,4,
            4,4,4,4,4,4,4,4,4,4,
            4,3,3,3,3,3,3,3,3,3,
            3,3,3,3,3,3,3,3,3,3,
            3,3,3,3,3,41,41,41,41,41,
            41,12,12,12,12,12,12,12,12,12,
            13,13,13,13,13,13,13,13,13,39,
            39,39,39,39,39,9,9,9,9,9,
            11,11,11,11,11,11,11,31,31,31,
            24,24,6,6,18,32,32,32,32,42,
            43,44,44,25,25,25,25,25,25,25,
            14,14,20,20,21,21,33,33,45,45,
            45,45,45,45,46,46,46,46,5,5,
            47,47,47,26,26,26,26,15,15,48,
            48,48,27,27,27,27,19,19,10,10,
            10,10,34,34,28,28,16,16,7,7,
            8,8,8,8,8,8,8,8,8,8,
            8,51,51,51,52,52,35,35,35,35,
            29,29,17,17,1,621,128,1380,148,433,
            231,574,1233,622,581,191,192,193,1525,428,
            299,322,298,428,1274,553,323,230,227,1586,
            269,320,1285,561,332,381,2,3,4,5,
            377,492,62,424,244,245,522,514,398,256,
            257,393,1151,200,201,202,1257,1485,299,296,
            298,1246,229,128,1504,297,64,231,294,866,
            191,192,193,1718,260,299,322,298,1351,148,
            437,323,286,261,230,228,320,1151,200,201,
            202,1547,349,299,296,298,349,517,454,384,
            297,1774,1475,294,676,191,192,193,1619,269,
            299,322,298,1492,269,467,323,771,200,201,
            202,321,1751,299,296,298,422,1380,148,592,
            297,574,263,295,961,191,192,193,1778,442,
            299,322,298,1630,269,232,323,1056,200,201,
            202,321,249,299,296,298,98,220,221,222,
            297,1525,463,295,1563,223,463,488,195,220,
            221,222,486,209,210,185,564,223,500,72,
            389,220,221,222,292,220,221,222,1566,223,
            504,73,1777,223,1725,70,488,1319,148,1380,
            148,287,1741,286,1727,1525,607,1791,344,1757,
            607,66,1567,211,527,458,344,1568,572,238,
            579,247,527,458,596,1525,609,236,1408,148,
            609,1783,286,1380,148,1641,269,574,1597,555,
            581,1608,599,555,1608,603,599,587,1784,603,
            1776,233,1436,148,1380,148,287,1749,589,1608,
            611,1608,613,1334,611,1541,613,1464,148,1380,
            148,287,1758,594,1380,148,1767,1747,234,1652,
            269,1571,265,1663,269,1573,267,1674,269,1685,
            269,1696,269,1707,269,1750,1503,1391,1333,1793,
            1362,1722,1479,625,625
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,74,75,76,77,78,79,80,81,82,
            83,84,85,86,87,88,89,90,91,92,
            93,94,95,96,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,68,69,70,71,72,73,74,75,
            76,77,78,79,80,81,82,83,84,85,
            86,87,88,89,90,91,92,93,94,95,
            96,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,71,72,73,74,75,76,77,78,
            79,80,81,82,83,84,85,86,87,88,
            89,90,91,92,93,94,95,96,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,74,75,76,77,78,79,80,81,
            82,0,84,85,86,87,88,89,90,91,
            92,93,94,95,96,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,74,
            75,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,94,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,0,83,84,85,86,87,88,89,
            90,91,92,93,94,0,1,2,3,4,
            5,6,7,8,9,10,0,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,0,0,30,31,0,33,34,
            35,36,37,38,0,29,41,14,15,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,0,1,
            2,3,4,5,6,7,8,9,10,97,
            12,13,0,0,16,17,18,19,0,0,
            22,23,24,25,26,27,28,15,30,31,
            0,1,2,3,4,5,6,7,8,9,
            10,0,12,13,0,81,16,17,18,19,
            37,38,22,23,24,25,26,27,28,0,
            1,2,3,4,5,6,7,8,9,10,
            0,12,13,32,0,16,17,18,19,0,
            0,22,23,24,25,26,27,0,1,2,
            3,4,5,6,7,8,9,10,28,12,
            13,0,0,16,17,18,19,0,0,22,
            23,24,25,26,27,0,1,2,3,4,
            5,6,7,8,9,10,0,12,13,0,
            0,16,17,18,19,0,0,22,23,24,
            25,26,27,0,1,2,3,4,5,6,
            7,8,9,10,0,12,13,0,0,16,
            17,18,19,0,0,22,23,24,25,26,
            27,0,1,2,3,4,5,6,7,8,
            9,10,0,0,30,31,0,16,17,0,
            0,0,0,0,12,12,13,14,15,28,
            18,19,20,21,0,1,2,3,4,5,
            6,7,8,9,10,33,34,35,36,0,
            0,0,0,41,0,43,0,1,2,3,
            4,5,6,7,8,9,10,73,74,75,
            20,21,0,39,40,0,0,0,0,0,
            0,0,0,11,28,97,11,11,11,95,
            96,11,80,11,82,0,1,2,3,4,
            5,6,7,8,9,10,0,1,2,3,
            4,5,6,7,8,9,10,0,1,2,
            3,4,5,6,7,8,9,10,0,1,
            2,3,4,5,6,7,8,9,10,0,
            1,2,3,4,5,6,7,8,9,10,
            0,1,2,3,4,5,6,7,8,9,
            10,0,1,2,3,4,5,6,7,8,
            9,10,0,1,2,3,4,5,6,7,
            8,9,10,0,1,2,3,4,5,6,
            7,8,9,10,0,1,2,3,4,5,
            6,7,8,9,10,0,1,2,3,4,
            5,6,7,8,9,10,0,1,2,3,
            4,5,6,7,8,9,10,0,0,0,
            0,0,0,0,0,0,0,0,0,12,
            13,14,15,16,17,14,15,11,14,15,
            0,20,21,0,20,21,0,0,0,0,
            0,0,0,0,14,15,0,0,32,11,
            20,21,12,13,14,15,0,11,42,12,
            13,14,15,0,0,0,0,0,12,13,
            14,15,0,0,11,29,11,11,32,43,
            0,42,0,11,11,0,0,20,21,0,
            0,0,76,0,29,29,14,0,0,0,
            20,21,0,0,0,40,0,0,97,0,
            0,0,39,0,0,77,0,0,82,0,
            0,83,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,79,0,0,0,0,0,0,0,
            78,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            625,583,756,757,758,759,760,761,762,763,
            764,508,706,732,712,597,705,731,701,702,
            721,747,703,704,727,728,729,730,411,512,
            716,742,376,714,718,720,722,724,750,568,
            570,585,529,334,707,708,709,710,711,713,
            715,717,719,723,725,726,733,734,735,736,
            737,739,740,741,743,744,745,746,748,749,
            751,752,754,840,843,844,524,537,551,421,
            661,352,372,577,633,634,631,632,635,636,
            645,532,484,663,676,841,842,625,755,756,
            757,758,759,760,761,762,763,764,799,706,
            732,712,738,705,731,701,702,721,747,703,
            704,727,728,729,730,795,800,716,742,796,
            714,718,720,722,724,750,792,794,851,788,
            850,707,708,709,710,711,713,715,717,719,
            723,725,726,733,734,735,736,737,739,740,
            741,743,744,745,746,748,749,751,752,805,
            840,843,844,798,500,789,807,801,787,849,
            488,790,791,802,803,806,808,809,786,804,
            797,793,841,842,625,755,756,757,758,759,
            760,761,762,763,764,799,706,732,712,738,
            705,731,701,702,721,747,703,704,727,728,
            729,730,795,800,716,742,796,714,718,720,
            722,724,750,792,794,851,788,850,707,708,
            709,710,711,713,715,717,719,723,725,726,
            733,734,735,736,737,739,740,741,743,744,
            745,746,748,749,751,752,805,840,843,844,
            798,504,789,807,801,787,849,696,790,791,
            802,803,806,808,809,786,804,797,793,841,
            842,625,755,756,757,758,759,760,761,762,
            763,764,799,706,732,712,738,705,731,701,
            702,721,747,703,704,727,728,729,730,795,
            800,716,742,796,714,718,720,722,724,750,
            792,794,851,788,850,707,708,709,710,711,
            713,715,717,719,723,725,726,733,734,735,
            736,737,739,740,741,743,744,745,746,748,
            749,751,752,805,840,843,844,798,694,789,
            807,801,787,849,692,790,791,802,803,806,
            808,809,786,804,797,793,841,842,625,755,
            756,757,758,759,760,761,762,763,764,799,
            706,732,712,738,705,731,701,702,721,747,
            703,704,727,728,729,730,795,800,716,742,
            796,714,718,720,722,724,750,792,794,851,
            788,850,707,708,709,710,711,713,715,717,
            719,723,725,726,733,734,735,736,737,739,
            740,741,743,744,745,746,748,749,751,752,
            805,840,843,844,798,694,789,807,801,787,
            849,625,790,791,802,803,806,808,809,786,
            804,797,793,841,842,61,755,756,757,758,
            759,760,761,762,763,764,799,706,732,712,
            738,705,731,701,702,721,747,703,704,727,
            728,729,730,795,800,716,742,796,714,718,
            720,722,724,750,792,794,813,788,812,707,
            708,709,710,711,713,715,717,719,723,725,
            726,733,734,735,736,737,739,740,741,743,
            744,745,746,748,749,751,752,805,839,837,
            838,798,815,789,807,801,787,811,814,790,
            791,802,803,806,808,809,786,804,797,793,
            625,755,756,757,758,759,760,761,762,763,
            764,799,706,732,712,738,705,731,701,702,
            721,747,703,704,727,728,729,730,795,800,
            716,742,796,714,718,720,722,724,750,792,
            794,616,788,941,707,708,709,710,711,713,
            715,717,719,723,725,726,733,734,735,736,
            737,739,740,741,743,744,745,746,748,749,
            751,752,805,824,822,823,798,821,789,807,
            801,787,819,820,790,791,802,803,806,808,
            809,786,804,797,793,625,755,756,757,758,
            759,760,761,762,763,764,799,706,732,712,
            738,705,731,701,702,721,747,703,704,727,
            728,729,730,795,800,716,742,796,714,718,
            720,722,724,750,792,794,616,788,942,707,
            708,709,710,711,713,715,717,719,723,725,
            726,733,734,735,736,737,739,740,741,743,
            744,745,746,748,749,751,752,805,824,822,
            823,798,821,789,807,801,787,819,820,790,
            791,802,803,806,808,809,786,804,797,793,
            625,755,756,757,758,759,760,761,762,763,
            764,799,706,732,712,738,705,731,701,702,
            721,747,703,704,727,728,729,730,795,800,
            716,742,796,714,718,720,722,724,750,792,
            794,616,788,828,707,708,709,710,711,713,
            715,717,719,723,725,726,733,734,735,736,
            737,739,740,741,743,744,745,746,748,749,
            751,752,805,833,831,832,798,830,789,807,
            801,787,917,829,790,791,802,803,806,808,
            809,786,804,797,793,625,755,756,757,758,
            759,760,761,762,763,764,799,706,732,712,
            738,705,731,701,702,721,747,703,704,727,
            728,729,730,795,800,716,742,796,714,718,
            720,722,724,750,792,794,616,788,943,707,
            708,709,710,711,713,715,717,719,723,725,
            726,733,734,735,736,737,739,740,741,743,
            744,745,746,748,749,751,752,805,824,822,
            823,798,821,789,807,801,787,819,820,790,
            791,802,803,806,808,809,786,804,797,793,
            625,755,756,757,758,759,760,761,762,763,
            764,799,706,732,712,738,705,731,701,702,
            721,747,703,704,727,728,729,730,795,800,
            716,742,796,714,718,720,722,724,750,792,
            794,616,788,944,707,708,709,710,711,713,
            715,717,719,723,725,726,733,734,735,736,
            737,739,740,741,743,744,745,746,748,749,
            751,752,805,824,822,823,798,821,789,807,
            801,787,819,820,790,791,802,803,806,808,
            809,786,804,797,793,625,755,756,757,758,
            759,760,761,762,763,764,799,706,732,712,
            738,705,731,701,702,721,747,703,704,727,
            728,729,730,795,800,716,742,796,714,718,
            720,722,724,750,792,794,616,788,828,707,
            708,709,710,711,713,715,717,719,723,725,
            726,733,734,735,736,737,739,740,741,743,
            744,745,746,748,749,751,752,805,833,831,
            832,798,830,789,807,801,787,918,829,790,
            791,802,803,806,808,809,786,804,797,793,
            625,755,756,757,758,759,760,761,762,763,
            764,799,706,732,712,738,705,731,701,702,
            721,747,703,704,727,728,729,730,795,800,
            716,742,796,714,718,720,722,724,750,792,
            794,616,788,828,707,708,709,710,711,713,
            715,717,719,723,725,726,733,734,735,736,
            737,739,740,741,743,744,745,746,748,749,
            751,752,805,833,831,832,798,830,789,807,
            801,787,625,829,790,791,802,803,806,808,
            809,786,804,797,793,1,755,756,757,758,
            759,760,761,762,763,764,37,706,732,712,
            738,705,731,701,702,721,747,703,704,727,
            728,729,730,243,625,716,742,625,714,718,
            720,722,724,750,52,680,585,619,618,707,
            708,709,710,711,713,715,717,719,723,725,
            726,733,734,735,736,737,739,740,741,743,
            744,745,746,748,749,751,752,754,240,755,
            756,757,758,759,760,761,762,763,764,624,
            779,785,253,130,778,784,774,775,625,625,
            776,777,780,781,782,783,548,880,545,525,
            625,755,756,757,758,759,760,761,762,763,
            764,625,779,785,625,678,778,784,774,775,
            866,867,776,777,780,781,782,783,519,625,
            755,756,757,758,759,760,761,762,763,764,
            625,779,785,684,625,778,784,774,775,625,
            625,776,777,780,781,782,783,280,755,756,
            757,758,759,760,761,762,763,764,664,779,
            785,625,625,778,784,774,775,625,625,776,
            777,780,781,782,783,279,755,756,757,758,
            759,760,761,762,763,764,625,779,785,625,
            625,778,784,774,775,625,625,776,777,780,
            781,782,783,281,755,756,757,758,759,760,
            761,762,763,764,625,779,785,625,63,778,
            784,774,775,625,60,776,777,780,781,782,
            783,239,755,756,757,758,759,760,761,762,
            763,764,625,259,545,525,625,481,338,625,
            625,625,625,625,931,913,915,914,916,558,
            929,930,447,327,625,755,756,757,758,759,
            760,761,762,763,764,932,933,934,935,625,
            625,625,625,928,625,926,12,755,756,757,
            758,759,760,761,762,763,764,840,843,844,
            447,327,32,902,903,40,21,17,625,625,
            25,625,24,674,617,60,655,656,666,841,
            842,672,927,671,925,270,755,756,757,758,
            759,760,761,762,763,764,271,755,756,757,
            758,759,760,761,762,763,764,625,755,756,
            757,758,759,760,761,762,763,764,276,755,
            756,757,758,759,760,761,762,763,764,274,
            755,756,757,758,759,760,761,762,763,764,
            272,755,756,757,758,759,760,761,762,763,
            764,275,755,756,757,758,759,760,761,762,
            763,764,273,755,756,757,758,759,760,761,
            762,763,764,285,755,756,757,758,759,760,
            761,762,763,764,283,755,756,757,758,759,
            760,761,762,763,764,284,755,756,757,758,
            759,760,761,762,763,764,282,755,756,757,
            758,759,760,761,762,763,764,258,625,625,
            625,268,625,625,237,625,26,625,625,913,
            915,914,916,481,338,239,239,653,619,618,
            235,239,239,625,875,876,113,625,22,58,
            262,625,625,625,619,618,23,264,679,667,
            875,876,913,915,914,916,266,668,681,913,
            915,914,916,33,625,19,27,248,913,915,
            914,916,16,18,675,682,670,654,615,389,
            246,620,252,673,669,625,625,875,876,625,
            625,625,605,625,638,601,879,625,625,625,
            875,876,625,625,625,640,625,625,239,625,
            625,625,639,625,625,476,625,625,407,625,
            625,690,625,625,625,625,625,625,625,625,
            625,625,625,625,625,625,625,625,625,625,
            625,625,660,625,625,625,625,625,625,625,
            659
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }
    public final int asb(int index) { return 0; }
    public final int asr(int index) { return 0; }
    public final int nasb(int index) { return 0; }
    public final int nasr(int index) { return 0; }
    public final int terminalIndex(int index) { return 0; }
    public final int nonterminalIndex(int index) { return 0; }
    public final int scopePrefix(int index) { return 0;}
    public final int scopeSuffix(int index) { return 0;}
    public final int scopeLhs(int index) { return 0;}
    public final int scopeLa(int index) { return 0;}
    public final int scopeStateSet(int index) { return 0;}
    public final int scopeRhs(int index) { return 0;}
    public final int scopeState(int index) { return 0;}
    public final int inSymb(int index) { return 0;}
    public final String name(int index) { return null; }
    public final int getErrorSymbol() { return 0; }
    public final int getScopeUbound() { return 0; }
    public final int getScopeSize() { return 0; }
    public final int getMaxNameLength() { return 0; }

    public final static int
           NUM_STATES        = 88,
           NT_OFFSET         = 98,
           LA_STATE_OFFSET   = 948,
           MAX_LA            = 1,
           NUM_RULES         = 323,
           NUM_NONTERMINALS  = 52,
           NUM_SYMBOLS       = 150,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 324,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 97,
           EOLT_SYMBOL       = 65,
           ACCEPT_ACTION     = 624,
           ERROR_ACTION      = 625;

    public final static boolean BACKTRACK = false;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) { return 0; }
    public final int asi(int state) { return 0; }
    public final int nasi(int state) { return 0; }
    public final int inSymbol(int state) { return 0; }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
