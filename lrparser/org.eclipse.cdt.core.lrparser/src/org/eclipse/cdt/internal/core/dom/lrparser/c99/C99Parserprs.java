/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,4,
            4,3,3,2,2,8,1,0,1,1,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,3,2,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,5,5,6,6,2,2,2,1,0,
            1,2,4,2,1,1,1,3,1,1,
            2,3,6,7,1,0,1,3,1,3,
            1,1,1,1,1,1,3,1,1,1,
            1,1,3,1,2,2,1,5,3,1,
            3,5,1,3,1,3,2,4,3,5,
            4,6,6,3,5,1,1,2,3,4,
            1,2,1,3,1,1,3,2,1,1,
            1,1,2,1,2,3,1,1,1,3,
            1,2,2,2,3,4,5,1,5,1,
            1,3,3,4,1,1,2,3,2,3,
            2,1,0,1,2,1,1,1,1,1,
            2,4,3,6,2,4,-75,-240,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-2,-16,0,-4,0,
            -6,0,0,-8,-30,-50,0,0,0,-23,
            0,-77,-170,0,-47,-79,-18,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-3,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -5,0,0,0,0,0,0,0,0,-21,
            0,0,0,0,-70,0,0,-19,0,0,
            0,-115,0,-82,0,0,0,0,-28,0,
            0,0,0,0,0,0,0,0,0,-22,
            0,0,0,0,0,0,0,0,-37,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-186,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -196,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-271,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-32,-57,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-24,0,0,-262,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-27,0,0,0,0,-187,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-38,-74,0,-39,0,
            -188,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-53,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-25,0,0,-36,
            -177,0,0,0,0,0,0,0,0,0,
            -90,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-41,
            -125,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-64,
            -150,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-31,
            -181,0,0,0,0,0,0,0,0,0,
            0,-273,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-72,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-143,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -26,0,-179,0,0,0,0,0,0,0,
            0,0,0,0,-65,0,-152,-67,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-153,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-68,-154,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-71,-155,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-73,-156,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-84,-157,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-85,-158,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-93,-159,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-104,-160,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-105,-161,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-106,-162,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-107,-204,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-108,-206,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-210,-109,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-110,-185,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-211,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-40,-250,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-265,-61,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-180,0,0,
            0,0,0,0,0,0,0,0,0,-29,
            0,0,-276,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-258,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -42,0,-182,-10,0,0,0,0,0,0,
            0,0,0,-78,0,-111,0,-87,-112,0,
            0,-113,0,-114,0,-59,0,0,0,-62,
            -44,0,0,-11,0,0,0,0,0,0,
            0,-88,0,0,0,0,0,0,0,0,
            -35,0,0,0,-116,0,-83,0,0,0,
            0,0,0,0,0,0,0,0,0,-117,
            -183,0,0,0,0,0,0,0,0,0,
            0,-33,0,0,0,0,-43,0,-60,0,
            -13,0,0,0,0,0,0,0,0,0,
            -132,0,-69,0,0,0,-15,0,0,-86,
            0,0,0,0,0,0,-45,0,-121,0,
            0,0,0,0,0,-122,0,-123,0,-145,
            0,0,0,0,0,0,0,0,0,0,
            0,-193,0,-55,0,-96,0,0,0,0,
            0,0,0,0,0,0,0,-195,0,-48,
            0,0,-49,0,0,0,-144,0,0,0,
            0,0,0,-129,-242,0,0,0,0,0,
            -34,0,0,0,0,0,0,-203,0,0,
            0,0,0,-92,-124,0,0,0,0,0,
            0,-119,0,0,0,0,0,0,-147,0,
            -241,0,0,0,-194,0,-133,0,0,0,
            0,0,0,0,0,0,0,0,-20,0,
            -126,0,-190,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -52,0,0,-54,0,0,0,0,0,0,
            -266,-66,0,-135,0,-80,0,0,0,0,
            0,0,0,0,-136,0,-137,0,-139,0,
            0,0,0,0,0,0,-138,0,-200,0,
            -141,0,0,0,0,0,0,0,0,0,
            0,0,-134,0,0,0,0,0,0,-239,
            0,0,0,0,0,-140,0,0,0,0,
            0,0,0,0,-207,0,0,-146,-209,0,
            0,0,-168,-91,0,-151,0,0,0,0,
            0,0,0,-63,0,0,0,0,0,-245,
            0,-51,0,0,-221,0,0,0,0,0,
            0,0,0,-142,0,0,0,0,0,0,
            -169,0,-198,0,0,0,-163,0,-247,0,
            0,0,0,0,0,0,0,0,0,0,
            -191,0,0,0,0,0,0,0,0,0,
            -222,-164,0,-248,0,-192,0,-9,0,0,
            -223,-199,0,0,0,0,0,0,0,0,
            0,-215,0,0,0,-280,0,0,-224,-237,
            0,0,0,0,0,0,-149,0,0,0,
            0,0,0,0,0,0,-212,-283,0,0,
            0,-12,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-286,
            0,0,-225,-201,0,0,0,0,0,-202,
            -220,0,0,0,0,0,0,0,0,0,
            -56,0,-205,0,-249,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -226,0,0,-17,0,-208,-253,0,-251,0,
            0,0,-281,0,0,0,-197,0,-243,-217,
            -252,0,0,0,0,0,0,0,0,-1,
            0,0,0,0,0,0,0,0,0,-58,
            0,-7,0,0,0,0,0,0,0,-218,
            -219,0,0,-184,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-227,0,0,-228,0,0,0,0,0,
            0,0,0,0,-229,-230,-231,-232,0,0,
            0,0,-175,-238,0,0,0,0,0,0,
            0,0,0,-176,0,0,0,0,0,0,
            0,0,0,-216,0,-100,0,0,0,0,
            0,0,0,-165,0,-268,-233,-234,0,0,
            -235,0,-260,-236,-261,-256,0,-257,-263,-270,
            0,0,0,0,0,-274,-178,0,0,0,
            0,0,0,0,0,0,-89,0,0,-213,
            -14,0,0,0,0,0,0,0,0,0,
            0,0,0,-46,0,-76,0,0,0,0,
            0,0,0,-269,0,0,0,0,-282,0,
            -285,0,-81,0,-264,0,-254,0,-97,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-118,0,0,0,-94,0,0,-272,
            0,0,0,0,0,0,-98,0,0,0,
            0,0,0,0,0,-275,0,0,0,0,
            0,0,0,0,0,-279,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-99,0,0,
            0,0,0,0,0,-101,0,0,0,0,
            0,0,0,-120,-277,0,0,0,0,0,
            0,-127,0,0,-166,0,0,-167,0,-172,
            0,0,0,0,0,0,0,0,-284,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-173,0,0,0,0,0,0,
            0,0,0,0,0,0,-174,0,0,0,
            0,0,0,0,-255,0,0,-259,0,0,
            -214,0,0,0,0,0,0,0,-95,0,
            0,0,0,0,0,-148,0,-244,0,0,
            0,0,0,-102,0,0,0,0,0,0,
            -103,0,0,0,0,0,0,0,-267,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-278,0,-128,0,0,0,
            0,0,0,0,0,0,-130,0,-131,0,
            0,0,-171,0,0,0,0,0,0,0,
            0,0,0,0,-189,0,0,0,0,0,
            0,0,0,0,0,0,-246,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            102,1,32,32,23,23,33,33,19,19,
            2,2,2,2,3,3,3,4,4,5,
            5,5,5,5,5,5,5,67,67,88,
            88,6,6,6,6,6,6,6,6,6,
            6,6,7,7,8,8,8,8,9,9,
            9,10,10,10,11,11,11,11,11,12,
            12,12,13,13,14,14,15,15,16,16,
            17,17,18,18,21,21,21,21,21,21,
            21,21,21,21,21,21,34,27,20,103,
            103,90,90,54,35,35,35,35,35,35,
            35,36,36,36,28,28,91,91,68,68,
            37,37,38,38,38,60,60,39,39,39,
            39,40,40,40,40,40,46,46,22,22,
            22,22,22,47,47,47,83,83,78,78,
            78,78,79,79,79,80,80,80,81,81,
            81,82,82,82,92,92,84,84,85,48,
            50,50,50,50,50,61,63,63,63,63,
            63,63,63,63,63,63,63,63,72,72,
            24,24,69,69,69,69,70,70,70,73,
            73,74,74,64,64,64,52,104,104,93,
            94,94,94,71,71,95,95,96,96,86,
            86,25,26,26,26,49,51,51,41,41,
            41,41,29,29,30,42,42,43,31,31,
            97,97,44,106,106,105,105,45,45,45,
            45,45,45,45,45,45,98,53,53,53,
            53,75,75,65,65,65,66,66,55,55,
            107,107,77,77,76,76,76,56,56,56,
            57,58,58,58,59,59,59,59,62,62,
            89,89,89,89,87,108,109,109,110,110,
            111,111,102,102,112,112,99,99,99,99,
            113,113,100,100,100,101,101,289,693,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,380,510,91,700,
            1409,340,134,211,1528,573,636,512,222,227,
            277,1211,858,957,651,685,1135,578,126,217,
            1262,219,221,271,136,133,135,159,223,134,
            211,251,211,89,266,1571,1586,269,138,876,
            165,134,211,1090,327,183,142,145,148,151,
            419,144,133,135,159,1732,334,1588,1632,1851,
            1287,386,373,136,133,135,159,1455,134,211,
            398,1181,408,222,230,398,1281,138,609,165,
            298,1222,573,329,858,142,145,148,151,456,
            136,133,135,159,1732,334,1588,1632,1851,1287,
            970,207,303,305,138,228,165,297,104,473,
            1237,896,142,145,148,151,1741,182,408,222,
            231,1732,334,1588,1632,1851,1287,1401,127,14,
            19,15,936,42,44,956,996,976,1037,1778,
            331,1357,1355,14,19,15,936,916,44,956,
            996,976,1037,1016,1196,1055,1202,1199,1204,74,
            295,296,278,1357,1355,14,19,15,936,916,
            44,956,996,976,1037,1016,1196,1055,1202,1199,
            1204,74,812,1326,278,14,19,15,936,916,
            44,956,996,976,1037,1016,1196,1055,1202,1199,
            1204,74,1005,280,278,1278,1355,14,19,15,
            936,916,44,956,996,976,1037,1016,1196,1055,
            1202,1199,1204,74,1013,280,278,225,281,1401,
            1391,14,19,15,936,42,44,956,996,976,
            1037,1016,1196,1055,1817,157,569,700,1444,1014,
            281,1401,1703,14,19,15,936,42,44,956,
            996,976,1037,1016,1196,1818,126,282,1222,1374,
            14,19,15,936,916,44,956,996,976,1037,
            1016,1196,1055,1202,1199,1204,74,277,1864,1514,
            340,1401,283,14,19,15,936,42,44,1591,
            237,1423,2056,14,19,15,936,916,44,956,
            996,976,1037,1016,1196,1055,1202,1199,1204,74,
            472,1401,1617,14,19,15,936,916,44,956,
            996,976,1037,1016,1196,1055,1202,1199,1204,74,
            666,1245,91,14,19,15,936,916,44,956,
            996,976,1037,1016,1196,1055,1202,1199,1204,74,
            510,1401,1627,14,19,15,936,42,44,956,
            996,1762,1326,238,14,19,15,936,916,44,
            956,996,976,1037,1016,1196,1055,1202,1199,1204,
            74,302,1401,278,14,19,15,936,42,44,
            956,996,976,1037,1016,1196,1055,1202,1199,1204,
            93,1455,1401,1532,14,19,15,936,42,44,
            956,996,976,1037,1016,1196,1055,1202,1199,1204,
            93,277,345,1401,284,14,19,15,936,42,
            44,956,996,976,1653,837,1397,1401,931,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,210,1401,85,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,1015,1401,84,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,637,1401,83,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,1006,1401,82,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,1050,1401,81,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,162,1401,80,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,379,1401,79,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,1590,1401,78,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,521,1401,77,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,292,1401,76,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,860,1401,75,14,
            19,15,936,916,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,74,724,1401,92,14,
            19,15,936,42,44,956,996,976,1037,1016,
            1196,1055,1202,1199,1204,93,1401,312,14,19,
            15,936,916,44,956,996,976,1037,1016,1196,
            1055,1202,1199,1204,74,1062,1401,1699,14,19,
            15,936,42,44,956,996,976,1037,1016,1777,
            1401,201,14,19,15,936,916,44,956,996,
            976,1037,1016,1196,1055,1202,1199,1204,74,510,
            1401,1711,14,19,15,936,42,44,956,996,
            976,1037,1016,1196,1055,1202,1199,1204,93,1401,
            852,14,19,15,936,42,44,956,996,976,
            1037,1016,1196,1055,1202,1199,1204,93,1401,123,
            14,19,15,936,42,44,956,996,976,1691,
            344,336,1730,1401,202,14,19,15,936,42,
            44,956,996,976,1037,1016,1196,1055,1202,1199,
            1204,93,1401,1836,14,19,15,936,42,44,
            956,996,976,1037,1016,1196,1055,1202,1199,1204,
            73,175,307,1401,396,14,19,15,936,42,
            44,956,996,1765,700,1496,1051,1879,636,647,
            110,86,1018,577,438,856,1,307,430,95,
            852,865,346,194,512,1283,108,94,96,97,
            98,99,683,251,211,110,86,109,577,122,
            856,277,1324,196,95,522,1395,46,532,306,
            1283,108,94,96,97,98,99,252,211,106,
            439,1401,109,14,19,15,936,42,44,956,
            996,1775,701,1194,512,222,227,277,1866,700,
            651,571,1206,1508,107,191,216,1262,219,221,
            271,232,307,852,342,1446,260,1135,124,87,
            685,264,1571,1586,269,554,1375,277,1883,529,
            110,86,111,577,1544,856,1140,226,59,95,
            46,261,134,211,876,1283,108,94,96,97,
            98,99,347,1490,277,346,1401,109,14,19,
            15,936,42,39,137,133,135,159,1190,346,
            277,1290,258,626,1198,274,577,803,139,106,
            165,512,222,227,1058,1137,143,146,149,152,
            1235,805,1434,216,1262,219,221,271,117,307,
            300,876,1368,335,636,852,207,1696,264,1571,
            1586,269,277,471,229,1310,896,110,86,696,
            577,1195,856,257,125,510,95,1141,1784,251,
            211,105,1283,108,94,96,97,98,99,403,
            1089,852,232,1401,109,14,19,15,936,42,
            44,956,996,976,1037,1016,1196,1055,1202,1824,
            121,805,1847,208,1145,346,107,1903,512,222,
            579,1185,431,651,403,690,1000,346,308,1516,
            216,1262,219,650,229,1010,1235,1489,1825,858,
            158,110,86,1829,1441,286,856,1499,196,1021,
            95,858,671,512,222,227,1283,1354,94,96,
            97,98,99,488,651,216,1262,219,221,256,
            1100,346,185,154,576,158,627,690,1194,412,
            1250,439,110,86,184,1192,620,856,741,553,
            192,95,1235,920,1093,1231,744,1283,101,94,
            96,97,98,99,803,512,222,227,154,576,
            545,651,456,252,211,916,439,216,1262,219,
            221,252,211,308,858,256,239,1505,1411,110,
            86,920,287,852,856,1823,1250,573,95,602,
            651,512,222,227,1283,118,94,96,97,98,
            99,923,2058,217,1262,219,221,203,110,86,
            2041,961,573,856,659,651,928,95,1538,197,
            199,742,573,1283,114,94,96,97,98,99,
            1673,23,510,110,86,16,716,651,856,795,
            805,2038,95,134,211,1530,273,1093,1283,1830,
            94,96,97,98,99,110,86,1093,773,651,
            856,272,1561,275,95,147,133,135,159,22,
            1283,113,94,96,97,98,99,110,86,241,
            830,651,856,514,573,1887,95,134,211,240,
            573,1093,1283,120,94,96,97,98,99,110,
            86,403,690,757,856,627,690,1559,95,150,
            133,135,159,1584,1283,119,94,96,97,98,
            99,570,193,20,403,690,858,277,493,1093,
            512,222,227,1195,512,222,227,681,651,852,
            573,1093,216,1262,219,221,216,1262,219,221,
            334,373,158,512,222,227,1505,87,2079,204,
            456,242,1180,1826,115,216,1262,219,221,298,
            573,573,329,243,1401,335,14,19,15,936,
            42,44,956,996,1776,155,576,134,211,512,
            222,1306,867,1828,21,912,297,1709,198,199,
            1881,217,1262,219,1299,1002,1047,1181,743,141,
            133,135,159,1401,573,14,19,15,936,42,
            44,956,1535,140,1401,165,14,19,15,936,
            42,44,956,1581,579,2035,1301,270,14,19,
            15,936,42,35,756,1602,852,1106,1108,294,
            296,1269,326,573,1113,858,1147,274,1148,1272,
            702,2191,391,2191,2191,2095,1093,1401,244,14,
            19,15,936,42,44,1609,276,1055,346,271,
            1301,1571,14,19,15,936,42,35,279,271,
            264,1571,1586,269,910,346,955,346,288,1235,
            264,1571,1586,269,573,2191,134,211,2191,1093,
            1784,858,245,1045,346,803,196,811,196,1401,
            263,14,19,15,936,42,38,1936,153,133,
            135,159,256,1101,346,196,2191,277,307,289,
            573,290,412,1250,26,2191,1194,1401,1194,14,
            19,15,936,42,37,577,803,87,191,196,
            191,304,271,277,1582,1194,852,414,1446,1459,
            1446,2191,2191,266,1571,1586,269,191,2191,301,
            291,2191,1389,2191,2191,117,1471,1446,1401,1814,
            14,19,15,936,42,36,1401,2191,14,19,
            15,936,42,34,1401,573,14,19,15,936,
            42,35,681,307,1557,277,307,2191,277,307,
            1401,2191,14,19,15,936,42,47,1628,573,
            2191,2191,87,2191,577,87,2191,196,87,115,
            196,2191,1582,2191,1401,1582,14,19,15,936,
            42,46,1650,2191,2191,2191,2191,1401,1707,14,
            19,15,936,42,45,1100,346,1814,1145,346,
            1814,1379,1553,14,19,15,936,42,43,1445,
            2191,14,19,15,936,40,636,1235,681,651,
            1235,2191,1710,2191,1467,1740,14,19,15,936,
            33,1467,2191,14,19,15,936,32,87,681,
            651,251,211,2191,2191,115,2191,2191,1887,2191,
            256,2191,2191,256,2191,681,651,277,651,87,
            1823,1250,2191,1910,1250,2191,115,277,651,277,
            651,2191,2191,277,651,87,2191,87,1816,2191,
            2191,2191,115,2191,1592,277,651,87,2191,87,
            2191,1516,2191,87,1654,2191,1660,277,651,1975,
            1661,2191,2191,2191,2191,87,2191,2191,2191,2191,
            2191,2191,1821,2191,1036,1999,2191,87,2191,2191,
            2191,2191,2191,2191,1874,2191,0,179,224,0,
            2198,1,0,1,2426,0,7,9,0,179,
            17,0,178,18,0,1,2415,0,112,1606,
            0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,0,46,47,48,49,
            50,51,52,53,54,55,56,57,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,58,46,47,48,49,50,51,
            52,53,54,55,56,57,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,0,46,47,48,49,50,51,52,53,
            54,55,56,57,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,58,
            46,47,48,49,50,51,52,53,54,55,
            56,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,0,46,47,48,
            49,50,51,52,53,54,55,56,0,1,
            2,0,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,0,24,25,26,27,28,0,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,0,1,2,3,4,5,0,
            7,8,9,0,0,6,0,1,2,3,
            7,8,9,62,63,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,0,0,
            69,70,71,72,0,0,1,2,3,4,
            5,45,7,8,9,0,1,0,0,4,
            3,6,0,1,2,59,73,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            0,1,2,3,4,5,6,0,0,61,
            10,11,12,13,14,15,16,17,18,19,
            20,21,73,23,57,0,1,2,73,29,
            5,83,84,85,86,87,88,89,90,91,
            92,0,0,0,3,3,46,47,48,49,
            50,51,52,53,54,55,56,0,1,2,
            3,4,5,6,23,23,58,10,11,12,
            13,14,15,16,17,18,19,20,21,0,
            23,0,1,0,5,4,29,6,81,82,
            0,0,1,2,0,5,5,0,0,58,
            58,3,61,46,47,48,49,50,51,52,
            53,54,55,56,0,1,2,3,4,5,
            6,23,0,1,10,11,12,13,14,15,
            16,17,18,19,20,21,45,23,0,0,
            0,1,0,29,4,3,6,0,0,2,
            2,3,69,70,71,72,58,67,68,61,
            46,47,48,49,50,51,52,53,54,55,
            56,0,1,2,3,4,5,6,0,0,
            2,10,11,12,13,14,15,16,17,18,
            19,20,21,45,23,0,0,1,2,61,
            29,59,7,8,9,0,0,59,69,70,
            71,72,7,8,9,0,0,46,47,48,
            49,50,51,52,53,54,55,56,0,1,
            2,3,4,5,6,0,0,2,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,23,0,3,0,1,60,29,4,7,
            8,9,0,1,2,0,60,5,3,0,
            0,0,3,23,46,47,48,49,50,51,
            52,53,54,55,56,0,1,2,3,4,
            5,6,23,0,78,10,11,12,13,14,
            15,16,17,18,19,20,21,45,23,59,
            0,0,0,0,29,45,5,7,8,9,
            7,8,9,58,59,0,0,2,0,3,
            5,46,47,48,49,50,51,52,53,54,
            55,56,0,1,2,3,4,5,6,23,
            79,0,10,11,12,13,14,15,16,17,
            18,19,20,21,0,23,0,74,75,5,
            45,29,0,1,0,0,4,3,67,68,
            0,0,2,2,58,5,74,75,46,47,
            48,49,50,51,52,53,54,55,56,0,
            1,2,3,4,5,6,0,0,2,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,23,0,3,45,45,0,29,0,
            3,67,68,59,0,1,0,3,4,10,
            11,7,8,9,23,46,47,48,49,50,
            51,52,53,54,55,56,22,0,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,0,
            1,0,3,4,57,0,7,8,9,0,
            1,57,0,4,2,10,11,0,62,63,
            0,22,2,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,0,1,0,3,4,3,
            0,7,8,9,0,1,57,45,4,0,
            10,11,45,62,63,6,22,0,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,0,
            1,0,3,4,0,0,7,8,9,0,
            6,57,0,0,0,59,2,0,6,6,
            0,22,2,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,0,1,0,3,4,0,
            0,7,8,9,0,1,57,0,0,0,
            0,0,12,62,63,60,22,58,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,0,
            1,2,0,4,77,3,7,8,9,0,
            0,57,0,46,5,0,6,0,62,63,
            61,22,0,24,25,26,27,28,64,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,0,1,0,76,4,0,
            0,7,8,9,0,6,0,0,0,0,
            0,0,6,6,0,0,22,65,24,25,
            26,27,28,64,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,0,
            0,45,77,76,0,0,7,8,9,0,
            78,0,12,0,0,0,0,0,0,0,
            60,22,66,24,25,26,27,28,64,30,
            31,32,33,34,35,36,37,38,39,40,
            41,0,1,2,3,4,5,0,0,45,
            0,10,11,12,13,14,15,16,17,18,
            19,20,21,22,0,1,2,3,4,5,
            66,60,58,64,10,11,12,13,14,15,
            16,17,18,19,20,21,22,0,0,0,
            0,0,0,0,0,0,0,0,1,2,
            3,4,5,6,0,0,65,10,11,12,
            13,14,15,16,17,18,19,20,21,0,
            0,1,2,3,4,5,0,0,0,65,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,0,0,0,1,2,60,4,
            5,6,61,60,57,10,11,12,13,14,
            15,16,17,18,19,20,21,0,0,0,
            0,0,0,0,0,0,0,1,2,60,
            4,5,6,0,0,65,10,11,12,13,
            14,15,16,17,18,19,20,21,0,1,
            2,0,4,5,6,0,0,0,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,1,2,0,4,5,0,0,0,0,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,1,2,0,4,5,0,0,
            0,0,10,11,12,13,14,15,16,17,
            18,19,20,21,0,1,2,0,4,5,
            0,0,0,0,10,11,12,13,14,15,
            16,17,18,19,20,21,0,1,2,0,
            4,5,0,0,0,0,10,11,12,13,
            14,15,16,17,18,19,20,21,0,1,
            2,3,0,5,0,7,8,9,0,1,
            2,3,0,5,0,7,8,9,0,0,
            22,23,24,25,26,27,28,0,0,0,
            22,23,24,25,26,27,28,0,0,0,
            0,0,0,45,7,8,9,0,0,0,
            0,0,0,45,7,8,9,59,0,22,
            0,24,25,26,27,28,0,59,0,22,
            0,24,25,26,27,28,0,7,8,9,
            0,0,0,0,0,0,0,7,8,9,
            0,0,22,0,24,25,26,27,28,0,
            0,2,22,0,24,25,26,27,28,0,
            0,0,13,14,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,45,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,66,0,0,0,0,
            0,0,0,0,0,0,0,0,0,80,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2191,3797,1,1308,3771,1,405,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2199,1,1,1,1,1,2291,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,28,775,1110,722,1210,
            836,1442,670,1524,816,1269,778,2197,7,2176,
            2176,2176,2176,2176,2176,2176,2176,2176,2176,2176,
            2176,2176,2176,2176,2176,2176,2176,2176,2176,2176,
            2176,2176,2176,2176,2176,2176,2176,2176,2176,2176,
            2176,2176,2176,2176,2176,2176,2176,2176,2176,2176,
            2176,2176,2176,2218,2176,2176,2176,2176,2176,2176,
            2176,2176,2176,2176,2176,2176,2191,3797,1,1308,
            3771,1,405,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2199,
            1,1,1,1,1,2291,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,205,775,1110,722,1210,836,1442,670,1524,
            816,1269,778,2197,2191,3797,1,2200,3771,1,
            405,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,2199,1,1,
            1,1,1,2291,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,3462,
            775,1110,722,1210,836,1442,670,1524,816,1269,
            778,2191,3797,1,2200,3771,1,405,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2199,1,1,1,1,1,
            2291,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,775,1110,722,
            1210,836,1442,670,1524,816,1269,778,2191,1457,
            1907,54,1467,1974,2191,2403,2404,2405,1958,1917,
            1966,2071,2064,2049,2201,2202,2203,2204,1889,1326,
            2353,59,2354,2352,2406,2355,2351,2191,2358,2363,
            2362,2360,2361,2359,2364,2365,2357,2366,2367,2368,
            1271,1214,1184,2191,1,1,2200,1,1,2191,
            1,1,1,247,2191,400,1,2185,1322,2196,
            1,1,1,1783,1794,1,2199,1,1,1,
            1,1,2490,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,42,2191,
            1744,1251,1183,691,2191,2191,1,1,2200,1,
            1,598,1,1,1,2191,2371,1,2191,2372,
            2170,340,1,2415,1694,2195,293,1,2199,1,
            1,1,1,1,2490,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2191,3797,1,2200,3771,1,405,72,253,977,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2166,2199,2197,2191,2415,1694,292,2291,
            1343,957,937,917,897,877,837,857,817,797,
            777,233,2191,2191,221,2200,775,1110,722,1210,
            836,1442,670,1524,816,1269,778,2191,3797,1,
            2200,3771,1,405,221,2199,1338,1,1,1,
            1,1,1,1,1,1,1,1,1,2191,
            2199,2191,2371,61,1140,2372,2291,617,1413,2125,
            48,259,2415,1322,2191,2027,1,2191,234,221,
            1671,221,221,775,1110,722,1210,836,1442,670,
            1524,816,1269,778,2191,3797,1,2200,3771,1,
            405,221,2191,2427,1,1,1,1,1,1,
            1,1,1,1,1,1,598,2199,156,60,
            2191,2371,2191,2291,2372,2196,761,179,1,2167,
            1804,2196,1744,1251,1183,691,221,2014,1990,221,
            775,1110,722,1210,836,1442,670,1524,816,1269,
            778,2191,3797,1,2200,3771,1,405,2191,2191,
            1361,1,1,1,1,1,1,1,1,1,
            1,1,1,598,2199,248,1,2415,1694,513,
            2291,2195,1,1,1,2191,2191,2195,1744,1251,
            1183,691,2403,2404,2405,2191,70,775,1110,722,
            1210,836,1442,670,1524,816,1269,778,2191,3797,
            1,2200,3771,1,405,2191,2191,1982,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2199,249,116,206,2371,1017,2291,2372,2403,
            2404,2405,265,2415,1322,2191,2294,1343,2196,1,
            218,112,2200,116,775,1110,722,1210,836,1442,
            670,1524,816,1269,778,2191,3797,1,2200,3771,
            1,405,2199,62,559,1,1,1,1,1,
            1,1,1,1,1,1,1,598,2199,116,
            250,50,63,246,2291,598,2027,2403,2404,2405,
            2403,2404,2405,1509,2195,262,2191,1804,2191,2200,
            1,775,1110,722,1210,836,1442,670,1524,816,
            1269,778,2191,3797,1,2200,3771,1,405,2199,
            2188,2191,1,1,1,1,1,1,1,1,
            1,1,1,1,49,2199,2191,1128,763,2027,
            598,2291,2191,2371,1,2191,2372,2196,2014,1990,
            265,220,1804,1431,1675,1343,1128,763,775,1110,
            722,1210,836,1442,670,1524,816,1269,778,2191,
            3797,1,2200,3771,1,405,2191,2191,2097,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2191,2199,2191,2200,598,598,2191,2291,51,
            2198,2014,1990,2195,2191,1,58,190,1,1837,
            621,1,1,1,2199,775,1110,722,1210,836,
            1442,670,1524,816,1269,778,1,2191,1,1,
            1,1,1,2386,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2191,
            1,57,190,1,2197,53,1,1,1,2191,
            2220,190,267,2221,1610,1837,621,268,1783,1794,
            2191,1,2107,1,1,1,1,1,2386,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2191,1,1,190,1,90,
            52,1,1,1,205,1347,190,598,1347,187,
            1837,621,598,1783,1794,1267,1,2191,1,1,
            1,1,1,2386,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2191,
            1,56,189,1,186,2191,1,1,1,88,
            1297,190,188,227,2191,90,2109,68,1340,230,
            2191,1,2137,1,1,1,1,1,2386,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2191,1,55,190,1,209,
            64,1,1,1,1,2173,189,2191,2191,2191,
            2191,66,457,1783,1794,1483,1,997,1,1,
            1,1,1,2386,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            347,1694,2191,2369,581,2194,2403,2404,2405,1,
            1,190,2191,1469,1140,69,405,67,1783,1794,
            742,2353,71,2354,2352,2406,2355,2351,2446,2358,
            2363,2362,2360,2361,2359,2364,2365,2357,2366,2367,
            2368,1271,1214,1184,2191,2370,2191,1056,2369,227,
            2191,2403,2404,2405,1,231,41,2191,2191,2191,
            2191,2191,1697,1697,2191,2191,2353,2193,2354,2352,
            2406,2355,2351,2446,2358,2363,2362,2360,2361,2359,
            2364,2365,2357,2366,2367,2368,1271,1214,1184,128,
            65,1109,581,1056,285,2191,2403,2404,2405,1,
            559,200,457,2191,28,2191,2191,2191,2191,2191,
            2293,2353,1885,2354,2352,2406,2355,2351,2446,2358,
            2363,2362,2360,2361,2359,2364,2365,2357,2366,2367,
            2368,1,2208,1907,2194,2209,1806,2191,2191,1143,
            2191,1958,1917,1966,2071,2064,2049,2201,2202,2203,
            2204,1889,1326,631,2191,2208,1907,2194,2209,1850,
            1926,1090,535,2445,1958,1917,1966,2071,2064,2049,
            2201,2202,2203,2204,1889,1326,1070,2191,2191,2191,
            2191,2191,2191,1,2191,2191,2191,1,2208,1907,
            27,2209,1974,1382,2191,2191,2193,1958,1917,1966,
            2071,2064,2049,2201,2202,2203,2204,1889,1326,1,
            2191,2208,1907,2194,2209,1974,2191,2191,2191,2193,
            1958,1917,1966,2071,2064,2049,2201,2202,2203,2204,
            1889,1326,2191,2191,2191,2191,2208,1907,1162,2209,
            1974,1382,702,2372,27,1958,1917,1966,2071,2064,
            2049,2201,2202,2203,2204,1889,1326,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,1,2208,1907,2371,
            2209,1974,1382,2191,2191,2193,1958,1917,1966,2071,
            2064,2049,2201,2202,2203,2204,1889,1326,2191,2208,
            1907,2191,2209,1974,1697,2191,2191,2191,1958,1917,
            1966,2071,2064,2049,2201,2202,2203,2204,1889,1326,
            2191,2208,1907,2191,2209,1974,2191,2191,2191,2191,
            1958,1917,1966,2071,2064,2049,2201,2202,2203,2204,
            1889,1326,1,2208,1907,2191,2209,1974,2191,2191,
            2191,2191,1958,1917,1966,2071,2064,2049,2201,2202,
            2203,2204,1889,1326,2191,2208,1985,2191,2209,1974,
            2191,2191,2191,2191,1958,1917,1966,2071,2064,2049,
            2201,2202,2203,2204,1889,1326,2191,2208,1988,2191,
            2209,1974,2191,2191,2191,2191,1958,1917,1966,2071,
            2064,2049,2201,2202,2203,2204,1889,1326,17,179,
            2179,2179,2191,2179,2191,179,179,179,18,178,
            2182,2182,2191,2182,2191,178,178,178,2191,2191,
            179,2179,179,179,179,179,179,2191,2191,2191,
            178,2182,178,178,178,178,178,129,2191,2191,
            2191,2191,2191,2179,2403,2404,2405,130,2191,2191,
            2191,2191,2191,2182,2403,2404,2405,2179,2191,2353,
            2191,2354,2352,2406,2355,2351,2191,2182,2191,2353,
            131,2354,2352,2406,2355,2351,2191,2403,2404,2405,
            132,2191,2191,2191,2191,2191,2191,2403,2404,2405,
            2191,2191,2353,2191,2354,2352,2406,2355,2351,31,
            2191,343,2353,2191,2354,2352,2406,2355,2351,2191,
            2191,2191,2215,2216,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2113,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,1551,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,1513
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            442,1,262,407,442,577,475,487,487,575,
            575,487,575,487,264,360,409,398,473,409,
            234,52,3,52,3,177,52,409,495,503,
            360,72,73,294,264,577,228,546,545,360,
            146,235,3,3,3,3,177,177,495,287,
            409,294,103,296,264,409,85,409,234,343,
            229,229,321,473,473,330,473,473,229,234,
            70,345,70,407,250,3,30,65,264,3,
            3,30,179,183,179,177,287,495,296,126,
            123,287,194,250,345,345,345,345,345,107,
            345,345,345,188,205,210,208,216,212,219,
            218,221,220,222,503,498,502,551,83,345,
            146,545,232,229,345,229,248,345,324,345,
            345,235,70,330,409,225,362,362,30,67,
            30,30,345,321,179,495,502,287,123,106,
            103,345,345,345,345,345,345,345,345,345,
            345,345,503,503,506,250,250,321,321,33,
            345,345,345,345,345,345,345,345,345,345,
            345,345,345,345,345,345,345,345,345,345,
            500,501,291,360,296,83,343,229,503,473,
            503,503,234,345,228,345,227,30,411,345,
            345,123,107,85,360,291,503,503,503,123,
            208,208,205,205,212,212,210,210,210,210,
            218,216,220,219,70,221,294,503,413,498,
            179,327,229,343,330,345,330,330,67,345,
            123,123,83,506,413,512,577,345,296,503,
            30,81,549,321,345,326,33,229,503,233,
            83,503,85,123,321,345,503,33,229,330,
            179,123,330,503,30,330
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            73,0,24,30,7,31,42,25,32,26,
            33,34,27,8,35,36,22,43,28,44,
            37,38,9,39,40,41,1,4,29,57,
            3,0,3,59,15,16,17,18,19,1,
            4,2,13,14,12,5,10,11,20,21,
            0,24,7,25,26,27,8,22,28,9,
            45,58,59,6,23,3,5,1,2,60,
            0,2,3,60,61,58,59,23,45,0,
            3,57,45,66,2,16,17,18,19,1,
            4,13,14,12,5,10,11,20,21,15,
            6,0,7,8,9,22,13,14,12,5,
            10,11,20,21,15,2,1,4,16,17,
            18,19,65,3,0,7,8,9,13,14,
            12,5,10,11,20,21,15,2,1,4,
            16,17,18,19,0,24,30,7,31,42,
            25,32,26,33,34,27,8,35,36,22,
            43,28,44,37,38,9,39,40,41,1,
            4,3,61,58,23,0,1,4,3,57,
            58,0,3,58,57,61,0,45,2,66,
            80,13,14,61,83,84,85,86,87,89,
            88,90,91,92,5,67,68,10,11,63,
            62,69,70,71,72,74,75,12,76,77,
            78,57,81,82,65,59,60,58,23,3,
            0,73,79,57,48,50,6,54,56,51,
            46,52,53,49,47,55,29,3,23,16,
            17,18,19,13,14,12,10,11,20,21,
            15,5,2,4,1,42,43,44,38,30,
            35,33,34,32,31,36,37,39,40,41,
            28,25,22,24,27,26,7,8,9,0,
            5,2,45,59,3,24,30,7,31,42,
            25,32,26,33,34,27,8,35,36,22,
            43,28,44,37,38,9,39,40,41,64,
            1,4,0,46,0,61,45,66,0,48,
            50,6,54,56,51,46,52,53,49,47,
            55,29,23,3,13,14,12,10,11,20,
            21,15,2,1,4,16,17,18,19,5,
            0,66,80,13,14,12,10,11,67,68,
            62,63,69,70,71,72,74,75,76,77,
            78,81,82,61,83,84,85,86,87,88,
            89,90,91,92,58,45,59,24,7,25,
            26,27,8,22,28,9,23,3,5,2,
            1,0,24,30,7,31,42,25,32,26,
            33,34,27,8,35,36,22,43,28,44,
            37,38,9,39,40,41,1,4,64,5,
            0,73,24,30,7,31,42,25,32,26,
            33,34,27,8,35,36,22,43,28,44,
            37,38,9,39,40,41,1,4,5,23,
            3,29,2,0,38,30,35,33,34,32,
            31,36,37,39,40,41,60,23,28,25,
            22,24,27,26,7,8,9,5,1,2,
            45,58,59,3,0,3,59,5,2,45,
            0,12,5,10,11,67,68,62,63,69,
            70,71,72,74,75,76,77,78,81,82,
            60,83,84,85,86,87,88,89,90,91,
            92,65,59,57,6,3,58,23,61,0,
            24,30,7,31,42,25,32,26,33,34,
            27,8,35,36,22,43,28,44,37,38,
            9,39,40,41,1,4,6,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            121,25,16,68,26,9,75,76,76,50,
            50,76,50,76,71,113,117,25,25,94,
            30,25,57,25,57,57,25,33,57,92,
            113,36,36,91,57,9,69,25,25,113,
            25,46,57,59,57,59,50,57,57,11,
            97,91,42,56,85,117,7,95,52,67,
            69,69,50,25,25,102,25,25,69,30,
            25,7,25,68,1,59,31,68,19,107,
            59,31,65,25,25,50,11,63,130,39,
            44,11,25,139,7,7,7,7,7,43,
            7,7,7,25,25,25,25,25,25,25,
            25,25,25,25,92,79,25,134,57,7,
            25,25,25,69,7,69,143,140,25,140,
            140,46,25,102,117,25,25,25,31,117,
            31,31,7,50,65,63,92,11,44,43,
            63,7,7,7,7,7,7,7,7,7,
            7,7,92,92,126,139,139,115,115,13,
            140,7,7,7,7,7,7,7,7,7,
            7,7,7,7,7,7,7,7,140,7,
            36,36,78,113,56,39,145,69,92,25,
            92,92,52,7,69,7,25,31,25,7,
            7,44,43,7,113,125,92,92,92,44,
            25,25,25,25,25,25,25,25,25,25,
            25,25,25,25,25,25,91,92,111,80,
            65,89,69,145,102,140,102,102,117,7,
            44,44,57,82,111,25,25,7,56,92,
            31,38,25,50,7,100,145,69,92,25,
            39,92,7,44,50,7,92,145,69,102,
            65,44,102,92,31,102
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            83,82,81,80,79,78,5,0,101,0,
            75,0,1,103,0,29,1,97,83,82,
            81,80,79,78,0,22,1,99,0,1,
            33,0,29,31,0,45,0,87,5,1,
            0,1,5,32,0,1,22,34,91,24,
            0,34,24,68,33,22,1,0,74,1,
            52,0,25,0,67,0,27,1,19,0,
            69,70,71,72,61,47,0,23,1,29,
            42,58,57,0,22,1,113,0,109,0,
            1,23,0,1,31,44,29,42,0,111,
            0,24,34,1,35,0,1,52,64,0,
            1,22,53,0,88,0,42,29,1,0,
            112,22,1,0,23,57,58,1,0,105,
            1,22,0,1,22,46,28,0,52,1,
            27,0,22,46,1,60,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,87,86,9,3,48,64,76,10,
            11,8,6,7,68,81,82,83,84,12,
            13,69,92,44,55,60,63,72,93,47,
            52,56,61,62,66,67,74,75,78,79,
            80,54,70,73,1,77,45,46,49,50,
            51,57,58,59,65,71,91,42,90,29,
            31,16,17,30,89,4,14,15,18,19,
            20,21,94,22,23,24,25,26,53,5,
            27,28,32,33,34,35,36,37,38,39,
            40,41,88
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,0,100,104,105,106,107,108,
            109,110,111,112,113,114,115,116,98,0,
            117,127,96,123,135,0,99,122,156,0,
            159,95,97,118,121,0,0,0,0,0,
            153,155,0,157,158,126,134,0,0,0,
            145,148,154,120,167,170,171,172,0,0,
            137,144,0,147,160,166,0,125,138,139,
            140,141,0,146,165,169,102,129,130,131,
            132,133,136,142,143,152,173,101,103,119,
            124,128,150,0,0,151,161,164,178,0,
            180,0,0,149,162,163,168,174,175,0,
            176,177,179,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            168,80,33,39,87,107,113,138,12,19,
            49,67,119,124,26,45,97,147,164,183,
            187,151,1,1,30,54,77,191,6,101,
            158,129,158,93,57,57,57
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            17,17,4,4,17,17,17,144,17,24,
            4,24,17,17,24,4,95,17,24,24,
            4,155,4,4,24,4,24,24,9,104,
            161,132,176,95,64,59,72
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            5,71,45,45,71,69,69,38,62,59,
            45,31,69,69,59,45,64,28,6,5,
            5,18,111,110,57,45,29,3,87,64,
            7,39,5,64,31,44,31
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            57,57,65,65,57,57,57,79,57,59,
            65,59,57,57,59,65,23,57,59,59,
            65,60,65,65,59,65,59,59,61,1,
            59,46,59,23,2,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            5,112,87,87,112,112,112,74,61,91,
            87,98,112,112,91,87,67,73,5,5,
            5,35,1,3,91,87,98,5,63,67,
            8,74,5,67,98,100,98
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            147,45,0,95,0,201,94,0,31,144,
            0,160,182,94,6,0,97,0,158,94,
            2,150,0,96,0,158,94,2,0,169,
            2,0,114,22,191,94,45,0,114,191,
            94,22,45,0,114,22,45,0,114,191,
            94,45,0,114,45,0,122,0,2,0,
            162,96,0,2,96,0,158,94,2,122,
            0,2,0,160,96,0,144,2,0,160,
            188,94,6,117,42,0,160,188,94,6,
            42,0,145,0,98,0,197,94,145,0,
            94,145,0,149,98,0,166,94,6,117,
            44,0,166,94,6,117,43,0,166,94,
            6,44,0,166,94,6,43,0,128,51,
            0,77,2,99,96,98,0,128,116,120,
            2,54,0,53,121,0,184,94,6,0,
            120,82,110,0,29,116,0,170,2,0,
            96,105,0,170,2,15,0,160,182,94,
            6,116,170,2,0,96,3,0,103,0,
            97,0,196,2,98,0,120,45,98,0,
            120,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1441,0,1355,0,2071,2064,2049,2041,1850,1413,
            581,559,457,1056,1744,1251,1183,691,1128,763,
            1837,621,1794,1783,2027,2014,1990,1974,1966,1806,
            1958,1917,1889,1326,1143,1109,1162,1090,1070,1036,
            1017,997,977,957,937,917,897,877,857,837,
            817,797,777,671,742,651,631,307,722,598,
            702,513,493,535,471,0,1883,1446,1866,1864,
            1211,0,1903,1650,1628,1606,1584,1559,1530,1368,
            1483,1281,1442,1206,1181,0,1586,1571,1262,512,
            1887,308,1804,1322,1814,1235,0,419,373,1675,
            308,1322,1496,1444,1235,1730,1671,1532,1409,1694,
            0,346,307,1287,373,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,195,94,115,205,190,171,172,173,44,
            43,174,42,175,176,94,2,1,122,94,
            6,117,6,117,6,6,117,146,5,144,
            94,122,135,2,199,190,185,178,124,94,
            137,94,6,94,6,94,94,6,5,94,
            146,2,45,94,94,58,61,146,184,55,
            47,49,53,52,46,51,56,54,127,6,
            50,48,117,115,94,94,166,145,94,167,
            94,166,188,117,189,94,94,168,94,22,
            114,94,99,2,15,21,20,11,10,5,
            12,14,13,98,101,103,102,105,104,107,
            106,109,108,110,158,115,159,206,6,5,
            137,124,3,120,94,117,2,2,128,2,
            2,94,147,60,94,183,1,4,166,94,
            166,160,61,58,188,168,198,94,114,191,
            168,92,91,90,88,89,87,86,85,84,
            83,61,170,120,145,2,2,80,66,2,
            45,68,67,5,62,63,11,10,75,74,
            72,71,70,69,76,12,78,77,82,81,
            150,151,2,94,58,94,139,153,120,46,
            120,120,184,58,197,60,144,160,58,191,
            22,114,5,116,94,2,170,170,196,120,
            102,102,101,101,104,104,103,103,103,103,
            106,105,108,107,120,109,2,169,94,146,
            182,94,153,112,116,2,116,116,58,60,
            114,114,6,146,94,116,116,60,94,158,
            160,58,201,66,45,202,112,153,120,128,
            94,158,61,147,66,45,153,112,116,79,
            182,147,116,153,160,116
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "member_name",
            "type_name",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "identifier_or_typedefname",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "typedef_name_in_declspec",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 36,
           SCOPE_SIZE        = 37,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 286,
           NT_OFFSET         = 93,
           LA_STATE_OFFSET   = 2497,
           MAX_LA            = 2147483647,
           NUM_RULES         = 306,
           NUM_NONTERMINALS  = 114,
           NUM_SYMBOLS       = 207,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1720,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 2166,
           ERROR_ACTION      = 2191;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
