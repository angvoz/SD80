/**********************************************************************
 * Copyright (c) 2004 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors: 
 * IBM - Initial API and implementation
 **********************************************************************/
package org.eclipse.cdt.managedbuilder.makegen;

import org.eclipse.cdt.managedbuilder.core.IManagedBuildInfo;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IResourceDelta;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.IProgressMonitor;

/**
 * @since 2.0
 */
public interface IManagedBuilderMakefileGenerator {
	/**
	 * @throws CoreException
	 */
	public void generateDependencies() throws CoreException;

	/**
	 * Clients call this method when an incremental rebuild is required. The argument
	 * contains a set of resource deltas that will be used to determine which 
	 * subdirectories need a new makefile and dependency list (if any). 
	 * 
	 * @param delta
	 * @throws CoreException
	 */
	public void generateMakefiles(IResourceDelta delta)  throws CoreException ;
	
	/**
	 * Answers the path of the top directory generated for the build
	 * output, or <code>null</code> if none has been generated.
	 * 
	 * @return <code>IPath</code> to the working directory of the build
	 */
	public IPath getBuildWorkingDir();

	/**
	 * Answers the name of the top-level makefile generated by the receiver.
	 * 
	 * @return name of the makefile.
	 */
	public String getMakefileName();
	
	/**
	 * @param project
	 * @param info
	 * @param monitor
	 */
	public void initialize(IProject project, IManagedBuildInfo info, IProgressMonitor monitor);	

	/**
	 * @param force
	 * @throws CoreException
	 */
	public void regenerateDependencies(boolean force) throws CoreException;
	
	/**
	 * @throws CoreException
	 */
	public void regenerateMakefiles() throws CoreException;

}
