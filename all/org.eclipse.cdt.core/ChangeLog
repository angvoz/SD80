2002-11-06 Alain Magloire

	* src/org/eclipse/cdt/ErrorParserManager.java (parse):
	Unused code removed.
	(checkLine): String.trim() the line to remove trailing
	newline.
	* src/org/eclipse/cdt/internal/errorparser/MakeErrorParser.java (processLine):
	When there is no resources set the lineno to -1.

2002-11-06 David Inglis
	* index/org/eclipse/cdt/internal/core/index/CTagsRunner.java
	fixed NPE when projects are deleted.
	
	* src/org/eclipse/cdt/core/ErrorParserManager.java
	fixed NPE when file exits outside of workspace
				
	* utils/org/eclipse/cdt/utils/elf/Elf.java
	fixed out of memory failure on bad elf files

2002-11-06 Alain Magloire

	Deal with some issues of PR 25756.
	
	* src/.../internal.errorparsers.java (processLine):
	When the file is not found append not prepend the name
	of the file in the description.
	The check for "(Each undeclared ...)" was done at the
	wrong place.
	
	* src/.../ErrorParserManager.java (findFileName):
	Check if the file is absolute or relative.

2002-11-05 Alain Magloire

	* utils/.../utils/coff: New folder.
	* utils/.../utils/coff/Coff.java: First implementation
	of a generic COFF binary file parser.
	* utils/.../utils/coff/Exe.java: First implementation of
	a generic EXE binary file parser.
	* utils/.../utils/PE.java: First implementation of a generic
	PE coff format parser.

2002-11-05 Alain Magloire

	* src/.../ErrorParserManager.java (parse):
	Trim the line of unwanted trailing spaces.

2002-11-01 Alain Magloire

	* model/../internal/core/mode/CProject.java (findElement):
	Check if the path is Absolute or relative before creating the
	element.

2002-11-01 David Inglis

	* utils/org/eclipse/cdt/utils/elf/Elf.java
	change getCPU to return cpu only and not append endian ("le" or "be").

2002-10-31 Alain Magloire

	* src/.../ErrorParserManager.java (findFilePath):
	Check if the file exists to not to return a phantom resource.
 
2002-10-30 Alain Magloire

	* src/.../CProjectNature.java (removeNature): Utility
	function to remove a nature from a project.
	(removeCNature): Utility method to remove the C Nature.
	* src/.../CCProjectNature.java (removeCCNature): Utility
	method to remove the CC nature.

2002-10-25 Alain Magloire

	* index/.../internal/core/index/CTagsCmd.java: Indentation.
	* index/.../internal/core/index/CTagsRunner.java: Implements Runnable.
	* index/.../internal/core/index/IndexManager.java (init):
	Set the indexer thread, thread.setDaemon(true).

2002-10-28 David Inglis
	
	* src/.../core/resources/ACBuilder.java
	Added check for duplicate markers.
	* src/.../internal/core/CBuilder.java
	Added check for canceled build and throws OperationCanceledException exception

2002-10-25 Alain Magloire

	The debugger needs to know the endian of a binary.  For example
	int the memory view, to do format.

	* model/.../model/IBinary (isLittleEndian): New method
	returns the endian.
	* model/.../internal/core/model/Binary.java (isLittleEndian): New method.
	* model/.../internal/core/model/BinaryInfo.java (isLittleEndian): New
	method implemented by calling Elf.
	* utils/.../utils/elf/Elf.java (Elf.Attribute.isLittleEndian): New
	method return the endian.

2002-10-23 Alain Magloire

	* src/.../core/resource/ACBuilder.java (mapMarkerSeverity):
	New method to convert IMarkerGenerator to IMarker.
	* src/.../core/ErrorParserManager.java: New file.
	* src/.../core/IErrorParser.java: New file.
	* src/.../core/IMarkerGenerator.java: Define a set of new fields:
	 IMarkerGenerator.SEVERITY_INFO
	 IMarkerGenerator.SEVERITY_WARNING
	 IMarkerGenerator.SEVERITY_ERROR_RESOURCE
	 IMarkerGenerator.SEVERITY_ERROR_BUILD
	 IMarkerGenerator.SEVERITY_INFO
	* src/.../core/erroparsers: Removed
	* src/.../core/erroparsers/ErrorParserManager.java: Removed
	* src/.../core/erroparsers/IErrorParser.java: Removed
	* src/.../internal/core/CBuilder.java (invokeMake): new field
	fatalBuild to check return of ErrorParserManager.reporProblems().
	* src/.../internal/core/ProcessClosure.java (isAlive): the test
	shoule be an || the errorstream __or__ the outputstream thread
	is alive.
	* src/.../internal/errorparsers/GASErrorParser.java (processLine):
	* src/.../internal/errorparsers/GCCErrorParser.java (processLine):
	* src/.../internal/errorparsers/GLDErrorParser.java (processLine):
	* src/.../internal/errorparsers/VCErrorParser.java (processLine):
	Use the IMarkerGenerator fields.
	* src/.../internal/errorparsers/MakeErrorParser.java (processLine):
	Catch GNU Make build errors, something like:
	"make: *** No targets specified and no makefile found.  Stop."
	
2002-10-23 David Inglis

	Error parsing is now done as the streams from the commands
	are read, this reduces memory usage during the build
	process, and we can now add options to the build console to
	only keep 'n' lines of output, again reducing the memory 
	usage. Also refactored IErrorParser and ErrorParserManager out
	of internal.
	
	* src/.../errorparser/ErrorParserManager.java:
	* src/.../errorparser/IErrorParser.java:
	* src/.../internal/errorparser/GASErrorParser.java:
	* src/.../internal/errorparser/GCCErrorParser.java:
	* src/.../internal/errorparser/GLDErrorParser.java:
	* src/.../internal/errorparser/MakeErrorParser.java:
	* src/.../internal/errorparser/VCErrorParser.java:
	* src/.../internal/core/CBuilder.java:
	* src/.../internal/core/ProcessCloseure.java:
	* src/.../core/ConsoleOutputStream.java:
	
	
2002-10-22 Alain Magloire

	* src/.../internal/parser/LinePositionInputStream.java:
	We use a BufferedInputStream to limit the number of reads.

2002-10-16 Alain Magloire

	Some of the native functions were throwing exceptions
	particularly on the windows platform and it was not
	clearly advertise.  Eclipse uses a tool to externalize strings,
	to prevent this, strings need a comment "//$NON-NLS-1$".

	This also incorporated some fixes by Alex Chapiro, in 
	Spawner.Reaper Thread an exception can be thrown for
	example if the application does not exist, the reaper
	thread will catch the IOException an notify spawner of
	the failure by setting pid = -1;

	* utils/../utils/pty/PTYInputStream.java (close0):
	Advertise that we can throw an IOException.
	* utils/../utils/pty/PTYOutputStream.java (close): Put
	the "$NON-NLS-1$" magic.
	(write0): Advertise we can throw IOException.
	(close0): Advertise we can throw IOException.
	* utils/../utils/spawner/ProcessFactory.java: Reformat.
	* utils/../utils/spawner/Spawner.java (Reaper):
	The run method when calling exec0 did not catch the exception.
	And the waitFor() should not be done on a pid == -1; 
	* utils/../utils/spawner/SpawnerInputStream.java: Reformat.
	* utils/../utils/spawner/SpawnerOutputStream.java: Reformat.

2002-10-15 Alain Magloire
	
	By making the native methods package scope, the
	compiler will not generate synthetic accessor
	methods to access them in the Reaper inner class

	* utils/../utils/spawner/Spawner.java (exec0):
	(exec1): Change scope to be package.
	(raise): Change scope to be package.
	(waitFor): Change scope to be package.

2002-10-13 Alain Magloire

	Boosting the compiler error level to get unused imports.

	* model/../internal/core/model/ArchiveContainer.java:
	* model/../core/model/BinaryContainer.java:
	* model/../core/model/CElementDelta.java:
	* model/../core/model/CModelManager.java:
	* model/../core/model/CResourceInfo.java:
	Remove unused imports.

	* src/../core/resources/ACBuilder.java:
	* src/../internal/core/CBuilder.java:
	Remove unused imports.

2002-10-15 David Inglis
	* model/../core/model/CoreModel.java
	* model/../internal/core/model/CModelManager.java
	* model/../internal/core/model/CModelStatus.java

	Clean up model 
		- removed plugin and nature id from model
		  refernce core plugin and nature classes for ID.
		- removed unsed methods in model for adding/removing
		  natures.

2002-10-15 David Inglis
	* src/../internal/core/CBuilder.java
	
	Fixed builder to return referenced projects so that eclipse 
	builder will build increamentaly build projects when they change.
	Handle "clean" target as special so the build state is cleared allowing
	the next increamental build to come in as a full build.
	
