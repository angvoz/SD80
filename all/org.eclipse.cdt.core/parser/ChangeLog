2003-04-03 John Camelon
	Fixed defects 36019, 36020, 36045.  
	Finished template declarations and their callbacks for the DOM (not the Code Model).  

2003-04-01 John Camelon
	Updated Scanner to convert control-characters to ' '.  
	Fixed logic error in SimpleDeclarationWrapper.
	Added operator support to grammar.  
	Fixed Name.toString() to support non-qualified yet multi-part names.

2003-04-01 Andrew Niefer
	Parser Symbol Table, modified lookup with respect to resolving ambiguous names,
	reducing the number of temporary lists/sets.  Modified adding using declarations
	to properly support overloaded functions.  Added initial support for user defined
	conversion sequences when resolving overloaded functions.

2003-04-01 John Camelon
	Fixed bug35906
	Udated Scanner to not puke on certain control characters.

2003-03-31 John Camelon
	Fixed unsigned short SimpleDeclarations not showing up in the outline view.  
	Fixed default visibilities for structs in outline view.  
	Fixed bug35892.  
	Added icon-less typedefs and enums to the outline view.  
	Fixed NPEs relating to anonymous structs, unions, enums in outline view.  

2003-03-31 Andrew Niefer
	Parser Symbol Table, better support for function resolution with pointers and 
	references as parameters.  Also support for typedefs as function parameters
		
2003-03-31 John Camelon
	Updated NewModelBuilder to work for ElaboratedTypeSpecifiers, PointerOperators, Const Methods.  
	Fixed bug35878. 

2003-03-31 John Camelon
	Updated Scanner to work for Strings literals like L"this string"
	Updated Scanner to work for floating points literals.
	Updated Scanner to be more forgiving on errors in QuickScan mode.
	Got template instantiation and specialization working (w/callbacks and DOM). 
	Updated Parser/Callbacks for handle pure virtual function declarations.
	Added callback support for some template declarations (not all branches).  

2003-03-28 John Camelon
	Added AccessSpecifier and ClassKind to parser.util package and refactored callbacks. 
	Better encapsulated ExceptionSpecification in the DOM. 
	Updated DOM structures to return unmodifiable collections.
	Added callback support for asmdefinitions.  
	Added callback support for constructor initializer chains.
	Fixed bug 35781 and updated parser to catch all exceptions from callbacks to ensure best-effort parsing. 
	Removed Main.java from Parser package.

2003-03-26 Andrew Niefer
	Moved type information and ParameterInfo from Declaration into util.TypeInfo
	Initial implementation of standard conversion sequences for function resolution

2003-03-24 John Camelon
	Added callback support for namespace definitions.  
	Updated Parser exception hierarchy. 
	Added callback support for linkage specifications.
	Added callback support for using declarations and directives.

2003-03-23 John Camelon
	Added callback support for class member visibility.
	Added callback support for pointer and reference operators on declarators.
	Added callback support for throws clauses an const operations.  
	Added callback support for array declarators. 
	
2003-03-20 Andrew Niefer
	Parser Symbol Table updates for:
	* friends
	* "this" pointer
	* enumerators
	* Argument dependent lookup
	* adding parameters to functions & function overloading
	
2003-03-19	John Camelon
	Updated Parser method visibility to solidify external interface.  
	Solved and removed TODO's from Scanner implementation.
	Updated Parser and callbacks to handle basic expressions.  

2003-03-18 John Camelon
	Updated IParserCallback (and implementations) to add a typeName to DeclSpecifier. 
	Updated IParserCallback and NewModelBuilder to distinguish between Function declarations and definitions. 

2003-03-17 Doug Schaefer
	Changed EOF to be a Backtrack exception instead of a token so simplify
	error handling.
	
2003-03-13 John Camelon
	Moved ## token to IScanner from Scanner.
	Updated IParserCallback and implementations to deal with Elaborated Type Specifiers. 
	Moved IScope into the internal DOM package.

2003-03-11 John Camelon
	added ChangeLog to parser directory
	updated IParserCallback (and all implementors) for expressions 
	removed inheritance relationship between ExpressionEvaluator and NullParserCallback
	removed redundant assignmentOperator() calls in Parser::initDeclarator
	removed class util.DeclarationSpecifier, merged Container interface into util.DeclSpecifier
	organized imports on the parser folder
	* dom/org/eclipse/cdt/internal/core/dom/DOMBuilder.java
	* dom/org/eclipse/cdt/internal/core/dom/Declarator.java
	* dom/org/eclipse/cdt/internal/core/dom/ParameterDeclaration.java
	* dom/org/eclipse/cdt/internal/core/dom/SimpleDeclaration.java
	* parser/org/eclipse/cdt/internal/core/model/NewModelBuilder.java
	* parser/org/eclipse/cdt/internal/core/model/Parameter.java
	* parser/org/eclipse/cdt/internal/core/model/SimpleDeclarationWrapper.java
	* parser/org/eclipse/cdt/internal/core/parser/ExpressionEvaluator.java
	* parser/org/eclipse/cdt/internal/core/parser/IParserCallback.java
	* parser/org/eclipse/cdt/internal/core/parser/NullParserCallback.java
	* parser/org/eclipse/cdt/internal/core/parser/Parser.java
	* parser/org/eclipse/cdt/internal/core/parser/util/DeclSpecifier.java

2003-03-10 John Camelon
	added in support for detecting and reporting circular inclusions
	added optimization by caching inclusion directories
	added macro pasting capabilities
	updated inclusion searching algorithm for local inclusions

2003-03-07 John Camelon
	fixed initDeclarators for the outline view. 

2003-03-06 Doug Schaefer
	Some minor fixes to get constructors/destructors parsing as well as some minor clean up and robustness.

2003-03-06 John Camelon
	added quickParse heuristic to Scanner for handling #if conditionals to avoid throwing 
	ScannerExceptions on undefined preprocessor symbols
	added minimal enum support to Parser (though not to DOM or CModel)

2003-03-06 Andrew Niefer
	Implementation of Namespaces & using directives in new parser's symbol table

2003-03-05 Doug Schaefer
	Some minor fixes to the parser. 

2003-03-04 Doug Schaefer
	Added Parser in the "parser" source folder in cdt.core 
	Preference in the C/C++ preference page to enable/disable use of the new parser (disabled by default) 
	Start on the DOM which we are using to test the parser (source folder "dom") 
	Start on a new Model Builder for creating CElements using the new parser (currently in source folder "parser") 
