/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCSizeofExpressionParserprs implements lpg.lpgjavaruntime.ParseTable, GCCSizeofExpressionParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,8,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,6,8,
            0,0,1,1,3,3,3,0,1,0,
            1,2,4,2,1,1,1,3,1,1,
            2,3,7,8,0,1,0,1,3,1,
            3,1,1,1,1,1,1,3,1,1,
            1,1,1,3,1,2,2,1,5,3,
            1,3,5,1,3,1,3,2,4,3,
            5,4,6,6,3,5,1,2,3,4,
            5,0,1,2,1,3,1,1,3,2,
            1,1,1,1,2,1,2,3,1,1,
            1,3,1,2,2,2,3,4,5,1,
            7,3,0,0,1,1,3,3,4,1,
            1,2,3,2,3,2,1,0,1,2,
            1,1,1,1,1,2,4,3,6,2,
            4,1,1,1,1,2,6,3,1,3,
            1,4,0,1,1,1,3,1,0,4,
            3,1,2,1,3,4,4,6,1,0,
            1,3,1,3,0,1,4,5,2,2,
            3,3,5,3,4,3,2,1,2,2,
            2,1,1,2,2,3,2,2,3,1,
            1,1,1,1,1,1,2,5,3,1,
            1,-39,0,0,0,0,0,0,-75,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-2,0,-35,-31,0,
            0,0,-170,0,-55,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-145,0,-158,-77,-133,
            0,0,0,-5,0,0,0,0,0,0,
            0,0,-4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-87,0,
            -80,-242,-125,0,-36,0,0,0,0,0,
            0,0,0,0,0,0,0,-16,0,0,
            0,0,0,-81,0,0,0,0,0,-301,
            0,0,0,-18,0,-19,0,0,0,0,
            0,0,-56,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-161,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-20,0,-129,0,0,0,0,0,0,
            0,0,-283,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-135,0,
            0,0,0,0,0,0,-253,0,-21,0,
            -22,-157,-32,0,0,-40,0,0,0,0,
            -292,0,0,-60,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-259,
            0,0,0,0,0,0,0,0,-23,-236,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-206,0,0,0,0,0,
            0,0,0,0,0,-78,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -124,-137,0,-24,0,0,0,0,0,-285,
            0,0,-167,-119,0,-25,0,0,0,-298,
            0,-26,0,0,0,0,-238,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-131,0,0,0,0,0,0,
            0,0,-255,0,0,0,0,0,0,-174,
            0,0,0,0,0,0,0,0,-138,0,
            -122,0,0,0,0,0,0,0,-246,-27,
            0,-37,0,0,0,0,0,0,0,0,
            -275,0,0,0,0,0,0,-207,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-284,0,-279,0,0,0,
            0,0,0,-73,0,0,0,0,0,0,
            0,0,0,-163,-134,0,0,0,0,0,
            0,0,-28,0,0,-173,0,0,0,0,
            0,0,0,0,0,-58,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-164,-83,-33,0,0,-139,0,-74,0,
            0,-146,-84,0,-3,0,0,0,0,0,
            0,-85,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -123,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-147,0,-251,-127,0,
            0,0,0,0,0,0,-155,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -166,0,0,0,0,0,0,-130,0,0,
            0,0,0,0,0,0,0,-209,0,0,
            0,0,0,0,0,0,-168,-176,-235,0,
            -94,0,0,0,-307,0,0,0,0,0,
            0,-99,0,0,0,0,0,0,0,-153,
            0,0,-195,0,0,0,0,0,0,0,
            -29,0,0,0,0,0,0,-182,0,0,
            0,0,0,0,0,-183,0,-100,0,0,
            0,0,0,0,0,0,-101,-62,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-220,-165,-210,0,0,0,0,
            0,0,0,-63,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-203,0,
            0,-331,0,0,0,0,0,0,0,-211,
            -239,0,-281,0,0,-64,0,0,0,0,
            0,0,-102,0,0,0,0,0,0,0,
            -228,0,-178,0,0,0,0,0,0,0,
            0,-65,0,0,0,0,0,0,-103,0,
            0,0,0,0,0,0,-104,0,-180,-213,
            0,0,0,0,0,0,0,-66,0,0,
            0,0,0,0,-105,0,0,0,0,0,
            0,0,-106,0,-197,-221,0,0,0,0,
            0,0,0,-67,0,0,0,0,0,0,
            -107,0,0,0,0,0,0,0,-108,0,
            -199,-223,0,0,0,0,0,0,0,-68,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-109,0,-217,-224,0,0,
            0,0,0,0,0,-69,0,0,0,0,
            0,0,-110,0,0,0,0,0,0,0,
            -111,0,-243,-249,0,0,0,0,0,-112,
            0,-70,0,0,0,0,0,0,-113,0,
            0,0,0,0,0,0,-114,0,-244,-254,
            0,0,0,0,0,0,0,-71,0,0,
            0,0,0,0,-115,0,0,0,0,0,
            0,0,0,0,-247,-116,0,0,0,0,
            0,-117,0,-72,0,0,0,0,0,0,
            -118,0,0,0,0,0,0,0,-96,0,
            -256,-262,0,0,0,0,0,0,0,-265,
            -121,-248,-132,0,0,0,0,-41,0,0,
            0,0,0,0,0,0,0,0,0,-57,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-257,-276,-258,0,0,
            0,0,0,0,-46,0,0,0,0,0,
            0,-280,0,0,0,0,-200,0,0,0,
            0,-290,-142,-308,0,0,0,0,0,-159,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-148,0,-160,0,0,0,0,
            0,0,-149,0,0,0,0,0,0,0,
            -294,0,-286,0,0,0,0,0,0,-151,
            0,-201,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-295,-152,
            0,0,0,0,0,-289,0,-202,0,0,
            0,0,0,0,-154,0,0,0,0,0,
            0,0,0,-299,-305,-306,0,0,0,0,
            0,-303,0,-226,0,0,0,0,0,0,
            -156,0,0,0,0,0,0,0,0,0,
            0,-315,0,0,0,0,0,-240,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-309,0,-314,0,0,0,0,0,
            0,-304,-282,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-321,-320,0,
            -162,0,0,0,0,0,-291,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-317,0,-322,0,0,0,0,0,0,
            0,-302,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-329,-330,0,0,
            0,0,0,0,0,-310,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-171,0,0,0,0,0,0,-175,
            -325,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-179,-181,-252,-186,0,
            0,0,0,0,-6,0,0,0,0,0,
            0,0,0,0,0,0,-190,-191,-61,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-194,-198,-212,0,0,0,0,
            0,0,0,0,0,0,0,-214,-98,0,
            -222,-89,-233,-237,0,0,0,0,0,0,
            -241,-263,-264,-277,-143,0,0,0,0,0,
            -278,0,-296,-300,0,0,-311,-136,-319,0,
            0,-323,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-54,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-193,-79,
            0,-234,0,-1,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-218,0,
            0,-288,0,0,-144,0,0,0,0,0,
            0,0,-196,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-169,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-47,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-205,0,0,0,0,0,0,
            0,0,0,0,-245,-216,0,0,0,0,
            0,0,0,0,0,0,0,0,-48,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-271,0,0,0,
            0,0,0,0,0,-140,0,0,0,0,
            0,0,0,0,0,0,0,0,-324,-38,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-8,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-312,0,-34,
            0,0,0,-215,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-230,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-261,0,-82,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-274,0,0,
            0,0,0,0,0,0,-229,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-128,0,0,0,
            0,0,0,0,0,0,0,0,-150,0,
            0,0,0,0,0,0,0,-49,0,0,
            0,0,0,0,0,0,0,0,0,-17,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-189,
            0,-59,-260,0,0,0,0,0,0,0,
            0,0,0,0,-192,0,-219,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-225,0,-250,-172,0,
            0,0,0,0,0,0,0,0,0,0,
            -227,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-267,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-269,0,0,0,
            0,0,0,0,0,0,0,0,0,-272,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-270,0,-208,
            0,0,0,0,0,-7,0,0,0,0,
            0,0,-318,0,0,0,0,0,0,0,
            0,0,0,0,0,-297,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-328,0,-92,0,0,0,0,
            0,0,0,0,0,0,0,0,-333,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-120,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -50,0,0,0,0,0,0,0,0,0,
            0,0,0,-51,0,0,0,0,0,0,
            0,0,0,0,0,-86,0,0,0,0,
            0,0,0,0,-88,0,0,0,-287,0,
            0,0,0,0,-91,0,0,0,0,0,
            0,0,0,-93,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-327,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-95,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-42,0,0,0,0,0,0,
            0,0,0,0,0,-52,0,0,0,0,
            0,0,-231,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -53,0,0,0,0,0,0,0,0,0,
            0,-126,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-204,0,0,
            0,0,0,0,0,0,-9,0,0,0,
            0,0,0,0,0,-10,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-11,0,0,0,0,0,0,0,0,
            -12,0,0,0,0,0,0,0,0,-13,
            0,0,0,0,0,0,-30,0,0,0,
            0,0,0,0,-43,0,0,0,0,0,
            0,0,0,-44,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -45,0,0,0,0,0,0,0,0,-76,
            0,0,0,0,0,0,-184,0,-232,0,
            0,0,-332,0,-14,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-90,0,0,0,0,-15,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-97,0,0,0,0,0,0,0,
            0,0,-177,0,0,0,0,0,-266,-293,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-141,0,0,0,0,0,0,-273,
            0,0,0,-313,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-326,-316,0,-185,-187,0,0,-188,
            0,0,0,0,0,0,0,0,0,0,
            0,-268,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            114,7,115,33,33,24,24,50,50,27,
            27,1,1,2,2,2,2,3,3,3,
            4,5,5,5,5,5,5,5,5,68,
            68,89,6,6,6,6,6,6,6,6,
            6,6,8,8,9,9,9,9,10,10,
            10,11,11,11,12,12,12,12,12,13,
            13,13,14,14,19,19,20,20,21,21,
            22,22,23,23,25,25,25,25,25,25,
            25,25,25,25,25,25,34,31,26,116,
            116,92,92,56,35,35,35,35,35,35,
            35,36,36,36,32,32,117,117,93,93,
            37,37,38,38,38,64,64,39,39,39,
            39,40,40,40,40,40,75,75,41,41,
            41,41,41,51,51,51,99,99,94,94,
            94,94,95,95,95,96,96,96,97,97,
            97,98,98,98,118,118,100,100,101,52,
            55,55,55,55,55,69,70,70,70,70,
            70,70,70,70,70,70,70,70,79,76,
            76,119,120,80,80,77,77,77,81,102,
            102,103,103,82,82,82,65,121,121,104,
            83,83,83,78,78,122,105,105,106,106,
            84,84,29,30,30,30,53,54,54,42,
            42,42,42,45,45,47,43,43,44,48,
            48,139,139,46,140,140,123,123,49,49,
            49,49,49,49,49,49,49,107,66,66,
            66,66,57,72,72,71,71,71,73,73,
            67,67,124,124,90,90,74,74,74,59,
            59,59,60,61,61,61,62,62,62,62,
            58,58,58,63,125,91,91,91,91,85,
            126,127,127,128,128,129,129,141,141,142,
            142,143,143,143,143,145,145,144,144,144,
            146,146,15,15,15,28,28,16,16,130,
            130,108,108,108,109,109,131,131,110,110,
            17,17,132,132,111,111,111,18,86,133,
            133,134,134,112,112,112,87,87,87,6,
            6,12,12,23,3,36,135,88,113,113,
            113,41,75,51,101,101,101,104,104,104,
            122,119,120,57,81,128,128,136,137,85,
            114,114,205,951,17,21,18,488,803,1513,
            44,506,504,579,542,619,581,363,312,313,
            314,676,664,740,682,74,133,91,1410,1357,
            31,134,212,1177,178,1558,20,17,21,18,
            488,42,22,44,506,504,579,1203,363,312,
            313,314,354,136,133,135,1585,159,590,545,
            999,2803,134,212,1582,20,17,21,18,488,
            350,138,165,50,315,312,313,314,142,145,
            148,151,469,123,136,133,135,731,159,591,
            358,388,1767,255,453,1410,2049,2476,2485,2495,
            2504,1289,138,165,315,312,313,314,1709,142,
            145,148,151,469,475,2545,1301,795,25,2740,
            1565,358,253,212,225,2422,1135,2049,2476,2485,
            2495,2504,1289,1558,20,17,21,18,488,42,
            274,44,506,504,579,1211,2545,1438,20,17,
            21,18,488,803,1803,44,506,504,579,542,
            619,581,253,275,1795,673,676,664,740,682,
            74,2229,280,1534,20,17,21,18,488,803,
            1803,44,506,504,579,542,619,581,277,1357,
            186,1674,676,664,740,682,74,301,280,315,
            921,243,1537,1357,31,285,878,344,440,1769,
            1675,1357,1702,1689,1558,20,17,21,18,488,
            42,292,44,506,504,579,542,619,581,126,
            1537,285,286,676,664,1266,1675,1792,973,167,
            1372,20,17,21,18,488,803,1803,44,506,
            504,579,542,619,581,1226,104,194,286,676,
            664,740,682,74,1522,280,1303,20,17,21,
            18,488,803,473,44,506,504,579,542,619,
            581,1513,1357,185,294,676,664,740,682,74,
            64,661,24,1112,49,209,242,413,287,238,
            1267,527,31,1675,227,320,1676,1462,20,17,
            21,18,488,803,240,44,506,504,579,542,
            619,581,254,212,1130,288,676,664,740,682,
            74,1818,280,1630,20,17,21,18,488,803,
            1130,44,506,504,579,542,619,581,331,1250,
            1636,709,676,664,740,682,74,258,328,1420,
            201,1465,1410,1613,330,379,316,312,313,314,
            1675,1486,20,17,21,18,488,803,571,44,
            506,504,579,542,619,581,19,1711,254,212,
            676,664,740,682,74,1468,280,1510,20,17,
            21,18,488,803,1410,44,506,504,579,542,
            619,581,342,1466,1007,755,676,664,740,682,
            74,1357,280,1309,254,212,301,226,1281,157,
            316,312,313,314,1675,332,1558,20,17,21,
            18,488,42,326,44,506,504,579,542,619,
            1229,333,255,417,396,289,720,1357,187,1410,
            1675,845,1585,687,1413,1558,20,17,21,18,
            488,803,735,44,506,504,579,542,619,581,
            89,253,212,23,676,664,740,682,74,122,
            91,1606,20,17,21,18,488,803,832,44,
            506,504,579,542,619,581,1357,996,1795,1410,
            676,664,740,682,74,670,1025,1558,20,17,
            21,18,488,42,673,44,506,504,579,542,
            619,581,230,272,319,1676,676,664,740,682,
            93,1332,20,17,21,18,488,803,1221,44,
            506,504,579,542,619,581,1060,453,168,1422,
            676,664,740,682,74,413,1049,1410,1410,1367,
            839,626,318,1658,239,1630,20,17,21,18,
            488,803,1257,44,506,504,579,542,619,581,
            1585,278,337,949,676,664,740,682,74,1818,
            328,1558,20,17,21,18,488,803,1585,44,
            506,504,579,542,619,581,1585,111,1609,28,
            676,664,740,682,74,259,92,430,1558,20,
            17,21,18,488,803,125,44,506,504,579,
            542,619,581,121,1585,1513,1410,676,664,740,
            682,74,1657,85,1558,20,17,21,18,488,
            803,949,44,506,504,579,542,619,581,1513,
            279,2809,268,676,664,740,682,74,242,84,
            1661,1357,294,1357,296,327,1558,20,17,21,
            18,488,803,572,44,506,504,579,542,619,
            581,1222,241,49,1240,676,664,740,682,74,
            1886,83,1558,20,17,21,18,488,803,736,
            44,506,504,579,542,619,581,948,127,49,
            1365,676,664,740,682,74,1789,82,1558,20,
            17,21,18,488,803,1737,44,506,504,579,
            542,619,581,1749,335,49,1410,676,664,740,
            682,74,1213,81,1558,20,17,21,18,488,
            803,1330,44,506,504,579,542,619,581,1773,
            2282,1258,1410,676,664,740,682,74,1885,80,
            1558,20,17,21,18,488,803,281,44,506,
            504,579,542,619,581,819,2297,49,1410,676,
            664,740,682,74,2047,79,1558,20,17,21,
            18,488,803,350,44,506,504,579,542,619,
            581,1141,2338,1367,1410,676,664,740,682,74,
            293,78,1558,20,17,21,18,488,803,644,
            44,506,504,579,542,619,581,476,224,49,
            1410,676,664,740,682,74,553,77,1558,20,
            17,21,18,488,803,640,44,506,504,579,
            542,619,581,282,317,1513,630,676,664,740,
            682,74,1186,76,1558,20,17,21,18,488,
            803,851,44,506,504,579,542,619,581,1177,
            178,1410,1469,676,664,740,682,74,243,75,
            1585,1465,1513,794,363,312,313,314,1558,20,
            17,21,18,488,42,336,44,962,134,212,
            1558,20,17,21,18,488,42,2810,44,506,
            504,579,542,619,581,244,49,1754,1367,1220,
            137,133,135,2489,159,1558,20,17,21,18,
            488,42,1703,44,506,504,1007,255,139,165,
            1362,1464,1367,790,1367,143,146,149,152,469,
            1558,20,17,21,18,488,803,359,44,506,
            504,579,542,619,581,293,253,212,179,676,
            664,740,682,74,1063,353,1558,20,17,21,
            18,488,803,1111,44,506,504,579,542,619,
            581,1585,203,1755,180,676,664,740,682,74,
            1369,73,1558,20,17,21,18,488,803,739,
            44,506,504,579,542,619,581,322,2854,1410,
            1636,676,664,740,682,74,1469,1265,1558,20,
            17,21,18,488,803,804,44,506,504,579,
            542,619,581,1562,1585,1410,1765,676,664,740,
            682,74,1513,1302,1558,20,17,21,18,488,
            42,853,44,506,504,579,542,619,581,229,
            233,338,1410,676,664,740,682,93,1558,20,
            17,21,18,488,42,295,44,506,504,579,
            542,619,581,1766,1515,1367,2394,676,664,740,
            682,93,949,1558,20,17,21,18,488,42,
            356,44,506,504,579,542,619,581,1513,1410,
            193,1561,676,664,740,682,93,1558,20,17,
            21,18,488,42,1352,44,506,504,579,542,
            619,581,1585,347,1367,204,676,664,740,682,
            93,378,1558,20,17,21,18,488,42,1472,
            44,506,504,579,542,619,581,1410,1410,117,
            1564,676,664,740,682,93,1558,20,17,21,
            18,488,42,211,44,506,504,579,542,619,
            581,2409,348,880,1052,676,664,740,682,93,
            1660,1558,20,17,21,18,488,42,1538,44,
            506,504,579,542,619,581,1139,69,244,1016,
            676,664,740,682,93,1582,20,17,21,18,
            488,349,201,315,312,313,314,919,879,1558,
            20,17,21,18,488,42,731,44,506,504,
            579,542,619,581,1731,1188,1819,202,676,1272,
            218,635,220,758,222,223,228,273,1290,137,
            1481,1822,383,200,208,1541,382,268,494,471,
            271,1179,1352,1760,1823,1,1481,315,312,313,
            314,1761,382,1741,1672,86,110,1263,1085,676,
            1718,95,764,970,108,94,96,97,98,99,
            582,86,110,316,312,313,314,95,3043,970,
            108,94,96,97,98,99,582,3043,1558,20,
            17,21,18,488,42,105,44,506,504,579,
            542,1185,3043,3043,109,3043,3043,3043,3043,333,
            757,3043,1267,569,393,362,2749,2117,3043,3043,
            109,845,106,3043,315,312,313,314,3043,1407,
            1702,362,541,3043,276,1537,3043,2028,107,2749,
            87,3043,845,1704,1701,380,1705,315,312,313,
            314,217,635,220,758,222,223,228,289,273,
            2008,87,124,2077,3043,2340,988,3043,3043,266,
            494,471,271,3043,217,635,220,758,222,223,
            228,3043,3043,3043,889,3043,1717,1558,20,17,
            21,18,488,42,3043,44,506,504,1073,1711,
            217,635,220,758,222,223,228,273,3043,154,
            1693,3043,262,208,974,2834,3043,266,494,471,
            271,2228,3043,3043,341,255,613,1081,406,3043,
            3043,3043,263,413,1292,1703,197,3043,276,1558,
            20,17,21,18,488,42,1337,44,506,504,
            1099,3043,3043,1513,253,212,217,635,220,758,
            222,223,228,273,3043,3043,3043,196,1214,1694,
            472,291,3043,266,494,471,271,333,3043,687,
            376,3043,260,3043,2749,3043,965,3043,889,3043,
            3043,610,315,312,313,314,3043,775,3043,705,
            593,316,312,313,314,2028,2749,439,191,3043,
            3043,3043,3043,3043,315,312,313,314,3043,217,
            635,220,758,222,223,228,3043,2008,1338,2173,
            3043,2077,1558,20,17,21,18,488,42,3043,
            40,217,635,220,758,222,223,228,541,273,
            49,3043,3043,1717,1659,2749,3043,845,3043,266,
            494,471,271,316,312,313,314,3043,333,316,
            312,313,314,3043,265,2749,87,155,1693,3043,
            3043,389,2834,316,312,313,314,1407,1702,1240,
            217,635,220,758,222,223,228,3043,3043,3043,
            3043,3043,1717,198,363,312,313,314,1081,3043,
            217,635,220,758,222,223,228,1736,134,212,
            3043,3043,2830,315,312,313,314,3043,3043,3043,
            3043,2853,315,312,313,314,731,3043,3043,3043,
            141,133,135,3043,159,2310,3043,3043,3043,3043,
            218,635,220,758,222,223,228,431,140,165,
            3043,3043,3043,3043,413,1541,3043,3043,3043,469,
            1481,208,315,312,313,314,845,3043,1558,20,
            17,21,18,488,42,731,44,506,504,1107,
            413,3043,1446,1703,3043,86,110,382,1818,3043,
            3043,95,3043,970,1639,94,96,97,98,99,
            517,1481,400,777,1301,3043,87,845,3043,845,
            413,742,408,2422,258,565,1481,1690,947,3043,
            1613,196,845,3043,845,3043,86,110,87,3043,
            3043,3043,95,1255,970,103,94,96,97,98,
            99,86,110,87,196,1960,3043,95,115,970,
            101,94,96,97,98,99,681,1481,1707,32,
            3043,3043,3043,845,3043,413,413,3043,610,3043,
            475,729,1481,315,312,313,314,3043,845,3043,
            3043,1300,86,110,3043,192,731,3043,95,3043,
            970,355,94,96,97,98,99,86,110,1818,
            1818,3043,3043,95,3043,970,102,94,96,97,
            98,99,845,1481,3043,1301,3043,1237,3043,845,
            3043,3043,3043,3043,1638,258,258,893,1481,947,
            1026,1613,1613,3043,845,3043,3043,3043,86,110,
            1740,3043,3043,3043,95,3043,970,118,94,96,
            97,98,99,86,110,316,312,313,314,95,
            3043,970,114,94,96,97,98,99,941,1481,
            545,3043,3043,3043,3043,845,1582,20,17,21,
            18,488,41,1057,1481,315,312,313,314,3043,
            845,3043,3043,3043,86,110,1756,3043,731,3043,
            95,3043,970,1713,94,96,97,98,99,86,
            110,316,312,313,314,95,3043,970,113,94,
            96,97,98,99,1105,1481,917,1301,3043,3043,
            3043,845,3043,3043,3043,3043,1638,3043,3043,1153,
            1481,315,312,313,314,3043,845,3043,3043,3043,
            86,110,495,3043,1946,3043,95,3043,970,120,
            94,96,97,98,99,86,110,315,312,313,
            314,95,3043,970,119,94,96,97,98,99,
            731,1558,20,17,21,18,488,42,3043,44,
            506,504,1125,3043,1558,20,17,21,18,488,
            42,273,44,506,504,1133,1002,837,3043,1541,
            3043,268,494,471,271,1253,3043,3043,3043,989,
            3043,363,312,313,314,1650,413,3043,3043,3043,
            363,312,313,314,1663,134,212,3043,3043,3043,
            363,312,313,314,134,212,3043,3043,729,363,
            312,313,314,3043,134,212,1784,144,133,135,
            196,159,3043,134,212,3043,147,133,135,3043,
            159,316,312,313,314,1694,150,133,135,3043,
            159,3043,3043,3043,610,153,133,135,3043,159,
            363,312,313,314,1558,20,17,21,18,488,
            42,191,44,998,134,212,1558,20,17,21,
            18,488,42,185,44,506,1151,3043,3043,3043,
            2749,1364,2173,3043,3043,3043,360,133,135,3043,
            159,1558,20,17,21,18,488,42,3043,44,
            506,1159,295,20,17,21,18,488,42,3043,
            36,3043,3043,3043,3043,217,635,220,758,222,
            223,228,3043,3043,3043,3043,3043,1214,295,20,
            17,21,18,488,42,245,36,1558,20,17,
            21,18,488,42,3043,39,1558,20,17,21,
            18,488,42,3043,38,3043,3043,3043,3043,3043,
            3043,246,1558,20,17,21,18,488,42,3043,
            37,1558,20,17,21,18,488,42,3043,36,
            1558,20,17,21,18,488,42,413,35,3043,
            3043,3043,3043,3043,382,1558,20,17,21,18,
            488,42,3043,47,1558,20,17,21,18,488,
            42,3043,46,87,3043,3043,3043,3043,742,408,
            3043,1558,20,17,21,18,488,42,196,45,
            1414,20,17,21,18,488,42,1732,43,545,
            3043,3043,3043,1799,382,1582,20,17,21,18,
            488,34,1960,3043,315,312,313,314,316,312,
            313,314,3043,87,869,3043,3043,731,115,1582,
            20,17,21,18,488,33,3043,784,582,315,
            312,313,314,1582,20,17,21,18,488,1363,
            3043,3043,1718,1356,3043,3043,1301,3043,3043,1690,
            1690,1024,3043,3043,3043,2068,845,845,315,312,
            313,314,2187,1582,20,17,21,18,488,357,
            1745,2014,3043,362,1770,87,87,3043,3043,3043,
            115,115,3043,3043,3043,315,312,313,314,315,
            312,313,314,1781,1690,662,49,49,2366,3043,
            49,845,2526,845,845,3043,3043,845,315,312,
            313,314,49,1411,1492,3043,3043,3043,3043,845,
            87,2753,87,87,3043,115,87,1136,1162,3043,
            3043,1188,3043,3043,3043,3043,3043,3043,87,3043,
            3043,3043,3043,1439,3043,3043,3043,3043,3043,3043,
            3043,3043,3043,3043,3043,3043,3043,3043,1587,3043,
            3043,3043,3043,1688,3043,0,834,32,0,2010,
            32,0,3051,1,0,833,128,0,843,128,
            0,852,128,0,833,129,0,843,129,0,
            852,129,0,833,130,0,843,130,0,852,
            130,0,833,184,0,843,184,0,852,184,
            0,184,188,0,833,183,0,843,183,0,
            852,183,0,183,188,0,833,131,0,843,
            131,0,852,131,0,833,132,0,843,132,
            0,852,132,0,20,178,0,833,361,0,
            843,361,0,852,361,0,1,438,0,1,
            833,0,1,843,0,1,852,0,350,357,
            0,8,10,0,1,3268,0,1,3279,0,
            112,2353,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            0,0,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,0,0,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,0,1,65,66,67,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,49,68,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,86,87,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,68,0,65,66,67,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,0,0,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,0,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,24,25,
            26,99,28,9,10,68,32,33,34,35,
            36,0,0,0,1,2,80,81,5,6,
            7,8,0,11,0,51,52,53,54,55,
            56,57,58,59,60,61,62,0,69,65,
            66,67,0,30,2,3,69,5,24,25,
            26,9,10,11,84,0,14,15,0,1,
            2,3,0,0,0,1,2,3,4,5,
            0,1,30,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,30,31,
            0,49,50,82,24,73,74,75,76,0,
            78,79,0,1,2,63,64,49,6,7,
            8,69,70,71,72,73,74,75,76,0,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            0,77,2,3,82,5,83,63,64,9,
            10,11,0,1,14,15,4,0,6,7,
            8,0,0,1,2,0,4,5,3,0,
            30,9,10,11,12,13,14,15,16,17,
            18,19,0,21,22,23,0,30,2,49,
            50,29,73,74,75,76,31,78,79,0,
            0,0,20,63,64,5,6,7,8,69,
            70,71,72,73,74,75,76,48,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,0,1,
            2,3,4,5,0,0,2,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,63,64,0,27,2,29,68,5,
            6,7,8,0,30,37,38,39,40,41,
            42,43,44,45,46,47,0,1,2,3,
            4,5,0,48,30,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,27,0,29,6,7,8,0,
            6,7,8,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,4,5,
            0,0,2,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,48,0,
            0,27,0,29,2,3,6,7,8,0,
            30,37,38,39,40,41,42,43,44,45,
            46,47,0,1,25,3,4,0,6,7,
            8,0,30,31,12,0,1,2,3,0,
            5,6,7,8,63,64,24,25,26,0,
            28,29,0,0,32,33,34,35,36,24,
            25,26,27,28,11,30,31,32,33,34,
            35,36,50,51,52,53,54,55,56,57,
            58,59,60,61,62,0,1,65,66,67,
            0,1,2,3,4,5,0,48,2,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,2,27,0,29,
            6,7,8,84,6,7,8,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            2,3,4,5,0,0,2,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,48,0,0,27,0,29,2,3,
            6,7,8,0,1,37,38,39,40,41,
            42,43,44,45,46,47,0,1,0,3,
            4,0,6,7,8,0,30,31,12,0,
            1,2,3,0,5,6,7,8,63,64,
            24,25,26,0,28,29,13,0,32,33,
            34,35,36,24,25,26,27,28,0,30,
            31,32,33,34,35,36,50,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,3,4,5,
            0,48,0,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,1,
            20,27,4,29,6,7,8,0,0,0,
            3,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,4,5,80,81,
            48,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,0,27,
            4,29,6,7,8,0,48,50,49,37,
            38,39,40,41,42,43,44,45,46,47,
            0,1,2,3,4,5,68,0,0,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,48,27,4,29,
            6,7,8,0,1,2,3,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            0,3,4,0,6,7,8,49,0,1,
            12,0,4,30,31,0,0,6,7,8,
            63,64,24,25,26,0,28,29,20,0,
            32,33,34,35,36,24,25,26,0,28,
            24,25,26,32,33,34,35,36,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,0,37,65,66,67,0,1,2,3,
            4,5,0,0,2,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,27,0,29,6,7,8,0,
            6,7,8,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,4,5,
            0,0,2,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,0,
            1,27,3,29,0,24,25,26,0,5,
            0,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,4,5,20,0,
            31,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,0,27,
            4,29,6,7,8,0,0,0,12,37,
            38,39,40,41,42,43,44,45,46,47,
            24,25,26,0,28,71,72,20,32,33,
            34,35,36,73,74,75,76,0,78,79,
            0,0,2,3,3,0,48,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,6,7,8,27,0,
            1,31,0,4,0,30,0,0,6,7,
            8,5,0,24,25,26,0,28,83,20,
            49,32,33,34,35,36,24,25,26,13,
            28,24,25,26,32,33,34,35,36,0,
            51,52,53,54,55,56,57,58,59,60,
            61,62,0,1,2,3,4,5,0,20,
            48,9,10,11,12,13,14,15,16,17,
            18,19,0,21,22,23,0,71,72,0,
            28,0,1,2,3,4,5,0,9,10,
            9,10,11,12,13,14,15,16,17,18,
            19,0,21,22,23,0,0,1,0,28,
            4,6,7,8,0,1,0,3,0,3,
            2,0,1,2,3,4,5,69,20,77,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,31,88,89,90,91,
            92,93,94,95,96,97,0,1,77,0,
            4,0,3,0,1,2,50,4,5,0,
            69,50,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,1,2,
            31,4,5,24,25,26,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,0,1,2,0,4,5,0,0,5,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,0,1,2,0,4,
            5,24,25,26,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            1,2,0,4,5,3,0,49,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,1,2,0,4,5,3,
            0,0,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,1,2,
            0,4,5,27,0,5,9,10,11,12,
            13,14,15,16,17,18,19,13,21,22,
            23,0,1,2,0,4,5,3,48,77,
            9,10,11,12,13,14,15,16,17,18,
            19,0,21,22,23,0,1,2,0,4,
            5,27,0,5,9,10,11,12,13,14,
            15,16,17,18,19,0,21,22,23,0,
            1,2,20,4,5,0,0,2,9,10,
            11,12,13,14,15,16,17,18,19,0,
            21,22,23,0,0,6,7,8,0,0,
            0,2,0,3,6,7,8,0,6,7,
            8,0,1,24,25,26,5,28,0,71,
            72,32,33,34,35,36,24,25,26,0,
            28,31,3,0,32,33,34,35,36,6,
            7,8,0,0,1,3,0,4,0,49,
            2,5,6,7,8,48,27,24,25,26,
            31,28,14,15,0,32,33,34,35,36,
            0,0,2,30,3,0,0,6,30,0,
            0,6,7,8,0,6,7,8,0,0,
            6,7,8,0,0,0,3,3,27,0,
            0,6,7,8,0,0,0,3,3,0,
            68,0,0,70,68,6,7,8,70,77,
            0,9,10,0,31,31,6,7,8,6,
            7,8,27,85,0,31,30,3,0,63,
            64,48,0,49,6,7,8,0,49,49,
            3,63,64,49,49,0,1,0,0,4,
            2,0,0,2,2,31,0,0,0,0,
            0,0,0,0,0,0,70,0,98,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,50,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3043,5092,1,1637,4965,1,3016,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            586,1,1,1,1,1,1,3052,1,3143,
            72,1,1,1,1,1,1,1403,436,897,
            842,1455,2129,1394,886,1440,1795,1420,1,88,
            3050,1,1,1,1,1,1,1,1,1,
            1,1,1,1,3037,1,1,1,8,3031,
            3031,3031,3031,3031,3031,3031,3031,3031,3031,3031,
            3031,3031,3031,3031,3031,3031,3031,3031,3031,3031,
            3031,3031,3031,3031,3031,3031,3031,3031,981,3300,
            3031,3031,3031,3031,3031,3031,3031,3031,3031,3031,
            3031,3031,3031,3031,3031,3031,594,2172,3031,3031,
            3031,3031,3031,3031,3031,3031,3031,3031,3031,3031,
            3031,3300,3043,3031,3031,3031,3043,5092,1,3053,
            4965,1,3016,1,1,1,1,1,1,1,
            1,1,1,1,1,1,586,1,1,1,
            1,1,1,3052,1,3143,62,1,1,1,
            1,1,1,1403,436,897,842,1455,2129,1394,
            886,1440,1795,1420,1,3268,2583,1,1,1,
            1,1,1,1,1,1,1,1,1,156,
            70,1,1,1,3043,3054,2150,3043,3055,2681,
            852,833,843,2672,2656,2690,2793,3059,2779,2755,
            2346,3056,3057,3058,51,2647,1992,1645,3256,3258,
            3257,2925,3205,2564,1308,3299,3206,3204,3259,3207,
            3203,66,64,267,3268,1874,513,415,252,852,
            833,843,59,1748,3043,3210,3215,3214,3212,3213,
            3211,3216,3217,3209,3218,3219,3220,284,751,2396,
            2774,1692,1,646,3055,3055,777,3055,3256,3258,
            3257,3055,3055,3055,1659,3043,3055,3055,1,3268,
            1874,261,67,68,3043,3054,2150,3047,3055,2681,
            323,3367,3055,2672,2656,2690,444,3059,2779,2755,
            2346,3056,3057,3058,54,2647,1992,1645,646,261,
            3043,3055,3055,816,3368,2464,2451,2138,1899,3043,
            1847,1345,1,3268,2583,3055,3055,261,3025,3019,
            3022,3055,3055,3055,3055,3055,3055,3055,3055,61,
            3055,3055,3055,3055,3055,3055,3055,3055,3055,3055,
            3055,3055,3055,3055,3055,3055,3055,3055,3055,3055,
            1,3046,3054,3054,816,3054,1320,2576,2601,3054,
            3054,3054,184,2971,3054,3054,2971,270,2968,2962,
            2965,3043,3043,1,1,1,1,1,90,1,
            3054,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,3043,646,928,3054,
            3054,3424,2464,2451,2138,1899,90,1847,1345,352,
            1,3043,586,3054,3054,252,3025,3019,3022,3054,
            3054,3054,3054,3054,3054,3054,3054,2,3054,3054,
            3054,3054,3054,3054,3054,3054,3054,3054,3054,3054,
            3054,3054,3054,3054,3054,3054,3054,3054,3043,5092,
            1,3053,4965,1,269,3043,544,1,1,1,
            1,1,1,1,1,1,1,1,586,1,
            1,1,2576,2601,267,3052,1770,3143,3300,252,
            852,833,843,3043,646,1403,436,897,842,1455,
            2129,1394,886,1440,1795,1420,3043,5092,1,3053,
            4965,1,3043,1370,646,1,1,1,1,1,
            1,1,1,1,1,1,586,1,1,1,
            1,3268,2583,3052,252,3143,3025,3019,3022,3043,
            852,833,843,1403,436,897,842,1455,2129,1394,
            886,1440,1795,1420,3043,5092,1,3053,4965,1,
            221,351,888,1,1,1,1,1,1,1,
            1,1,1,1,586,1,1,1,1596,340,
            181,3052,1,3143,1770,264,852,833,843,3043,
            646,1403,436,897,842,1455,2129,1394,886,1440,
            1795,1420,3043,1,3382,190,1,3043,1,1,
            1,3043,646,264,1,20,178,3004,3004,71,
            3004,178,178,178,2576,2601,1,1,1,3043,
            1,3238,3043,65,1,1,1,1,1,178,
            178,178,3004,178,1748,3004,3004,178,178,178,
            178,178,190,1,1,1,1,1,1,1,
            1,1,1,1,1,3043,1588,1,1,1,
            3043,5092,1,3053,4965,1,3043,1396,704,1,
            1,1,1,1,1,1,1,1,1,1,
            586,1,1,1,1,3268,2583,3052,373,3143,
            3025,3019,3022,1659,852,833,843,1403,436,897,
            842,1455,2129,1394,886,1440,1795,1420,3043,5092,
            1,3053,4965,1,3043,58,1303,1,1,1,
            1,1,1,1,1,1,1,1,586,1,
            1,1,1596,3043,371,3052,1,3143,1770,3049,
            852,833,843,3043,3280,1403,436,897,842,1455,
            2129,1394,886,1440,1795,1420,3043,1,3043,189,
            1,3043,1,1,1,3043,646,3048,1,350,
            357,357,3028,3043,3028,357,357,357,2576,2601,
            1,1,1,3043,1,3238,948,3043,1,1,
            1,1,1,357,357,357,3028,357,63,357,
            3028,357,357,357,357,357,189,1,1,1,
            1,1,1,1,1,1,1,1,1,3043,
            3043,1,1,1,3043,5092,1,3053,4965,1,
            3043,2170,3043,1,1,1,1,1,1,1,
            1,1,1,1,586,1,1,1,183,2983,
            674,3052,2983,3143,2980,2974,2977,1,3043,255,
            2932,1403,436,897,842,1455,2129,1394,886,1440,
            1795,1420,3043,5092,1,3053,4965,1,513,415,
            2185,1,1,1,1,1,1,1,1,1,
            1,1,586,1,1,1,205,4783,3043,3052,
            4783,3143,852,833,843,3043,2241,3050,938,1403,
            436,897,842,1455,2129,1394,886,1440,1795,1420,
            3043,5092,1,3053,4965,1,1474,57,30,1,
            1,1,1,1,1,1,1,1,1,1,
            586,1,1,1,370,5037,2226,3052,5037,3143,
            852,833,843,1,3034,1874,3049,1403,436,897,
            842,1455,2129,1394,886,1440,1795,1420,3043,1,
            3043,190,1,3043,1,1,1,620,3043,3054,
            1,129,3055,646,3048,3043,248,2950,2944,2947,
            2576,2601,1,1,1,3043,1,3238,1083,3043,
            1,1,1,1,1,3256,3258,3257,3043,3205,
            1,1,1,3206,3204,3259,3207,3203,190,1,
            1,1,1,1,1,1,1,1,1,1,
            1,3043,1691,1,1,1,3043,5092,1,3053,
            4965,1,3043,3043,2747,1,1,1,1,1,
            1,1,1,1,1,1,586,1,1,1,
            252,3268,2583,3052,374,3143,852,833,843,3043,
            852,833,843,1403,436,897,842,1455,2129,1394,
            886,1440,1795,1420,3043,5092,1,3053,4965,1,
            3043,247,2856,1,1,1,1,1,1,1,
            1,1,1,1,586,1,1,1,3043,3043,
            1620,3052,3049,3143,48,3256,3258,3257,3043,2731,
            60,1403,436,897,842,1455,2129,1394,886,1440,
            1795,1420,3043,5092,1,3053,4965,1,1187,3043,
            3048,1,1,1,1,1,1,1,1,1,
            1,1,586,1,1,1,3043,3054,3043,3052,
            3055,3143,852,833,843,69,3043,3043,2823,1403,
            436,897,842,1455,2129,1394,886,1440,1795,1420,
            3256,3258,3257,3043,3205,2714,2705,1239,3206,3204,
            3259,3207,3203,2464,2451,2138,1899,3043,1847,1345,
            3043,3043,806,3049,3053,219,3420,3210,3215,3214,
            3212,3213,3211,3216,3217,3209,3218,3219,3220,128,
            3043,2396,2774,1692,3043,2941,2935,2938,3052,3043,
            3054,3048,130,3055,3043,646,50,249,2959,2953,
            2956,2731,200,3256,3258,3257,345,3205,1320,1109,
            1937,3206,3204,3259,3207,3203,3256,3258,3257,1704,
            3205,1,1,1,3206,3204,3259,3207,3203,3043,
            3210,3215,3214,3212,3213,3211,3216,3217,3209,3218,
            3219,3220,1,3054,2150,3047,3055,2612,42,1336,
            1621,2672,2656,2690,444,3059,2779,2755,2346,3056,
            3057,3058,3043,2647,1992,1645,3043,2714,2705,53,
            871,3043,3054,2150,3047,3055,2638,3043,2564,1308,
            2672,2656,2690,444,3059,2779,2755,2346,3056,3057,
            3058,210,2647,1992,1645,182,3043,3054,188,1448,
            3055,852,833,843,3043,1291,3043,3049,3043,3051,
            2857,1,3795,2150,29,3697,2681,1274,205,3046,
            2672,2656,2690,444,3059,2779,2755,2346,3056,3057,
            3058,5232,2647,1992,1645,3048,1248,1222,1196,1170,
            1144,1092,1118,1066,1034,1008,207,3054,3046,3043,
            3055,3043,3049,3043,3054,2150,3050,3055,2681,250,
            1547,29,2672,2656,2690,444,3059,2779,2755,2346,
            3056,3057,3058,674,2647,1992,1645,1,3795,2150,
            3048,3697,2681,3256,3258,3257,2672,2656,2690,444,
            3059,2779,2755,2346,3056,3057,3058,5232,2647,1992,
            1645,375,3054,2150,3043,3055,2681,251,30,794,
            2672,2656,2690,444,3059,2779,2755,2346,3056,3057,
            3058,5232,2647,1992,1645,3043,3054,2150,3043,3055,
            2681,3256,3258,3257,2672,2656,2690,444,3059,2779,
            2755,2346,3056,3057,3058,5232,2647,1992,1645,3043,
            3054,2150,3043,3055,2681,3047,3043,3072,2672,2656,
            2690,444,3059,2779,2755,2346,3056,3057,3058,5232,
            2647,1992,1645,1,3795,2150,1,3697,2681,3053,
            1,3043,2672,2656,2690,444,3059,2779,2755,2346,
            3056,3057,3058,5232,2647,1992,1645,3043,3054,2150,
            3043,3055,2681,3052,3043,1161,2672,2656,2690,444,
            3059,2779,2755,2346,3056,3057,3058,1704,2647,1992,
            1645,3043,3054,2697,3043,3055,2681,3053,3055,3046,
            2672,2656,2690,444,3059,2779,2755,2346,3056,3057,
            3058,3043,2647,1992,1645,1,3054,2150,49,3055,
            2681,3052,374,2731,2672,2656,2690,444,3059,2779,
            2755,2346,3056,3057,3058,3043,2647,1992,1645,329,
            3054,2150,370,3055,2681,3043,3043,2860,2672,2656,
            2690,444,3059,2779,2755,2346,3056,3057,3058,131,
            2647,1992,1645,3043,3043,2992,2986,2989,372,334,
            3043,1110,132,3049,852,833,843,1,3001,2995,
            2998,3043,1539,3256,3258,3257,1719,3205,3043,2714,
            2705,3206,3204,3259,3207,3203,3256,3258,3257,1,
            3205,3048,116,361,3206,3204,3259,3207,3203,3013,
            3007,3010,3043,3043,3054,3047,1,3055,32,577,
            2926,252,3025,3019,3022,3054,116,3256,3258,3257,
            116,3205,3069,3070,3043,3206,3204,3259,3207,3203,
            3043,1,1772,1498,116,158,56,3016,2929,365,
            112,852,833,843,364,852,833,843,55,3043,
            852,833,843,3043,3043,366,3049,3049,116,206,
            343,852,833,843,3043,3043,290,3049,3053,199,
            1572,3043,52,1061,3300,852,833,843,583,3046,
            367,2564,1308,368,3048,3048,852,833,843,852,
            833,843,3052,409,1,3048,1523,3049,369,2576,
            2601,680,3043,955,852,833,843,283,5240,500,
            1135,2576,2601,1722,1959,206,591,3043,321,591,
            713,3043,346,2872,1714,3048,3043,3043,3043,3043,
            3043,3043,3043,3043,3043,3043,1063,3043,3040,3043,
            3043,3043,3043,3043,3043,3043,3043,3043,3043,3043,
            3043,3043,3043,3043,3043,3043,3043,1135
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            424,1,581,6,581,581,581,581,581,581,
            581,581,581,581,581,25,553,212,209,216,
            214,224,222,226,225,228,227,198,581,553,
            363,363,165,581,183,183,183,77,320,304,
            581,581,581,581,581,581,581,581,581,581,
            581,581,581,581,581,581,581,581,600,581,
            581,581,581,581,581,581,581,581,581,581,
            581,581,183,183,138,96,81,116,382,87,
            86,452,484,484,484,464,14,464,14,14,
            464,14,464,30,464,335,581,305,209,209,
            214,214,214,214,214,214,212,212,222,216,
            216,225,224,618,618,227,226,114,94,77,
            84,81,578,138,415,120,183,486,385,249,
            182,551,112,14,363,360,363,112,363,14,
            581,34,304,532,240,240,363,484,484,519,
            484,484,240,618,581,618,477,3,581,581,
            94,84,72,415,138,119,116,183,75,335,
            378,387,243,182,181,183,16,258,114,292,
            302,240,240,318,581,366,581,581,519,618,
            368,519,479,484,294,159,289,114,72,415,
            581,581,138,120,382,187,186,81,387,183,
            378,377,182,114,16,258,292,292,532,240,
            183,484,183,183,519,581,519,239,190,479,
            479,81,193,419,289,92,196,141,363,581,
            618,21,289,94,415,72,138,138,183,486,
            385,75,243,183,164,183,258,289,476,258,
            292,294,371,294,240,532,519,581,519,519,
            479,190,190,479,96,10,376,9,96,298,
            363,581,94,72,387,378,258,444,294,289,
            581,363,165,240,183,303,190,419,240,597,
            551,581,138,294,183,378,164,289,239,581,
            235,444,236,289,183,165,240,519,364,183,
            138,289,364,444,581,236,236,519,183,183,
            253,236,519
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            99,0,2,25,0,77,27,99,49,31,
            3,48,0,1,4,20,6,8,7,0,
            69,30,70,0,48,68,77,50,99,70,
            85,14,15,35,28,36,34,33,32,11,
            9,10,71,72,63,64,73,74,75,76,
            80,81,82,83,84,86,87,69,88,89,
            90,91,92,93,94,95,96,97,78,79,
            27,24,26,25,49,1,3,31,2,30,
            6,8,7,5,0,2,3,49,31,30,
            0,3,50,30,70,14,15,11,5,9,
            10,21,22,16,23,12,2,17,18,19,
            13,1,4,20,0,24,26,25,28,14,
            15,11,5,9,10,21,22,16,23,12,
            2,1,4,17,18,19,13,77,3,0,
            69,20,14,15,11,5,9,10,21,22,
            16,23,12,2,17,18,19,13,1,4,
            30,70,0,49,16,17,18,19,13,4,
            14,15,11,5,9,10,21,22,12,23,
            2,1,31,3,0,2,48,31,30,6,
            8,7,3,49,27,69,0,69,88,89,
            90,91,92,94,93,95,96,97,5,71,
            72,9,10,64,63,73,74,75,76,78,
            79,80,81,11,82,83,84,68,77,31,
            50,99,86,87,48,6,8,7,49,27,
            3,0,3,49,31,1,24,0,31,3,
            2,0,3,49,50,27,0,32,51,24,
            52,65,33,53,34,54,55,35,26,56,
            57,28,66,36,67,58,59,25,60,61,
            62,1,4,12,7,8,6,29,3,50,
            0,1,4,3,50,49,0,77,3,68,
            0,31,98,50,39,41,20,45,47,42,
            37,43,44,40,38,46,29,3,27,2,
            17,18,19,13,14,15,11,5,9,10,
            21,22,16,23,12,65,66,67,59,51,
            56,54,55,53,52,57,58,60,61,62,
            36,33,28,32,35,24,26,25,34,6,
            8,7,4,1,0,37,0,48,68,0,
            3,49,50,69,0,48,2,3,31,49,
            0,5,2,30,31,3,32,51,52,65,
            33,53,34,54,55,35,56,57,28,66,
            36,67,58,59,60,61,62,1,4,12,
            7,8,6,68,24,26,25,0,3,48,
            31,13,0,16,17,18,19,13,1,4,
            2,14,15,11,5,9,10,21,22,12,
            23,29,0,5,1,2,48,6,8,7,
            0,59,51,56,54,55,53,52,57,58,
            60,61,62,30,49,31,36,33,28,32,
            35,24,26,25,34,48,27,3,5,1,
            7,8,6,2,0,5,32,51,24,52,
            65,33,53,34,54,55,35,26,56,57,
            28,66,36,67,58,59,25,60,61,62,
            1,4,12,68,6,8,7,0,39,41,
            20,45,47,42,37,43,44,40,38,46,
            29,16,17,18,19,1,4,2,14,15,
            11,5,9,10,21,22,12,23,27,3,
            13,0,32,51,52,65,33,53,34,54,
            55,35,56,57,28,66,36,67,58,59,
            60,61,62,7,8,6,20,24,26,25,
            2,17,18,19,13,4,14,15,11,9,
            10,21,22,16,23,12,1,5,0,16,
            17,18,19,13,1,4,2,14,15,11,
            5,9,10,21,22,12,23,48,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            111,20,38,20,38,38,38,38,38,38,
            38,38,38,38,38,20,147,20,20,20,
            20,20,20,20,20,20,20,20,38,147,
            10,10,58,149,54,54,54,105,1,32,
            38,38,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,38,152,38,
            38,38,38,38,38,38,38,38,38,38,
            38,38,54,54,42,38,139,40,104,23,
            23,77,20,20,20,78,84,78,84,84,
            78,84,78,20,78,71,38,86,20,20,
            20,20,20,20,20,20,20,20,20,20,
            20,20,20,20,20,20,20,20,126,160,
            20,135,61,42,27,41,54,137,29,54,
            50,20,8,135,8,135,8,8,8,135,
            38,20,92,114,116,116,8,20,20,142,
            20,20,116,20,64,20,115,21,38,38,
            36,20,126,27,42,41,48,54,122,12,
            20,96,56,53,20,54,84,126,20,126,
            20,116,116,164,149,20,149,149,142,20,
            20,142,99,20,67,118,126,20,126,27,
            38,38,42,41,121,23,23,139,96,54,
            54,20,54,20,135,128,126,8,166,116,
            54,20,54,54,142,38,142,116,84,132,
            124,139,20,109,33,35,20,37,8,38,
            20,25,33,126,27,48,42,42,54,137,
            29,80,56,54,38,54,126,33,115,156,
            8,67,20,20,116,166,142,149,142,142,
            99,135,84,82,37,54,20,20,37,42,
            8,38,36,48,44,54,128,99,67,33,
            38,8,166,116,54,20,135,109,116,20,
            109,38,42,67,54,54,38,33,116,38,
            20,132,84,33,54,166,116,142,20,54,
            42,33,20,99,38,84,135,142,54,54,
            69,135,142
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            99,113,97,96,80,95,94,1,0,89,
            0,99,113,98,97,96,80,95,94,0,
            133,0,49,0,129,0,72,0,24,7,
            0,7,50,0,85,7,63,5,0,7,
            5,33,0,123,7,41,0,29,0,132,
            24,0,111,24,0,109,0,7,116,0,
            5,7,0,5,135,0,68,0,125,0,
            80,76,77,78,79,88,69,51,0,61,
            60,45,43,28,0,7,41,1,34,117,
            0,34,1,50,93,7,41,0,7,45,
            43,28,0,24,60,61,7,0,87,0,
            7,114,0,31,7,27,0,1,136,0,
            24,61,60,43,45,7,0,103,7,65,
            0,43,45,7,15,0,7,41,28,66,
            0,1,34,7,35,0,65,32,7,31,
            0,7,31,115,0,7,65,82,0,61,
            60,28,0,41,75,7,64,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            87,2,89,88,9,99,97,98,10,11,
            8,95,86,6,7,70,83,84,85,3,
            12,13,96,50,78,66,94,71,100,1,
            92,46,57,62,65,74,79,47,48,51,
            52,53,59,60,61,67,73,29,42,93,
            49,54,58,63,64,68,69,76,77,80,
            81,82,16,17,56,72,75,30,31,4,
            14,15,18,19,20,21,91,43,44,22,
            23,24,25,26,5,27,28,32,33,34,
            35,36,37,38,39,40,41,55,101,90
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            107,0,0,0,109,113,0,114,115,116,
            117,118,119,120,182,0,0,0,121,122,
            123,124,0,104,125,0,106,183,142,0,
            108,130,103,126,129,0,0,0,0,0,
            134,162,164,0,165,0,0,0,166,105,
            141,0,0,152,0,128,0,151,175,176,
            177,0,0,0,156,163,172,0,144,0,
            167,170,171,174,133,145,146,147,148,153,
            0,155,159,161,178,0,187,189,110,111,
            112,127,132,136,137,138,139,140,143,149,
            150,0,154,158,0,160,169,0,184,0,
            186,0,190,102,0,0,131,135,0,0,
            157,0,168,173,0,179,180,0,181,0,
            0,185,0,0,188,191,0,0,0,0,
            0,0,0,0,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            159,217,387,296,179,276,110,116,245,73,
            325,347,304,1,82,126,144,59,225,286,
            55,87,122,196,261,367,402,406,321,343,
            356,374,356,310,15,27,50,8,8,91,
            94,99,131,154,94,206,211,214,273,410,
            44,67,200,265,371,381,8,99,235,169,
            334,169,235,381,20,20,35,106,192,35,
            35,35,35,35,271,365,20,20,39,134,
            106,134,134
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            167,167,167,283,167,283,6,6,167,79,
            331,353,291,6,53,6,53,64,230,291,
            53,53,6,194,194,167,53,6,283,283,
            283,378,360,314,18,18,53,6,6,53,
            97,108,6,53,157,209,209,209,194,53,
            47,70,203,268,47,384,11,102,230,186,
            337,172,238,395,25,33,37,108,194,251,
            253,255,257,259,194,194,22,30,41,141,
            102,136,149
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,76,5,39,78,39,49,49,76,58,
            39,38,39,137,62,49,48,16,76,39,
            108,62,49,82,75,32,5,5,39,38,
            38,23,38,39,104,101,3,129,128,60,
            74,66,49,45,54,77,77,77,40,3,
            36,85,82,75,36,8,137,66,76,78,
            39,78,76,5,104,101,113,66,82,98,
            97,96,95,94,75,37,104,101,135,48,
            66,46,48
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            50,50,50,31,50,31,77,77,50,50,
            31,98,27,77,31,77,31,31,20,27,
            31,31,77,27,27,50,31,77,31,31,
            31,48,31,27,7,7,31,77,77,31,
            2,5,77,31,1,1,1,1,27,31,
            48,69,1,1,48,31,68,5,20,20,
            37,1,1,31,1,1,12,5,27,1,
            65,66,66,59,27,27,1,1,68,2,
            5,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            33,33,106,92,33,92,79,79,33,173,
            92,92,92,10,83,79,15,37,33,92,
            12,83,79,6,29,90,106,106,92,92,
            92,142,92,92,1,24,106,4,10,83,
            85,73,79,15,17,33,33,33,92,106,
            92,176,6,29,92,113,10,73,33,33,
            92,33,33,106,1,24,34,73,6,34,
            34,34,34,34,29,92,1,24,27,15,
            73,15,15
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            156,68,156,30,0,103,0,156,30,0,
            30,128,103,0,183,128,0,183,0,128,
            0,159,183,0,159,0,154,128,0,152,
            183,0,152,0,199,0,189,0,156,0,
            30,128,0,235,39,0,29,129,0,132,
            2,0,104,0,231,2,209,0,230,2,
            2,7,0,104,104,0,226,107,0,31,
            151,0,168,191,107,20,163,0,105,0,
            0,171,107,2,160,0,171,107,2,0,
            174,2,0,166,107,0,175,0,157,166,
            0,9,0,170,0,157,0,9,0,125,
            28,207,107,30,0,125,207,107,28,30,
            0,125,28,30,0,125,207,107,30,0,
            125,30,0,145,0,2,0,168,104,0,
            2,104,0,171,107,2,145,0,2,0,
            167,104,0,154,2,0,162,0,168,205,
            107,20,101,222,65,0,105,0,222,65,
            0,107,3,0,0,0,105,0,168,205,
            107,20,222,65,0,3,0,0,0,105,
            0,165,0,106,0,221,107,165,0,107,
            165,0,157,106,0,181,65,0,107,0,
            181,67,0,181,66,0,202,107,20,220,
            101,219,180,0,220,101,219,180,0,3,
            0,0,105,0,219,180,0,107,0,3,
            0,0,105,0,202,107,20,219,180,0,
            148,0,147,0,146,0,145,0,144,0,
            218,107,141,0,107,141,0,135,106,0,
            141,0,131,46,0,164,127,164,175,2,
            43,0,104,129,0,164,175,2,43,0,
            106,0,104,129,0,164,127,164,127,164,
            2,43,0,164,127,164,2,43,0,164,
            2,43,0,106,0,106,0,104,129,0,
            131,2,37,0,131,2,37,135,42,0,
            104,106,0,135,42,0,79,2,108,104,
            106,0,131,2,47,0,135,124,131,2,
            45,0,55,129,0,131,2,45,0,104,
            129,55,129,0,134,0,217,107,20,0,
            156,39,0,131,87,122,0,29,125,0,
            190,2,0,104,114,0,168,191,107,20,
            124,190,2,0,104,3,0,112,0,105,
            0,216,2,105,0,131,30,105,0,131,
            2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1959,1792,0,472,0,2489,2173,1886,0,1803,
            0,577,806,0,2068,1638,1959,2008,1792,2583,
            2028,1874,1818,1937,1769,0,897,0,2747,1705,
            1689,0,1289,413,382,0,2753,2526,2853,1959,
            2834,2008,2366,1792,2068,2830,2310,1937,1638,2028,
            2077,2014,1769,2803,413,1946,1718,795,731,2422,
            1289,2545,2504,2396,2495,2774,1692,2485,469,2476,
            2049,382,2228,2749,2340,2117,439,0,758,635,
            494,471,1638,2422,1874,1818,1770,1960,0,2697,
            2150,2409,2394,2353,2338,2297,2282,2241,2226,2185,
            2170,2129,1705,1689,0,2823,2793,2779,2755,2346,
            1645,444,2638,2612,2740,1659,594,816,1320,513,
            415,1748,2601,2576,2464,2451,2138,1899,1847,1345,
            2731,2714,2705,2564,1308,2690,2681,2672,2656,2647,
            1992,1621,1596,955,1572,1547,1523,713,1498,1474,
            1448,1422,921,1396,1370,897,871,646,1274,1248,
            1222,1196,1170,1144,1118,1092,1066,1034,1008,382,
            981,845,777,751,687,553,620,527,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,214,107,192,12,23,16,22,21,10,
            9,5,11,15,14,105,2,110,109,112,
            111,114,113,120,119,122,121,106,49,2,
            85,70,2,30,132,190,131,165,107,20,
            10,9,72,71,5,79,78,76,75,74,
            73,63,64,11,81,80,83,82,87,86,
            84,97,96,95,93,94,92,91,90,89,
            88,69,190,216,131,124,107,30,2,161,
            160,194,7,8,6,195,180,196,67,66,
            197,65,198,101,213,199,12,107,109,109,
            111,111,111,111,111,111,110,110,113,112,
            112,119,114,215,131,121,120,124,20,166,
            157,128,28,125,107,5,174,107,2,2,
            2,2,219,128,181,128,181,222,181,128,
            12,106,217,46,38,40,44,43,37,42,
            47,45,134,41,39,101,141,6,48,48,
            107,157,5,107,125,207,172,171,141,107,
            173,107,2,232,1,13,101,20,101,20,
            3,131,101,2,2,135,2,2,48,235,
            156,48,107,233,191,107,20,163,5,107,
            207,28,125,5,2,143,145,107,49,171,
            230,209,2,220,128,107,20,107,175,164,
            131,37,131,131,48,68,48,218,154,128,
            2,107,201,2,168,49,226,236,70,30,
            101,227,107,20,107,172,125,125,154,107,
            2,166,49,124,2,1,20,202,165,203,
            107,205,101,206,164,127,124,2,124,124,
            49,128,154,166,69,234,13,187,69,156,
            70,30,107,172,107,231,107,107,205,168,
            69,49,127,164,131,135,128,48,124,2,
            49,68,156,191,171,223,49,202,221,48,
            154,128,183,168,164,127,124,98,5,1,
            156,168,49,49,48,183,128,124,164,1,
            150,128,124
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            ">?",
            "<?",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "no_sizeof_type_name_start",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "identifier_list",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "extended_asm_param",
            "case_range_expression",
            "typeof_type_specifier",
            "typeof_declaration_specifiers",
            "field_name_designator"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 82,
           SCOPE_SIZE        = 83,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 333,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3424,
           MAX_LA            = 2147483647,
           NUM_RULES         = 381,
           NUM_NONTERMINALS  = 146,
           NUM_SYMBOLS       = 246,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1774,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 99,
           EOLT_SYMBOL       = 99,
           ACCEPT_ACTION     = 2925,
           ERROR_ACTION      = 3043;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
