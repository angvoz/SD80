/*******************************************************************************
* Copyright (c) 2006, 2009 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,4,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,4,1,4,1,3,3,3,1,3,
            3,1,3,3,1,3,3,3,3,1,
            3,3,1,3,1,3,1,3,1,3,
            1,3,1,5,1,3,3,3,3,3,
            3,3,3,3,3,3,1,1,2,1,
            0,1,3,1,1,1,1,1,1,1,
            1,3,4,3,2,4,1,2,1,1,
            1,2,5,7,5,1,0,7,5,9,
            8,3,2,2,2,3,2,4,2,2,
            2,2,2,1,1,1,1,2,1,2,
            2,2,1,2,2,1,2,2,1,2,
            2,1,2,2,1,3,1,3,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,6,
            8,0,0,1,1,3,3,3,0,1,
            0,1,2,4,2,1,1,1,3,1,
            1,2,3,7,8,0,1,0,1,3,
            1,3,1,1,1,1,1,1,3,1,
            1,1,1,1,3,1,2,2,1,5,
            3,1,3,5,1,3,1,3,2,4,
            3,5,4,6,6,3,5,1,3,4,
            5,6,0,1,2,1,3,1,1,3,
            2,1,1,1,1,2,1,2,3,1,
            1,1,3,1,2,2,2,3,4,5,
            1,1,7,3,0,0,1,1,3,3,
            4,1,1,2,3,2,3,2,1,0,
            1,2,1,1,1,1,1,2,1,3,
            6,4,2,4,-106,0,-161,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-37,0,0,0,-18,0,-61,-10,0,
            0,-159,0,-12,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-41,0,
            0,0,0,0,0,0,-9,0,0,0,
            0,0,-236,0,-4,0,0,0,0,0,
            -23,0,0,0,0,0,0,-2,0,0,
            -242,0,0,0,0,0,0,0,0,0,
            0,-32,0,-65,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-3,-139,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-13,0,0,
            0,-33,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-154,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-221,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-39,0,0,0,-120,0,-267,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-20,
            0,0,0,-21,0,-7,-27,0,0,-271,
            0,-156,0,-28,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-251,
            -31,0,0,0,-46,0,-22,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-24,0,0,-148,0,
            -30,0,0,0,0,0,0,0,0,0,
            0,0,0,-34,0,0,-137,0,-66,0,
            0,0,0,0,0,0,0,0,-25,0,
            -280,0,-279,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-44,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-58,0,-102,-50,
            0,0,0,0,-26,0,-38,0,0,0,
            -51,-146,0,0,0,0,0,0,0,0,
            0,0,0,0,-157,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -192,-53,0,0,0,0,0,0,-150,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-138,0,0,0,0,0,0,0,
            0,-35,0,-36,0,0,0,0,0,0,
            0,-60,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-113,0,-119,0,-132,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-188,0,0,0,0,0,-165,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-118,0,
            -104,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-121,0,-49,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-93,0,-151,0,-179,0,0,0,
            0,0,0,0,0,0,0,-67,0,0,
            0,0,0,0,0,0,-122,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-133,0,0,0,-160,0,-123,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-124,0,-189,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-200,
            0,0,0,0,0,-125,0,-63,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-201,0,-126,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-202,0,0,0,0,
            0,-127,0,-224,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-226,0,-128,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-227,0,0,0,0,0,-129,0,-240,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-265,0,
            -130,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-274,0,0,
            0,0,0,-131,0,-278,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-284,0,-193,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-290,0,0,0,0,0,-194,
            0,-74,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -75,0,-230,0,-76,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-77,
            0,0,0,-78,0,-235,0,-54,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-79,0,0,0,-249,0,-80,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-81,0,-147,
            0,-82,0,0,0,0,0,0,0,-260,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-83,0,0,0,
            -270,0,-84,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-87,0,0,
            0,-152,0,-89,0,0,0,0,0,0,
            0,0,0,-277,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -111,0,0,0,-283,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-90,0,0,0,-72,0,-96,0,0,
            0,0,0,-48,0,0,0,-149,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-95,0,-42,0,0,-238,0,-62,-97,
            0,0,0,0,0,0,0,0,0,-92,
            -45,0,0,-99,-91,0,0,0,-100,-183,
            0,0,0,0,0,-114,0,0,-269,0,
            0,0,-103,0,-29,0,0,-52,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -70,0,-105,0,0,0,0,0,0,0,
            -40,0,0,0,0,0,0,0,0,0,
            0,0,-94,0,-172,0,0,0,-86,-107,
            0,-47,0,-101,0,0,0,0,0,0,
            0,0,-190,-115,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -59,-180,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-163,0,0,0,
            0,0,-164,0,0,0,0,-15,0,-8,
            0,-109,0,0,0,-166,-228,0,0,0,
            -169,0,0,0,0,-223,-191,-6,-112,0,
            0,-234,0,0,0,0,0,0,0,-162,
            0,0,0,-174,0,0,0,0,0,0,
            0,0,-17,0,-116,-252,0,0,0,0,
            0,0,0,0,0,0,0,-176,0,0,
            0,0,0,0,0,-195,0,0,0,0,
            0,-247,-197,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-248,
            0,0,0,0,-73,0,0,0,0,0,
            0,0,0,0,-177,0,0,0,-184,0,
            0,0,0,0,0,-263,0,0,-98,0,
            0,-85,-185,0,0,0,0,0,-204,0,
            0,0,-282,0,-276,0,0,0,-205,0,
            0,0,0,-206,0,0,0,0,0,0,
            0,0,0,0,-155,0,-207,0,0,0,
            0,0,0,0,0,0,0,0,-173,0,
            0,0,0,0,-208,0,0,0,0,0,
            -108,-57,0,0,-209,0,0,0,0,0,
            -175,0,0,-239,-258,0,0,0,0,0,
            0,0,0,0,0,0,-178,0,0,0,
            -187,0,-229,0,0,-232,0,0,0,0,
            0,0,0,0,0,0,-110,0,0,0,
            0,0,-210,0,0,0,0,0,-211,0,
            0,0,0,0,0,0,0,0,-254,0,
            0,-212,0,0,0,-233,0,0,0,0,
            -186,-213,0,-214,-250,0,-215,0,0,0,
            -256,0,0,-216,0,0,0,0,0,0,
            0,0,0,0,-217,0,-262,0,-218,-68,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-257,0,0,-266,
            -198,0,0,-196,0,0,0,0,0,0,
            0,0,-219,0,0,0,0,0,-287,0,
            0,0,-220,0,0,0,0,0,0,0,
            0,0,0,-225,-261,0,0,-203,-243,0,
            -289,0,0,0,0,-268,0,0,0,0,
            0,0,0,0,0,-275,-181,0,0,-244,
            -281,0,-291,0,0,-43,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-69,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-288,0,0,0,0,
            -1,0,0,0,-259,-153,0,0,0,0,
            0,0,0,0,0,0,0,0,-19,-273,
            0,0,-144,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-140,0,0,
            0,0,0,-55,0,-71,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-199,-286,0,-145,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-5,
            0,0,-88,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-134,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-141,
            0,0,0,0,0,0,0,0,0,-241,
            0,0,-142,0,0,0,0,0,0,0,
            0,0,-231,-246,0,0,-245,0,0,0,
            0,-143,0,0,0,0,0,0,0,0,
            0,0,0,-11,0,0,0,0,-14,-182,
            0,0,0,0,0,0,0,-16,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -64,-135,0,0,0,0,0,0,0,-136,
            0,0,0,-167,0,0,0,0,-117,0,
            0,0,0,0,0,0,0,0,0,-56,
            0,0,0,0,0,0,0,0,0,-264,
            0,0,0,0,0,-237,0,0,0,0,
            0,0,-222,0,0,0,0,0,0,0,
            0,0,-253,0,0,0,0,-272,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -285,0,0,0,0,0,0,0,0,0,
            -158,0,0,0,0,0,0,0,0,0,
            -168,0,0,0,0,0,0,0,-170,0,
            0,0,-171,0,0,0,0,0,0,0,
            0,0,0,0,-255,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            107,2,125,40,40,23,23,45,45,17,
            17,1,1,3,3,3,3,4,4,4,
            5,6,6,6,6,6,6,6,6,78,
            78,90,7,7,7,7,7,7,7,7,
            7,7,7,8,8,9,9,9,9,10,
            10,10,11,11,11,12,12,12,12,12,
            13,13,13,14,14,15,15,16,16,18,
            18,19,19,20,20,22,22,22,22,22,
            22,22,22,22,22,22,22,29,27,21,
            108,108,91,91,56,30,30,30,30,30,
            30,30,31,31,31,28,28,92,92,68,
            68,32,32,33,33,33,63,63,34,34,
            34,34,35,35,35,35,35,47,47,24,
            24,24,24,24,48,48,48,84,84,79,
            79,79,79,80,80,80,81,81,81,82,
            82,82,83,83,83,93,93,85,85,86,
            49,51,51,51,51,51,64,65,65,65,
            65,65,65,65,65,65,65,65,65,72,
            69,69,109,110,74,74,70,70,70,87,
            94,94,95,95,88,88,88,57,111,111,
            96,97,97,97,71,71,112,98,98,99,
            99,89,89,25,26,26,26,50,52,52,
            41,41,41,41,37,37,38,42,42,43,
            39,39,100,100,44,114,114,113,113,46,
            46,46,46,46,46,46,46,46,101,54,
            54,54,54,36,75,75,66,66,66,67,
            67,58,58,115,115,77,77,76,76,76,
            59,59,59,60,61,61,61,62,62,62,
            62,73,73,53,53,55,117,116,116,116,
            116,102,118,119,119,120,120,121,121,107,
            107,122,122,103,103,103,103,123,123,104,
            104,104,105,106,106,292,1605,998,17,21,
            18,1132,948,45,1151,1170,1155,1193,1174,1218,
            1199,1247,622,1222,1253,75,331,92,359,176,
            135,213,1426,20,505,17,21,18,1132,43,
            45,1151,1170,1155,1193,1174,1218,1199,1247,908,
            1823,2190,284,137,134,136,160,944,702,524,
            224,233,667,587,1609,1051,179,336,241,139,
            166,358,231,1354,143,146,149,152,754,339,
            332,1115,135,213,1500,367,2104,2109,2118,1543,
            135,213,322,834,1407,20,1558,17,21,18,
            1132,41,524,224,232,145,134,136,160,419,
            1313,1518,788,137,134,136,160,702,665,224,
            229,442,219,609,221,223,127,274,541,139,
            166,90,587,187,143,146,149,152,402,339,
            269,782,925,272,1500,367,2104,2109,2118,1543,
            1426,20,210,17,21,18,1132,43,45,1151,
            1170,1155,1193,1174,1764,526,1350,20,550,17,
            21,18,1132,948,45,1151,1170,1155,1193,1174,
            1218,1199,1247,440,1222,1253,75,1124,281,1265,
            20,550,17,21,18,1132,948,45,1151,1170,
            1155,1193,1174,1218,1199,1247,225,1222,1253,75,
            296,281,255,213,314,594,324,402,986,282,
            1451,1268,1426,20,442,17,21,18,1132,43,
            45,1151,1170,1155,1193,1174,1218,1199,1774,287,
            412,833,282,1334,1268,1242,20,324,17,21,
            18,1132,948,45,1151,1170,1155,1193,1174,1218,
            1199,1247,289,1222,1253,75,892,281,288,1426,
            20,501,17,21,18,1132,43,45,1151,1170,
            1155,1675,1765,128,587,186,313,587,31,1426,
            20,290,17,21,18,1132,43,40,282,913,
            1268,1369,20,421,17,21,18,1132,948,45,
            1151,1170,1155,1193,1174,1218,1199,1247,158,1222,
            1253,75,310,281,1199,20,1359,17,21,18,
            1132,948,45,1151,1170,1155,1193,1174,1218,1199,
            1247,294,1222,1253,75,228,338,1108,179,833,
            358,1435,1681,312,282,1004,1268,829,1856,530,
            293,749,1426,20,239,17,21,18,1132,43,
            45,1644,135,213,291,1426,20,25,17,21,
            18,1132,43,45,1151,1170,1155,1193,1174,1218,
            1785,1466,831,657,105,137,134,136,160,1426,
            20,227,17,21,18,1132,43,45,1151,1170,
            1733,139,166,587,31,1386,143,146,149,152,
            283,339,326,671,587,188,1500,367,2104,2109,
            2118,1543,1388,20,2179,17,21,18,1132,948,
            45,1151,1170,1155,1193,1174,1218,1199,1247,260,
            1222,1253,75,440,809,1223,20,440,17,21,
            18,1132,948,45,1151,1170,1155,1193,1174,1218,
            1199,1247,1285,1222,1253,75,230,1566,1426,20,
            1573,17,21,18,1132,948,45,1151,1170,1155,
            1193,1174,1218,1199,1247,240,1222,1253,75,359,
            92,1426,20,24,17,21,18,1132,43,45,
            1151,1170,1155,1193,1174,1218,1199,1247,276,1222,
            1253,94,1426,20,418,17,21,18,1132,948,
            45,1151,1170,1155,1193,1174,1218,1199,1247,243,
            1222,1253,75,986,86,1426,20,998,17,21,
            18,1132,43,45,1151,1170,1739,1534,1426,20,
            124,17,21,18,1132,43,39,1426,20,1558,
            17,21,18,1132,948,45,1151,1170,1155,1193,
            1174,1218,1199,1247,440,1222,1253,75,1126,85,
            1426,20,180,17,21,18,1132,948,45,1151,
            1170,1155,1193,1174,1218,1199,1247,19,1222,1253,
            75,234,84,1426,20,1132,17,21,18,1132,
            948,45,1151,1170,1155,1193,1174,1218,1199,1247,
            440,1222,1253,75,1440,83,1426,20,384,17,
            21,18,1132,948,45,1151,1170,1155,1193,1174,
            1218,1199,1247,1572,1222,1253,75,440,82,1426,
            20,275,17,21,18,1132,948,45,1151,1170,
            1155,1193,1174,1218,1199,1247,440,1222,1253,75,
            1590,81,1426,20,440,17,21,18,1132,948,
            45,1151,1170,1155,1193,1174,1218,1199,1247,23,
            1222,1253,75,440,80,1426,20,1749,17,21,
            18,1132,948,45,1151,1170,1155,1193,1174,1218,
            1199,1247,440,1222,1253,75,1771,79,1426,20,
            440,17,21,18,1132,948,45,1151,1170,1155,
            1193,1174,1218,1199,1247,1807,1222,1253,75,440,
            78,1426,20,273,17,21,18,1132,948,45,
            1151,1170,1155,1193,1174,1218,1199,1247,440,1222,
            1253,75,279,77,1426,20,440,17,21,18,
            1132,948,45,1151,1170,1155,1193,1174,1218,1199,
            1247,1987,1222,1253,75,440,76,1426,20,280,
            17,21,18,1132,948,45,1151,1170,1155,1193,
            1174,1218,1199,1247,440,1222,1253,75,1851,1849,
            1426,20,1471,17,21,18,1132,948,45,1151,
            1170,1155,1193,1174,1218,1199,1247,1873,1222,1253,
            75,1055,1870,1426,20,876,17,21,18,1132,
            948,45,1151,1170,1155,1193,1174,1218,1199,1247,
            663,1222,1253,75,630,93,1426,20,331,17,
            21,18,1132,43,45,1151,1170,1155,1193,1174,
            1218,1199,1247,345,1222,1253,94,1426,20,796,
            17,21,18,1132,948,45,1151,1170,1155,1193,
            1174,1218,1199,1247,1519,1222,1253,75,931,74,
            1426,20,288,17,21,18,1132,43,45,1657,
            1426,20,212,17,21,18,1132,43,45,1151,
            1170,1155,1193,1174,1218,1199,1247,751,1222,1253,
            94,1426,20,550,17,21,18,1132,43,45,
            1151,1170,1155,1193,1174,1218,1199,1247,1067,1222,
            1253,94,1426,20,1064,17,21,18,1132,43,
            45,1151,1170,1752,1426,20,202,17,21,18,
            1132,43,45,1151,1170,1155,1193,1174,1218,1199,
            1247,331,1222,1253,94,1426,20,1871,17,21,
            18,1132,43,45,1151,1170,1155,1193,1174,1218,
            1199,1247,1069,1222,1253,94,1445,20,589,17,
            21,18,1132,34,178,1413,315,1761,1426,20,
            203,17,21,18,1132,43,45,1151,1170,1155,
            1685,111,587,1506,358,87,657,1295,1471,890,
            626,1916,96,1444,109,95,97,98,99,100,
            419,908,788,1622,708,1,1413,315,1471,793,
            1464,110,255,213,254,213,946,125,1517,587,
            296,88,111,54,231,331,87,1493,358,1471,
            1727,307,107,96,1444,109,95,97,98,99,
            100,1289,20,58,17,21,18,1132,43,36,
            314,331,110,665,224,229,1375,218,609,221,
            223,667,274,986,497,235,1413,315,263,358,
            1104,317,622,108,986,267,782,925,272,1442,
            123,246,111,941,1205,2070,87,667,1522,1471,
            765,112,264,96,1444,109,95,97,98,99,
            100,419,419,1545,1716,1964,277,1682,702,665,
            224,1322,110,219,609,221,1274,60,127,195,
            665,224,229,986,218,609,221,223,582,274,
            1146,261,358,107,2110,493,986,119,1413,315,
            126,905,267,782,925,272,986,331,355,1119,
            1395,1711,998,122,111,135,213,1507,87,1040,
            358,1471,476,2223,172,96,1444,109,95,97,
            98,99,100,1108,179,355,986,1421,142,134,
            136,160,106,667,110,665,224,581,1261,218,
            609,221,534,2228,141,166,359,204,135,213,
            159,391,1178,1319,20,108,17,21,18,1132,
            43,44,665,224,229,734,218,609,221,223,
            1490,138,134,136,160,1445,20,159,17,21,
            18,1132,33,155,527,360,242,140,166,1118,
            732,576,144,147,150,153,1489,339,557,480,
            1413,788,1112,1465,657,28,28,1268,1268,706,
            155,527,381,587,298,868,111,1421,576,745,
            87,255,213,28,1480,1268,1386,96,1444,1511,
            95,97,98,99,100,1426,20,1486,17,21,
            18,1132,43,45,1151,1170,1155,1193,1767,521,
            1413,788,665,224,229,367,218,609,221,223,
            259,874,786,657,657,477,111,1845,763,1454,
            87,562,1413,788,908,998,2200,96,1444,104,
            95,97,98,99,100,197,1471,358,111,2083,
            311,890,87,603,1413,788,868,278,1421,96,
            1444,102,95,97,98,99,100,664,1609,308,
            111,199,200,1284,87,898,254,213,1472,1286,
            181,96,1444,103,95,97,98,99,100,644,
            1413,788,1430,665,224,229,1464,218,609,221,
            223,1161,1432,2206,1220,1500,111,672,1845,192,
            87,685,1413,788,1141,857,1867,96,1444,119,
            95,97,98,99,100,1411,1357,998,111,1000,
            1426,20,87,17,21,18,1132,43,38,96,
            1444,115,95,97,98,99,100,726,1413,788,
            998,331,198,200,1289,20,209,17,21,18,
            1132,43,36,1467,111,1380,1623,1925,87,767,
            1413,788,205,711,1787,96,1444,1866,95,97,
            98,99,100,1810,904,1499,111,667,359,359,
            87,808,1413,788,247,613,1503,96,1444,114,
            95,97,98,99,100,2087,1142,933,111,657,
            359,359,87,849,1413,788,355,2336,1421,96,
            1444,121,95,97,98,99,100,2336,22,244,
            111,197,1426,20,87,17,21,18,1132,43,
            37,96,1444,120,95,97,98,99,100,2336,
            245,295,2336,665,224,229,359,218,609,221,
            223,349,2336,375,1472,1484,1426,20,159,17,
            21,18,1132,43,45,1151,1170,1762,305,355,
            986,1421,194,1426,20,419,17,21,18,1132,
            43,45,1151,1629,2336,193,297,2241,358,2336,
            788,156,527,2336,622,2336,1426,20,304,17,
            21,18,1132,43,35,2336,665,224,229,88,
            218,609,221,223,2336,1848,1005,986,2084,1426,
            20,493,17,21,18,1132,43,45,1151,1639,
            702,665,224,229,118,219,609,221,223,277,
            406,2336,375,1426,20,2336,17,21,18,1132,
            43,36,2336,2336,301,303,309,305,388,1061,
            2336,1811,274,2336,419,2336,2336,2336,2336,2336,
            2336,2336,2336,2010,2336,267,782,925,272,2336,
            2336,2336,2336,2336,2336,2336,2336,304,2336,2336,
            1426,20,1040,17,21,18,1132,43,48,2336,
            950,2336,657,1426,20,274,17,21,18,1132,
            43,47,2336,992,950,657,657,1339,267,782,
            925,272,1426,20,1386,17,21,18,1132,43,
            46,2336,2336,2336,1003,266,667,197,1386,1062,
            664,1609,2336,302,303,309,2336,2336,1449,2336,
            667,2336,2336,702,391,2336,2336,2336,259,135,
            213,2336,2336,274,135,213,1059,1454,2087,2336,
            1472,2336,259,135,213,2336,269,782,925,272,
            1059,1454,148,134,136,160,2336,151,134,136,
            160,358,358,315,315,2336,154,134,136,160,
            358,192,315,2336,1479,2336,315,1695,1867,890,
            2336,2336,88,88,2336,197,197,2336,894,894,
            1084,88,657,2336,197,88,2336,894,1471,209,
            1084,116,657,2336,254,213,890,2336,1756,1623,
            2336,2336,2336,1479,1386,788,2336,2336,2029,2029,
            2336,2213,2336,1479,1386,788,2336,2029,1479,2336,
            788,254,213,2336,88,2336,2336,1516,767,940,
            116,1479,2336,788,88,2336,2336,967,259,88,
            116,358,2336,788,497,116,763,1454,259,2336,
            2336,358,88,788,2336,2336,1086,1454,116,358,
            2336,788,88,358,2336,788,1546,2336,1789,2336,
            1107,1616,88,2336,2336,358,1940,788,994,2336,
            88,1105,2336,2336,88,2336,1013,2336,2336,2336,
            1032,2336,2336,2336,1124,2336,88,2336,2336,2336,
            2336,2336,1078,2336,0,11,226,0,2344,1,
            0,1,2573,0,8,10,0,179,20,0,
            1,2562,0,113,1829,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,0,54,55,56,0,58,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,59,54,55,56,59,58,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,0,54,55,56,0,58,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,41,42,
            43,44,45,46,47,48,49,50,51,52,
            59,54,55,56,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,0,54,55,
            56,0,1,2,3,0,5,2,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,23,2,25,26,27,28,
            29,0,1,0,3,0,1,6,3,6,
            0,6,41,42,43,44,45,46,47,48,
            49,50,51,52,0,54,55,56,0,1,
            2,3,4,5,0,1,2,0,0,0,
            1,2,4,4,5,78,0,19,20,21,
            22,23,24,25,26,27,28,29,19,20,
            21,22,23,0,25,26,27,28,29,41,
            42,43,44,45,46,47,48,49,50,51,
            52,0,54,55,56,0,1,2,3,4,
            5,0,53,69,70,71,72,0,0,60,
            0,73,4,65,19,20,21,22,23,24,
            25,26,27,28,29,69,70,71,72,0,
            22,0,0,4,61,4,41,42,43,44,
            45,46,47,48,49,50,51,52,0,54,
            55,56,61,22,53,0,83,84,85,86,
            87,88,89,90,91,92,0,66,73,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,57,60,
            0,22,61,24,0,1,6,3,0,30,
            31,32,33,34,35,36,37,38,39,40,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,0,
            0,1,22,3,24,69,70,71,72,0,
            30,31,32,33,34,35,36,37,38,39,
            40,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            0,0,1,22,3,24,0,1,0,3,
            2,30,31,32,33,34,35,36,37,38,
            39,40,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,0,1,2,22,0,24,2,0,0,
            81,82,30,31,32,33,34,35,36,37,
            38,39,40,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,0,0,1,22,3,24,0,7,
            8,0,0,30,31,32,33,34,35,36,
            37,38,39,40,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,74,75,0,22,0,24,2,
            0,1,7,8,30,31,32,33,34,35,
            36,37,38,39,40,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,0,74,75,22,0,24,
            0,7,8,0,6,30,31,32,33,34,
            35,36,37,38,39,40,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,0,0,1,22,3,
            24,6,0,0,2,0,30,31,32,33,
            34,35,36,37,38,39,40,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,73,77,0,22,
            0,24,0,5,0,5,4,30,31,32,
            33,34,35,36,37,38,39,40,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,0,1,2,
            22,76,24,0,1,0,3,4,30,31,
            32,33,34,35,36,37,38,39,40,0,
            58,0,19,20,21,4,23,24,25,26,
            27,28,29,0,0,2,0,0,19,20,
            21,4,0,22,41,42,43,44,45,46,
            47,48,49,50,51,52,59,54,55,56,
            0,58,0,1,30,3,4,62,63,9,
            0,1,2,0,4,0,1,2,57,0,
            5,19,20,21,5,23,24,25,26,27,
            28,29,19,20,21,53,23,60,25,26,
            27,28,29,41,42,43,44,45,46,47,
            48,49,50,51,52,0,54,55,56,4,
            58,0,1,53,3,4,0,0,53,0,
            60,4,0,0,0,2,2,22,4,0,
            19,20,21,64,23,24,25,26,27,28,
            29,19,20,21,0,23,0,25,26,27,
            28,29,41,42,43,44,45,46,47,48,
            49,50,51,52,0,54,55,56,0,58,
            0,1,2,3,0,58,53,53,59,5,
            0,0,2,0,60,5,0,4,0,19,
            20,21,6,23,6,25,26,27,28,29,
            19,20,21,0,23,22,25,26,27,28,
            29,41,42,43,44,45,46,47,48,49,
            50,51,52,0,54,55,56,0,1,6,
            3,0,1,53,0,1,2,0,0,5,
            57,67,68,0,61,0,19,20,21,4,
            23,0,25,26,27,28,29,19,20,21,
            0,0,19,20,21,0,0,64,41,42,
            43,44,45,46,47,48,49,50,51,52,
            0,54,55,56,19,20,21,53,23,0,
            25,26,27,28,29,64,0,0,61,19,
            20,21,57,6,53,60,41,42,43,44,
            45,46,47,48,49,50,51,52,0,1,
            2,3,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,77,0,0,
            79,23,0,1,2,3,4,5,9,7,
            8,9,10,11,12,13,14,15,16,17,
            18,0,1,2,3,23,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            0,57,0,65,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,0,0,0,2,65,0,1,
            2,3,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,0,0,0,
            0,0,0,19,20,21,4,57,0,1,
            2,3,58,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,53,0,0,
            2,0,0,5,0,62,63,62,63,0,
            1,2,3,65,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,0,1,
            2,3,60,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,0,1,2,
            3,53,5,0,7,8,9,10,11,12,
            13,14,15,16,17,18,0,1,2,3,
            0,5,0,7,8,9,10,11,12,13,
            14,15,16,17,18,0,1,2,3,0,
            5,0,7,8,9,10,11,12,13,14,
            15,16,17,18,0,1,2,3,0,5,
            0,7,8,9,10,11,12,13,14,15,
            16,17,18,0,0,0,0,19,20,21,
            0,23,2,25,26,27,28,29,0,0,
            10,11,4,0,5,0,76,4,0,0,
            5,62,63,62,63,6,0,0,0,0,
            22,4,0,53,0,22,0,19,20,21,
            6,0,6,0,0,0,66,6,0,0,
            57,57,0,53,0,0,0,0,0,64,
            0,0,0,0,0,0,66,0,60,0,
            57,0,0,0,78,0,67,68,0,0,
            80,0,67,68,0,58,57,59,0,0,
            0,0,0,61,0,0,0,0,0,0,
            0,0,59,59,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2336,4165,1,4164,1487,1,659,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2345,1,2437,1,1,1,1,1,
            1360,853,811,1433,1393,1619,1328,1352,1379,1370,
            1374,1,1,1,1,1,1,1,1,1,
            1,1,1,2336,1,1,1,2336,2343,8,
            2324,2324,2324,2324,2324,2324,2324,2324,2324,2324,
            2324,2324,2324,2324,2324,2324,2324,2324,2324,2324,
            2324,2324,2324,2324,2324,2324,2324,2324,2324,2324,
            2324,2324,2324,2324,2324,2324,2324,2324,2324,2324,
            2324,2324,2324,2324,2324,2324,2324,2324,2324,2324,
            2324,2324,1669,2324,2324,2324,1691,2324,2336,4165,
            1,4164,1487,1,659,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2345,1,2437,1,1,1,1,1,1360,853,
            811,1433,1393,1619,1328,1352,1379,1370,1374,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2336,1,1,1,182,2343,2336,4165,1,
            4164,2346,1,659,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2345,
            1,2437,1,1,1,1,1,1360,853,811,
            1433,1393,1619,1328,1352,1379,1370,1374,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1713,1,1,1,2336,4165,1,4164,2346,1,
            659,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2345,1,2437,1,
            1,1,1,1,1360,853,811,1433,1393,1619,
            1328,1352,1379,1370,1374,1,1,1,1,1,
            1,1,1,1,1,1,1,71,1,1,
            1,2336,2347,2161,2348,11,2013,2315,1892,1790,
            1966,1595,1326,404,2349,2350,2351,2352,868,599,
            2550,2551,2552,2336,2499,359,2500,2498,2553,2501,
            2497,2336,2347,2336,2348,2336,2347,660,2348,551,
            253,1398,2504,2509,2508,2506,2507,2505,2510,2511,
            2503,2512,2513,2514,60,1498,438,344,2336,1,
            1,1,2346,1,1,2562,1939,1,2336,20,
            179,2327,2340,2327,2327,532,62,1,1,1,
            2345,1,2642,1,1,1,1,1,179,179,
            179,2327,179,43,179,179,179,179,179,1,
            1,1,1,1,1,1,1,1,1,1,
            1,157,1,1,1,2336,1,1,1,2346,
            1,2336,2327,1926,1272,855,709,183,1,2327,
            286,300,2346,2339,1,1,1,2345,1,2642,
            1,1,1,1,1,1926,1272,855,709,2336,
            2345,235,2336,2342,1084,223,1,1,1,1,
            1,1,1,1,1,1,1,1,2336,1,
            1,1,555,223,1251,2336,1061,1038,1015,992,
            969,923,946,900,877,832,61,1389,299,2336,
            4165,1,4164,2346,1,659,1,1,1,1,
            1,1,1,1,1,1,1,1,223,2341,
            229,2345,223,2437,185,4155,232,4155,2336,1360,
            853,811,1433,1393,1619,1328,1352,1379,1370,1374,
            2336,4165,1,4164,2346,1,659,1,1,1,
            1,1,1,1,1,1,1,1,1,2336,
            184,4157,2345,4157,2437,1926,1272,855,709,73,
            1360,853,811,1433,1393,1619,1328,1352,1379,1370,
            1374,2336,4165,1,4164,2346,1,659,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2336,206,4162,2345,4162,2437,2336,2347,2336,2348,
            2174,1360,853,811,1433,1393,1619,1328,1352,1379,
            1370,1374,2336,4165,1,4164,2346,1,659,1,
            1,1,1,1,1,1,1,1,1,1,
            1,253,2562,1939,2345,2336,2437,2261,2336,63,
            342,2251,1360,853,811,1433,1393,1619,1328,1352,
            1379,1370,1374,2336,4165,1,4164,2346,1,659,
            1,1,1,1,1,1,1,1,1,1,
            1,1,52,208,2347,2345,2348,2437,2336,1220,
            672,64,2336,1360,853,811,1433,1393,1619,1328,
            1352,1379,1370,1374,2336,4165,1,4164,2346,1,
            659,1,1,1,1,1,1,1,1,1,
            1,1,1,1338,579,54,2345,2336,2437,2269,
            2336,2574,1220,672,1360,853,811,1433,1393,1619,
            1328,1352,1379,1370,1374,2336,4165,1,4164,2346,
            1,659,1,1,1,1,1,1,1,1,
            1,1,1,1,53,1338,579,2345,2336,2437,
            69,1220,672,2336,1502,1360,853,811,1433,1393,
            1619,1328,1352,1379,1370,1374,2336,4165,1,4164,
            2346,1,659,1,1,1,1,1,1,1,
            1,1,1,1,1,1,207,373,2345,373,
            2437,659,2336,2336,2273,67,1360,853,811,1433,
            1393,1619,1328,1352,1379,1370,1374,2336,4165,1,
            4164,2346,1,659,1,1,1,1,1,1,
            1,1,1,1,1,1,2314,685,2336,2345,
            2336,2437,1,1178,2336,1301,2318,1360,853,811,
            1433,1393,1619,1328,1352,1379,1370,1374,2336,4165,
            1,4164,2346,1,659,1,1,1,1,1,
            1,1,1,1,1,1,1,1,2562,1939,
            2345,460,2437,2336,1,55,1,191,1360,853,
            811,1433,1393,1619,1328,1352,1379,1370,1374,2336,
            2343,2336,1,1,1,2346,1,2532,1,1,
            1,1,1,2336,2336,2285,2336,1,2550,2551,
            2552,2342,220,2345,1,1,1,1,1,1,
            1,1,1,1,1,1,1230,1,1,1,
            65,191,2336,1,1844,1,190,1943,1989,1655,
            1,2330,1453,130,2342,262,2562,1453,1876,1,
            1,1,1,1,253,1,2532,1,1,1,
            1,1,2550,2551,2552,634,2499,2341,2500,2498,
            2553,2501,2497,1,1,1,1,1,1,1,
            1,1,1,1,1,2336,1,1,1,2346,
            190,2336,1,634,1,191,2336,2336,634,2336,
            2341,2344,131,222,1,1371,1986,2345,2342,2336,
            1,1,1,2594,1,2532,1,1,1,1,
            1,2550,2551,2552,2336,2499,2336,2500,2498,2553,
            2501,2497,1,1,1,1,1,1,1,1,
            1,1,1,1,2336,1,1,1,2336,191,
            1,520,1939,2348,49,2343,634,634,1197,2092,
            265,132,1986,236,2341,1,2336,223,229,2550,
            2551,2552,1530,2499,233,2500,2498,2553,2501,2497,
            2550,2551,2552,1,2499,223,2500,2498,2553,2501,
            2497,2504,2509,2508,2506,2507,2505,2510,2511,2503,
            2512,2513,2514,2336,1498,438,344,2336,2347,1707,
            2348,1,2321,634,268,2562,1453,211,249,253,
            223,2073,2060,248,223,2336,2550,2551,2552,2342,
            2499,271,2500,2498,2553,2501,2497,1,1,1,
            70,113,2550,2551,2552,129,2336,2594,2504,2509,
            2508,2506,2507,2505,2510,2511,2503,2512,2513,2514,
            250,1498,438,344,2550,2551,2552,634,2499,2336,
            2500,2498,2553,2501,2497,2594,2336,42,1176,1,
            1,1,1833,4148,634,2341,2504,2509,2508,2506,
            2507,2505,2510,2511,2503,2512,2513,2514,1,2347,
            2161,2348,2340,1411,256,1892,1790,1966,1595,1326,
            404,2349,2350,2351,2352,868,599,685,2336,66,
            2333,742,2336,2347,2161,2348,2340,1814,1655,1892,
            1790,1966,1595,1326,404,2349,2350,2351,2352,868,
            599,2336,2347,2161,2348,1130,2013,4148,1892,1790,
            1966,1595,1326,404,2349,2350,2351,2352,868,599,
            89,701,2336,2339,1,2347,2161,2348,29,2013,
            4148,1892,1790,1966,1595,1326,404,2349,2350,2351,
            2352,868,599,59,270,58,1694,2339,2336,2347,
            2161,2348,2340,2013,251,1892,1790,1966,1595,1326,
            404,2349,2350,2351,2352,868,599,2336,2336,2336,
            2336,2336,1,2550,2551,2552,91,1153,2336,2347,
            2161,2348,29,2013,4148,1892,1790,1966,1595,1326,
            404,2349,2350,2351,2352,868,599,634,268,2336,
            1986,2336,2336,253,2336,1943,1989,1943,1989,1,
            2347,2161,2348,2339,2013,4148,1892,1790,1966,1595,
            1326,404,2349,2350,2351,2352,868,599,2336,2347,
            2161,2348,91,2013,4148,1892,1790,1966,1595,1326,
            404,2349,2350,2351,2352,868,599,1,2347,2161,
            2348,634,2013,2336,1892,1790,1966,1595,1326,404,
            2349,2350,2351,2352,868,599,2336,2347,2162,2348,
            68,2013,2336,1892,1790,1966,1595,1326,404,2349,
            2350,2351,2352,868,599,2336,2347,2161,2348,57,
            2013,56,1892,1790,1966,1595,1326,404,2349,2350,
            2351,2352,868,599,2336,2347,2170,2348,133,2013,
            292,1892,1790,1966,1595,1326,404,2349,2350,2351,
            2352,868,599,30,207,1,72,2550,2551,2552,
            32,2499,420,2500,2498,2553,2501,2497,1,51,
            2362,2363,117,2336,2092,50,460,2346,252,2336,
            2092,1943,1989,1943,1989,4148,2336,285,201,30,
            117,1439,2336,1305,189,2345,189,2550,2551,2552,
            185,189,184,1,1,2336,1633,206,2336,2336,
            2365,3437,2336,1958,2336,2336,2336,2336,2336,2593,
            2336,2336,2336,2336,2336,2336,723,2336,117,2336,
            1635,2336,2336,2336,532,2336,2073,2060,2336,2336,
            597,2336,2073,2060,2336,1439,499,1284,2336,2336,
            2336,2336,2336,611,2336,2336,2336,2336,2336,2336,
            2336,2336,2348,2347
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            498,1,427,281,498,429,496,310,322,494,
            322,494,494,322,494,322,283,468,429,418,
            529,496,283,201,133,132,377,48,468,376,
            253,494,241,241,494,241,429,468,338,468,
            214,283,429,79,214,26,429,254,496,102,
            496,205,468,330,429,216,470,283,427,141,
            99,306,167,269,453,453,453,453,453,83,
            453,453,453,161,178,183,181,189,185,192,
            191,194,193,195,216,129,496,453,48,376,
            253,451,202,202,241,529,529,438,529,529,
            202,253,139,453,139,269,496,102,205,205,
            330,330,338,333,337,429,306,99,82,79,
            453,453,453,453,453,453,453,453,453,453,
            453,338,338,531,269,269,241,241,3,453,
            453,453,453,453,453,453,453,453,453,453,
            453,453,453,453,453,453,453,453,453,337,
            129,24,251,202,453,202,267,453,341,453,
            453,254,438,139,438,198,382,102,129,244,
            102,205,207,433,207,330,306,335,336,211,
            468,216,453,453,99,83,26,468,211,338,
            338,338,99,181,181,178,178,185,185,183,
            183,183,183,191,189,193,192,139,194,431,
            24,451,202,338,529,338,338,253,438,453,
            102,246,207,129,453,241,306,330,214,338,
            537,333,99,99,531,537,343,496,453,207,
            45,202,451,438,453,438,438,129,201,453,
            200,129,330,216,338,129,22,380,241,453,
            44,3,202,338,252,246,453,338,161,26,
            99,241,453,338,3,202,438,99,438,338,
            438
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            73,0,4,60,12,13,14,15,16,1,
            3,2,10,11,9,5,7,8,17,18,
            0,4,58,53,66,2,13,14,15,16,
            1,3,10,11,9,5,7,8,17,18,
            12,6,0,61,53,66,0,25,41,19,
            42,54,26,43,27,44,45,28,20,46,
            47,23,55,29,56,48,49,21,50,51,
            52,1,3,4,61,57,22,0,19,20,
            21,23,10,11,9,5,7,8,17,18,
            12,2,1,3,13,14,15,16,65,4,
            0,25,41,19,42,54,26,43,27,44,
            45,28,20,46,47,23,55,29,56,48,
            49,21,50,51,52,1,3,24,4,58,
            0,2,4,61,57,60,22,53,59,0,
            19,20,21,10,11,9,5,7,8,17,
            18,12,2,1,3,13,14,15,16,0,
            53,2,66,80,10,11,61,83,84,85,
            86,87,89,88,90,91,92,5,67,68,
            7,8,63,62,69,70,71,72,74,75,
            9,76,77,78,58,81,82,65,60,59,
            57,22,4,0,1,3,4,58,57,0,
            5,2,53,60,4,25,41,19,42,54,
            26,43,27,44,45,28,20,46,47,23,
            55,29,56,48,49,21,50,51,52,64,
            1,3,0,22,4,5,1,2,59,0,
            73,79,58,32,34,6,38,40,35,30,
            36,37,33,31,39,24,4,22,12,13,
            14,15,16,10,11,9,7,8,17,18,
            5,2,1,3,54,55,56,49,41,46,
            44,45,43,42,47,48,50,51,52,29,
            26,23,25,28,27,19,20,21,0,49,
            41,46,44,45,43,42,47,48,50,51,
            52,59,22,29,26,23,25,28,27,19,
            20,21,5,1,2,53,57,60,4,0,
            30,0,9,5,7,8,67,68,62,63,
            69,70,71,72,74,75,76,77,78,81,
            82,59,83,84,85,86,87,88,89,90,
            91,92,65,60,58,6,4,57,22,61,
            0,66,80,10,11,9,7,8,67,68,
            62,63,69,70,71,72,74,75,76,77,
            78,81,82,61,83,84,85,86,87,88,
            89,90,91,92,57,53,60,25,19,26,
            27,28,20,23,29,21,22,4,5,2,
            1,0,4,57,58,61,0,32,34,6,
            38,40,35,30,36,37,33,31,39,24,
            22,4,2,13,14,15,16,1,3,10,
            11,9,7,8,17,18,12,5,0,25,
            41,19,42,54,26,43,27,44,45,28,
            20,46,47,23,55,29,56,48,49,21,
            50,51,52,1,3,6,0,73,25,41,
            19,42,54,26,43,27,44,45,28,20,
            46,47,23,55,29,56,48,49,21,50,
            51,52,1,3,5,22,4,24,2,0,
            4,60,5,2,53,0,5,25,41,19,
            42,54,26,43,27,44,45,28,20,46,
            47,23,55,29,56,48,49,21,50,51,
            52,1,3,64,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            150,25,32,15,159,110,45,121,122,13,
            122,108,108,122,107,122,116,165,112,25,
            25,45,105,33,59,59,25,25,165,25,
            51,7,7,7,7,7,9,25,157,165,
            156,75,112,63,156,54,94,69,67,105,
            25,105,25,30,96,89,141,18,32,42,
            65,79,25,168,43,43,43,43,43,64,
            43,43,43,25,25,25,25,25,25,25,
            25,25,25,25,133,105,25,43,25,25,
            85,81,33,33,7,25,25,128,25,25,
            33,51,25,43,25,1,25,137,105,7,
            30,105,157,101,25,112,79,65,64,38,
            43,43,43,43,43,43,43,43,43,43,
            43,157,157,103,168,168,57,57,35,82,
            43,43,43,43,43,43,43,43,43,43,
            43,43,43,43,43,43,43,82,43,157,
            52,105,25,33,43,33,172,82,25,82,
            82,69,128,25,128,25,25,105,52,32,
            146,7,92,25,25,105,79,59,59,100,
            165,89,43,43,65,64,124,165,154,157,
            157,157,65,25,25,25,25,25,25,25,
            25,25,25,25,25,25,25,25,25,25,
            41,174,33,157,25,157,157,85,128,43,
            137,112,92,52,43,7,79,38,156,157,
            163,26,65,65,28,163,125,125,43,92,
            49,33,174,128,82,128,128,52,33,43,
            25,52,38,89,157,52,40,25,7,43,
            47,174,33,157,25,112,43,157,61,54,
            65,7,43,157,174,33,128,65,128,157,
            128
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            84,82,81,74,80,79,1,0,37,39,
            36,0,109,0,37,2,100,84,83,82,
            81,74,80,79,0,37,42,61,60,36,
            0,2,17,0,2,108,0,25,0,102,
            55,2,6,0,106,0,121,0,119,0,
            2,45,0,6,55,0,90,0,46,0,
            117,0,2,6,40,0,110,0,2,24,
            1,29,92,0,24,2,123,0,75,0,
            17,2,27,0,29,1,68,45,2,24,
            0,78,0,39,44,37,42,36,0,23,
            37,42,60,61,2,0,112,87,0,39,
            44,42,37,2,0,74,69,70,71,72,
            64,48,0,6,55,53,0,1,29,2,
            30,0,113,2,24,0,95,2,57,0,
            2,24,47,28,0,2,57,88,0,122,
            2,24,0,60,61,2,23,0,2,24,
            103,0,2,24,36,54,0,2,57,27,
            0,24,47,2,63,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,86,87,9,3,10,11,8,6,
            7,68,81,82,83,84,12,13,48,64,
            76,92,69,93,44,55,60,63,72,77,
            45,46,49,50,51,57,58,59,65,71,
            47,52,56,61,62,66,67,74,75,78,
            79,80,1,54,70,73,42,91,29,90,
            31,16,17,30,89,4,14,15,18,19,
            20,21,94,22,23,24,25,26,53,5,
            27,28,32,33,34,35,36,37,38,39,
            40,41,88
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            99,0,0,0,0,101,105,106,107,108,
            109,110,111,112,113,114,98,115,116,0,
            0,117,96,126,134,0,100,122,118,121,
            0,0,0,0,0,0,156,0,159,95,
            153,155,0,157,97,158,125,133,0,0,
            0,144,104,154,0,120,148,167,170,171,
            172,0,0,136,0,160,166,124,137,138,
            139,140,143,145,165,169,103,0,128,129,
            130,131,132,135,141,142,0,147,152,102,
            119,123,127,0,146,150,0,0,151,161,
            164,174,179,0,0,181,0,0,0,0,
            149,0,162,163,168,173,0,175,176,0,
            177,178,180,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            82,113,92,35,41,121,12,136,21,51,
            69,28,47,103,145,162,169,173,149,1,
            1,32,56,79,177,6,107,156,156,127,
            99,59,59,59
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            90,90,90,4,4,90,18,142,26,4,
            26,26,4,101,90,26,26,4,153,4,
            4,26,4,26,26,9,110,159,166,130,
            101,66,61,74
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            71,69,71,46,46,69,53,33,62,46,
            39,62,46,88,28,7,6,6,20,121,
            120,60,46,37,4,102,88,8,6,34,
            88,39,44,39
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            58,58,58,65,65,58,58,79,60,65,
            60,60,65,22,58,60,60,65,59,65,
            65,60,65,60,60,61,1,60,60,30,
            22,2,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            119,119,119,94,94,119,25,10,98,94,
            105,98,94,5,9,33,33,33,63,1,
            3,98,94,105,33,91,5,36,33,10,
            5,105,107,105
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            149,53,0,95,0,211,95,0,31,143,
            0,171,209,95,6,148,0,97,0,0,
            159,95,2,153,0,96,0,159,95,2,
            0,169,2,0,115,23,194,95,53,0,
            115,194,95,23,53,0,115,23,53,0,
            115,194,95,53,0,115,53,0,130,0,
            2,0,162,96,0,2,96,0,159,95,
            2,130,0,2,0,160,96,0,145,2,
            0,171,191,95,6,94,205,54,0,97,
            0,171,191,95,6,205,54,0,150,0,
            98,0,204,95,150,0,95,150,0,149,
            98,0,187,95,6,203,94,202,167,0,
            187,95,6,202,167,0,123,35,0,77,
            2,100,96,98,0,123,116,120,2,38,
            0,53,121,0,185,95,6,0,120,82,
            112,0,29,117,0,170,2,0,96,106,
            0,170,2,12,0,96,104,0,201,2,
            99,0,120,53,99,0,120,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            530,0,550,0,2083,1867,1681,0,1682,1873,
            1851,1829,1807,1771,1749,1713,1507,1691,1669,1435,
            1619,1375,1334,0,611,499,1590,1572,476,1573,
            555,0,1595,1326,404,1573,1814,342,685,532,
            1655,460,1926,1272,855,709,1338,579,1220,672,
            1989,1943,2092,2073,2060,2013,1966,1411,1892,1790,
            868,599,1305,611,1284,1251,1230,1197,1176,1153,
            1130,1107,788,1084,1061,1038,1015,992,969,946,
            923,900,877,832,765,315,811,742,555,634,
            499,476,0,925,782,665,609,2087,391,1986,
            1453,2029,1386,0,332,375,1635,391,1716,1453,
            1545,1386,1964,1442,1876,1939,1518,0,315,657,
            1543,375,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,200,117,95,215,95,193,172,173,167,
            174,56,55,175,54,176,177,95,2,1,
            130,193,207,186,135,130,179,137,95,132,
            6,202,180,180,205,180,147,129,145,95,
            2,95,57,53,2,61,147,95,94,6,
            94,6,129,5,147,95,216,95,117,23,
            115,95,100,2,12,18,17,8,7,5,
            9,11,10,99,102,104,103,106,105,108,
            107,111,109,112,95,6,148,5,137,132,
            185,39,31,33,37,36,30,35,40,38,
            122,6,34,32,94,95,203,95,6,95,
            5,129,159,117,160,95,95,115,194,168,
            92,91,90,88,89,87,86,85,84,83,
            61,170,120,150,2,2,80,66,2,53,
            68,67,5,62,63,8,7,75,74,72,
            71,70,69,76,9,78,77,82,81,206,
            95,6,4,120,95,94,2,2,123,2,
            2,95,59,149,59,184,94,6,187,150,
            188,95,191,94,192,129,95,153,154,2,
            95,57,194,23,115,5,116,95,2,170,
            170,201,120,103,103,102,102,105,105,104,
            104,104,104,107,106,109,108,120,111,57,
            95,140,156,120,30,120,120,185,59,57,
            95,95,191,171,61,57,95,168,2,169,
            95,147,115,115,147,95,116,116,59,209,
            95,156,110,116,2,116,116,187,204,59,
            145,171,168,95,159,171,57,211,66,53,
            212,110,156,120,123,57,59,159,138,61,
            149,66,53,156,110,116,79,149,116,156,
            116
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "initializer_seq",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 24,
           SCOPE_UBOUND      = 33,
           SCOPE_SIZE        = 34,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 291,
           NT_OFFSET         = 93,
           LA_STATE_OFFSET   = 2650,
           MAX_LA            = 2147483647,
           NUM_RULES         = 314,
           NUM_NONTERMINALS  = 125,
           NUM_SYMBOLS       = 218,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1921,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 2314,
           ERROR_ACTION      = 2336;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
