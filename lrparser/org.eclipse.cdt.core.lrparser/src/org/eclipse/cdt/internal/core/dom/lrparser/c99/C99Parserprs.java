/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,4,
            4,3,3,2,2,8,1,0,1,1,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,5,5,6,6,2,2,2,1,0,
            1,2,4,2,1,1,1,3,1,1,
            2,3,6,7,1,0,1,3,1,3,
            1,1,1,1,1,1,3,1,1,1,
            1,1,3,1,2,2,1,5,3,1,
            3,5,1,3,1,3,2,4,3,5,
            4,6,6,3,5,1,1,2,3,4,
            1,2,1,3,1,1,3,2,1,1,
            1,1,2,1,2,3,1,1,1,3,
            1,2,2,2,3,4,5,1,5,1,
            1,3,3,4,1,1,2,3,2,3,
            2,1,0,1,2,1,1,1,1,1,
            2,4,3,6,2,4,-75,-256,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-30,0,0,-10,0,-21,0,
            -2,0,0,-180,-88,0,0,0,0,0,
            0,0,0,0,0,-3,0,0,0,-80,
            0,-18,0,0,0,0,0,-4,0,0,
            0,-17,0,0,0,0,0,0,0,0,
            0,0,0,-28,0,0,0,0,0,-70,
            0,0,0,0,0,0,0,0,0,0,
            -74,0,0,0,0,0,0,0,0,0,
            -11,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-32,0,
            -23,0,0,0,0,0,0,0,0,-187,
            -19,0,0,0,0,0,0,0,0,0,
            0,0,0,-197,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -13,0,0,0,0,-273,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-169,0,-22,-264,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-24,0,
            -53,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-188,-6,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-33,0,-57,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -27,0,0,0,0,0,-90,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-170,0,0,0,0,-125,-91,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-151,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -275,-36,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -72,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-83,0,0,
            -79,0,-50,-16,-15,-25,0,-189,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-26,0,0,0,0,0,0,
            0,-34,0,-186,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-29,0,-35,
            0,0,0,0,0,0,-150,0,-31,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-144,-38,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-40,0,0,-153,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-181,0,0,0,0,0,
            0,0,0,0,0,0,-39,-154,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-155,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-77,0,0,-156,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-82,0,0,-157,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-158,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-159,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-140,0,0,-160,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-142,0,0,-161,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-162,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-163,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-143,0,0,-206,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-115,0,0,-208,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-212,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-41,0,0,-182,0,0,
            0,0,0,0,0,0,0,0,-43,0,
            -213,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-148,0,0,
            -252,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-164,0,0,
            -267,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-195,0,0,
            -183,0,0,0,0,0,0,0,0,0,
            0,-45,0,-278,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -64,0,0,-260,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-42,0,-184,-146,0,0,0,
            0,0,0,0,0,0,-65,0,-48,0,
            0,-55,0,0,-63,0,0,-67,-59,0,
            -165,0,0,0,0,0,0,0,0,-49,
            0,-116,0,-192,0,0,0,-47,0,0,
            0,0,-171,0,0,-8,0,0,0,0,
            0,0,0,0,-44,0,-193,0,0,0,
            -68,0,0,0,0,-119,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-37,
            -132,0,0,-145,0,-210,0,0,0,0,
            0,-147,0,0,0,0,0,0,-194,0,
            0,0,0,0,-71,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-73,
            -52,0,0,0,0,0,0,0,0,-61,
            -204,0,0,0,0,0,0,-84,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-62,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-20,0,0,0,
            0,0,-128,0,0,-191,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-266,-66,0,-242,-85,0,0,
            -255,0,0,0,0,-152,-93,0,0,0,
            0,0,-239,0,0,0,0,0,-78,0,
            -118,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-69,0,-214,-133,0,-124,0,-104,
            0,0,0,0,0,0,-105,-106,0,0,
            -200,-87,0,0,0,0,0,0,-135,0,
            -136,0,0,0,0,0,0,0,0,0,
            0,-141,0,0,0,0,0,0,0,-95,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-268,-107,0,0,0,-205,
            0,0,0,0,0,-251,0,0,0,0,
            -108,0,0,0,0,0,0,-263,-126,0,
            -109,0,0,-199,-110,-111,0,0,0,0,
            0,0,0,0,0,0,-46,0,-247,0,
            0,0,0,0,0,0,0,0,0,0,
            -202,-92,0,-243,-112,0,0,0,0,0,
            0,-249,0,-203,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-241,
            0,0,-113,0,-250,0,-207,0,0,0,
            0,0,0,0,0,0,0,-114,0,0,
            0,0,0,0,0,0,0,-282,0,0,
            0,-287,0,0,0,0,0,0,0,0,
            0,-217,-219,-117,0,-121,0,0,-222,0,
            -285,0,0,-220,0,0,0,0,0,0,
            0,0,0,-149,0,0,0,0,-221,0,
            0,0,0,-288,0,-56,0,0,0,0,
            0,0,0,0,0,0,-240,0,0,0,
            0,-122,0,0,0,0,-123,-1,0,-196,
            0,0,0,0,0,0,0,0,0,-129,
            0,0,0,0,0,-7,0,0,0,0,
            0,-134,0,-283,-137,-185,0,0,0,0,
            0,0,0,0,0,0,-245,-244,0,-138,
            0,0,-176,0,0,0,0,0,0,0,
            0,0,-139,0,0,-218,0,-201,-262,0,
            0,0,0,0,0,0,-177,-277,0,0,
            0,0,0,0,0,0,0,-270,0,0,
            -51,-100,0,0,0,0,0,0,0,0,
            0,-58,-166,0,0,-271,0,0,-281,0,
            0,-96,-209,0,0,0,0,0,0,0,
            -211,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-253,-254,0,0,0,
            -223,0,0,0,0,0,-178,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-179,-276,0,0,0,0,0,0,
            0,-5,0,-9,0,0,-274,-215,0,0,
            0,0,0,0,0,-12,-89,0,0,-14,
            -76,0,-130,0,0,-81,0,-224,0,0,
            0,-279,0,-225,-94,0,-286,-284,-226,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-227,0,-60,0,
            0,0,0,0,0,0,0,0,0,0,
            -228,0,0,-229,-230,0,0,0,0,-231,
            -232,0,0,-233,0,0,0,-234,-235,0,
            -236,-237,-238,0,0,-258,-259,-265,0,0,
            0,0,-97,-272,0,0,0,0,0,0,
            -98,0,0,0,0,0,0,0,0,0,
            -99,0,0,0,0,0,0,0,-101,0,
            0,0,0,0,0,0,-120,0,0,0,
            0,0,0,0,-127,0,-167,0,-131,0,
            -86,0,0,0,-168,0,-173,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-54,0,
            -174,0,0,0,0,0,0,0,0,-175,
            0,0,0,0,0,0,0,0,0,-257,
            0,0,-261,0,0,-216,0,0,0,0,
            0,0,0,-102,0,0,0,0,0,0,
            -198,0,0,0,-103,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-246,
            0,0,0,0,0,-269,0,0,-280,0,
            0,-172,0,0,0,0,0,0,0,0,
            -190,0,-248,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            102,1,39,39,24,24,40,40,17,17,
            2,2,2,2,3,3,3,4,4,5,
            5,5,5,5,5,5,5,67,67,88,
            88,6,6,6,6,6,6,6,6,6,
            6,6,7,7,8,8,8,8,9,9,
            9,10,10,10,11,11,11,11,11,12,
            12,12,13,13,14,14,15,15,16,16,
            18,18,19,19,21,21,21,21,21,21,
            21,21,21,21,21,21,29,27,20,103,
            103,90,90,54,30,30,30,30,30,30,
            30,31,31,31,28,28,91,91,68,68,
            32,32,33,33,33,60,60,34,34,34,
            34,35,35,35,35,35,46,46,23,23,
            23,23,23,47,47,47,83,83,78,78,
            78,78,79,79,79,80,80,80,81,81,
            81,82,82,82,92,92,84,84,85,48,
            50,50,50,50,50,61,63,63,63,63,
            63,63,63,63,63,63,63,63,72,72,
            22,22,69,69,69,69,70,70,70,73,
            73,74,74,64,64,64,52,104,104,93,
            94,94,94,71,71,95,95,96,96,86,
            86,25,26,26,26,49,51,51,41,41,
            41,41,36,36,37,42,42,43,38,38,
            97,97,44,106,106,105,105,45,45,45,
            45,45,45,45,45,45,98,53,53,53,
            53,75,75,65,65,65,66,66,55,55,
            107,107,77,77,76,76,76,56,56,56,
            57,58,58,58,59,59,59,59,62,62,
            89,89,89,89,87,108,109,109,110,110,
            111,111,102,102,112,112,99,99,99,99,
            113,113,100,100,100,101,101,287,868,14,
            19,15,1460,1417,44,1467,1516,1468,1541,1531,
            1546,1545,1603,1575,772,1618,74,413,91,593,
            1204,309,134,211,1594,655,14,19,15,1460,
            42,44,1467,1516,1468,1917,1292,684,223,488,
            1184,681,453,271,136,133,135,159,931,1377,
            252,211,486,749,266,1244,1267,269,138,305,
            165,134,211,196,601,126,142,145,148,151,
            593,1291,431,222,230,1716,1256,1864,1876,1880,
            685,931,1481,136,133,135,159,1725,419,222,
            227,547,1429,216,552,219,221,138,126,165,
            431,222,231,324,192,142,145,148,151,525,
            104,173,1265,509,1716,1256,1864,1876,1880,685,
            1594,550,14,19,15,1460,42,44,1467,1516,
            1468,1541,1948,535,1550,1738,14,19,15,1460,
            1417,44,1467,1516,1468,1541,1531,1546,1545,1603,
            1575,594,1618,74,225,278,1550,1738,14,19,
            15,1460,1417,44,1467,1516,1468,1541,1531,1546,
            1545,1603,1575,571,1618,74,926,278,612,1473,
            1738,14,19,15,1460,1417,44,1467,1516,1468,
            1541,1531,1546,1545,1603,1575,280,1618,74,761,
            278,1420,1572,14,19,15,1460,1417,44,1467,
            1516,1468,1541,1531,1546,1545,1603,1575,280,1618,
            74,281,600,1574,1594,357,14,19,15,1460,
            42,44,1467,1516,1468,1541,1531,1546,1545,1949,
            237,282,690,281,1519,1724,14,19,15,1460,
            1417,44,1467,1516,1468,1541,1531,1546,1545,1603,
            1575,887,1618,74,23,278,283,1616,1664,14,
            19,15,1460,1417,44,1467,1516,1468,1541,1531,
            1546,1545,1603,1575,926,1618,74,226,747,1594,
            872,14,19,15,1460,1417,44,1467,1516,1468,
            1541,1531,1546,1545,1603,1575,157,1618,74,1444,
            91,14,19,15,1460,1417,44,1467,1516,1468,
            1541,1531,1546,1545,1603,1575,303,1618,74,239,
            1455,1519,357,14,19,15,1460,1417,44,1467,
            1516,1468,1541,1531,1546,1545,1603,1575,238,1618,
            74,1594,278,14,19,15,1460,42,44,1467,
            1516,1468,1541,1531,1546,1545,1603,1575,57,1618,
            93,1338,22,651,415,1338,173,1557,1594,1725,
            14,19,15,1460,42,44,1467,1516,1468,1541,
            1531,1546,1951,284,173,1248,134,211,251,211,
            134,211,773,2039,1594,1722,14,19,15,1460,
            42,44,1467,1516,1468,1541,1531,1944,136,133,
            135,159,137,133,135,159,229,374,545,683,
            173,1222,138,302,165,1015,139,872,165,415,
            142,145,148,151,143,146,149,152,335,1716,
            1256,1864,1876,1880,685,1594,996,14,19,15,
            1460,42,44,1467,1516,1468,1541,1531,1546,1545,
            1603,1575,415,1618,93,1594,241,14,19,15,
            1460,1417,44,1467,1516,1468,1541,1531,1546,1545,
            1603,1575,1781,1618,74,1594,85,14,19,15,
            1460,42,44,1467,1516,1468,1931,981,1594,210,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,1792,1618,74,1594,84,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,759,1618,74,1594,83,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,759,1618,74,1594,82,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,183,1618,74,1594,81,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,182,1618,74,1594,80,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,759,1618,74,1594,79,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,759,1618,74,1594,78,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,185,1618,74,1594,77,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,184,1618,74,1594,76,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,759,1618,74,1594,75,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,772,1618,74,1594,92,
            14,19,15,1460,42,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,203,1618,93,1594,228,
            14,19,15,1460,1417,44,1467,1516,1468,1541,
            1531,1546,1545,1603,1575,334,1618,74,1594,1826,
            14,19,15,1460,42,44,1467,1516,1934,173,
            1881,1594,201,14,19,15,1460,1417,44,1467,
            1516,1468,1541,1531,1546,1545,1603,1575,653,1618,
            74,1594,1827,14,19,15,1460,42,44,1467,
            1516,1468,1541,1531,1546,1545,1603,1575,772,1618,
            93,1594,232,14,19,15,1460,42,44,1467,
            1516,1468,1541,1531,1546,1545,1603,1575,415,1618,
            93,1594,2066,14,19,15,1460,42,44,1467,
            1516,1935,173,1886,1594,202,14,19,15,1460,
            42,44,1467,1516,1468,1541,1531,1546,1545,1603,
            1575,635,1618,93,1594,1854,14,19,15,1460,
            42,44,1467,1516,1468,1541,1531,1546,1545,1603,
            1575,1407,1618,73,175,307,1594,57,14,19,
            15,1460,42,44,1467,1516,1940,745,1898,173,
            2011,110,173,681,86,822,1330,391,855,1,
            307,772,95,1453,108,94,96,97,98,99,
            648,1472,444,1148,580,391,110,1539,604,86,
            109,1330,391,827,599,16,1688,95,1453,108,
            94,96,97,98,99,1010,681,800,300,306,
            1348,869,106,89,1296,109,173,444,419,222,
            227,134,211,216,552,219,221,271,196,273,
            390,231,307,260,822,1229,759,107,264,1244,
            1267,269,704,144,133,135,159,127,110,330,
            1600,86,272,1330,391,597,1348,1429,261,95,
            1453,108,94,96,97,98,99,252,211,191,
            673,773,1877,274,207,1431,204,109,855,350,
            986,117,307,678,1408,419,222,227,1003,258,
            216,552,219,221,271,229,1669,123,110,106,
            324,86,986,1330,391,264,1244,1267,269,95,
            1453,108,94,96,97,98,99,486,782,122,
            208,105,1341,173,599,1687,1594,109,14,19,
            15,1460,42,44,1467,1516,1468,1541,1531,1546,
            1545,1603,1953,87,822,460,599,490,966,107,
            1471,173,466,419,222,817,710,1056,216,552,
            219,1075,110,773,2063,86,289,1330,158,931,
            1492,1019,681,95,1453,1710,94,96,97,98,
            99,252,211,419,222,227,194,275,217,552,
            219,221,271,986,391,872,515,599,986,304,
            483,154,766,266,1244,1267,269,703,388,1290,
            111,772,651,110,642,125,86,301,1330,570,
            599,486,749,740,95,1453,103,94,96,97,
            98,99,705,749,240,1559,110,251,211,86,
            1638,1330,14,19,15,1460,40,95,1453,101,
            94,96,97,98,99,993,494,419,222,227,
            625,599,216,552,219,221,705,749,419,222,
            227,802,158,216,552,219,221,110,759,986,
            86,290,1330,1803,986,652,341,1302,95,1453,
            102,94,96,97,98,99,121,1068,681,680,
            599,2110,419,222,227,154,766,216,552,219,
            221,772,651,1290,1031,910,110,1803,279,86,
            196,1330,735,599,772,197,199,95,1453,118,
            94,96,97,98,99,1582,1607,251,211,110,
            713,681,86,938,1330,790,599,821,1605,1429,
            95,1453,114,94,96,97,98,99,610,198,
            199,191,110,1242,193,86,287,1330,845,599,
            875,350,759,95,1453,1964,94,96,97,98,
            99,1538,415,772,997,110,336,1416,86,872,
            1330,900,599,1407,772,256,95,1453,113,94,
            96,97,98,99,651,1759,1644,1956,110,772,
            619,86,26,1330,955,599,486,749,1957,95,
            1453,120,94,96,97,98,99,772,20,251,
            211,110,1026,21,86,308,1330,59,343,346,
            1023,681,95,1453,119,94,96,97,98,99,
            568,270,419,222,227,298,1377,216,552,219,
            221,358,768,1242,1031,1018,1594,158,14,19,
            15,1460,42,44,1467,1516,1941,986,442,1416,
            1682,134,211,1594,297,14,19,15,1460,42,
            44,1467,1831,1720,2116,257,349,2060,983,772,
            155,766,1058,141,133,135,159,1594,822,14,
            19,15,1460,42,44,1467,1888,140,986,165,
            274,601,1497,276,14,19,15,1460,42,35,
            291,1632,601,758,1642,2119,772,294,296,986,
            331,271,1594,838,14,19,15,1460,42,39,
            1862,911,264,1244,1267,269,117,419,222,227,
            1799,244,217,552,219,221,872,872,419,222,
            1692,925,1687,217,552,219,1646,1594,271,14,
            19,15,1460,42,44,1894,1958,1515,286,264,
            1244,1267,269,1594,872,14,19,15,1460,42,
            44,1899,399,346,1739,242,243,772,1497,263,
            14,19,15,1460,42,35,1758,406,681,298,
            1777,1126,681,173,599,358,1242,681,928,134,
            211,277,772,288,813,173,307,772,872,815,
            1242,134,211,87,196,134,211,245,297,196,
            1571,147,133,135,159,87,1651,387,196,931,
            599,1674,1231,150,133,135,159,153,133,135,
            159,471,256,1429,878,965,124,290,1429,87,
            967,991,1035,1644,484,191,1458,1793,942,1088,
            191,990,1060,992,935,350,1075,1077,1061,955,
            350,295,296,1594,364,14,19,15,1460,42,
            38,1594,1128,14,19,15,1460,42,37,2206,
            2206,1594,1108,14,19,15,1460,42,36,1594,
            2206,14,19,15,1460,42,34,1594,2206,14,
            19,15,1460,42,35,766,307,173,307,173,
            599,604,2206,2206,2206,173,307,1594,2206,14,
            19,15,1460,42,47,87,2206,87,391,87,
            196,2206,115,1348,1231,87,1584,2206,196,948,
            681,1594,1231,14,19,15,1460,42,46,2206,
            1594,2081,14,19,15,1460,42,45,2206,1793,
            713,681,1242,948,681,1544,1572,1793,14,19,
            15,1460,42,43,1660,2206,14,19,15,1460,
            33,766,599,1242,1643,1660,1242,14,19,15,
            1460,32,1654,2206,256,2206,2206,207,2206,2206,
            2206,87,2206,2206,1035,1644,1207,1408,115,2206,
            766,599,2206,308,2206,256,766,599,256,766,
            599,2206,173,599,2206,1759,1644,2206,1867,1644,
            87,173,599,173,599,2206,87,115,2206,87,
            2206,1737,87,115,2206,2206,115,2206,2206,1649,
            2206,87,2206,87,2206,2206,2206,2206,1952,2206,
            1796,2206,2206,2206,2206,2206,2206,2206,2206,2206,
            1778,2206,2206,2206,2206,2206,1892,2206,2206,1897,
            2206,0,179,224,0,2213,1,0,1,2441,
            0,7,9,0,179,17,0,178,18,0,
            1,2430,0,112,1628,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,0,57,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,58,57,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,0,57,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,41,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,0,1,2,0,
            4,5,0,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,0,23,
            24,25,26,27,28,0,30,31,32,33,
            34,35,36,37,38,0,40,41,42,0,
            1,2,3,0,48,0,3,0,3,53,
            0,55,0,1,2,3,4,5,0,9,
            2,3,10,11,12,22,0,22,69,70,
            71,72,6,0,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,73,40,41,42,56,0,0,59,0,
            48,58,3,58,61,53,61,55,0,1,
            2,3,4,5,56,0,1,59,10,11,
            12,22,0,1,0,73,4,0,6,5,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,0,40,41,
            42,0,79,0,1,2,48,58,5,62,
            63,53,0,55,2,69,70,71,72,0,
            1,2,3,4,5,6,7,8,9,64,
            0,73,13,14,15,16,17,18,19,20,
            21,22,0,0,2,0,1,2,29,0,
            1,2,9,0,5,13,14,56,39,56,
            7,8,43,44,45,46,47,66,49,50,
            51,52,0,54,0,1,2,3,4,5,
            6,7,8,9,0,0,2,13,14,15,
            16,17,18,19,20,21,22,0,56,69,
            70,71,72,29,0,56,0,1,66,0,
            4,2,6,39,10,11,12,43,44,45,
            46,47,80,49,50,51,52,0,54,0,
            1,2,3,4,5,6,7,8,9,0,
            56,2,13,14,15,16,17,18,19,20,
            21,22,0,0,1,3,0,4,29,6,
            0,1,2,0,1,5,39,4,39,0,
            0,0,43,44,45,46,47,6,49,50,
            51,52,0,54,0,1,2,3,4,5,
            6,7,8,9,0,56,2,13,14,15,
            16,17,18,19,20,21,22,0,0,57,
            0,0,0,29,0,3,60,10,11,12,
            10,11,12,39,10,11,12,43,44,45,
            46,47,0,49,50,51,52,0,54,0,
            1,2,3,4,5,6,7,8,9,0,
            81,82,13,14,15,16,17,18,19,20,
            21,22,0,0,0,1,2,5,29,0,
            58,59,0,10,11,12,0,5,39,10,
            11,12,43,44,45,46,47,76,49,50,
            51,52,60,54,0,1,2,3,4,5,
            6,7,8,9,0,56,2,13,14,15,
            16,17,18,19,20,21,22,0,0,2,
            0,3,5,29,60,0,6,0,3,67,
            68,0,0,39,3,3,64,43,44,45,
            46,47,0,49,50,51,52,22,54,0,
            1,2,3,4,5,6,7,8,9,0,
            0,0,13,14,15,16,17,18,19,20,
            21,22,0,56,0,57,0,5,29,5,
            0,0,1,3,59,4,0,60,39,3,
            59,59,43,44,45,46,47,0,49,50,
            51,52,22,54,0,1,2,3,4,5,
            6,7,8,9,0,56,2,13,14,15,
            16,17,18,19,20,21,22,0,0,2,
            2,0,5,29,3,74,75,0,58,67,
            68,67,68,39,0,59,0,43,44,45,
            46,47,6,49,50,51,52,60,54,0,
            1,2,3,4,5,6,7,8,9,0,
            0,1,13,14,15,16,17,18,19,20,
            21,22,0,56,0,0,1,0,29,4,
            0,7,8,3,7,8,65,0,39,62,
            63,0,43,44,45,46,47,0,49,50,
            51,52,22,54,0,1,2,3,4,5,
            6,7,8,9,0,0,0,13,14,15,
            16,17,18,19,20,21,22,0,1,0,
            0,4,0,29,2,0,6,78,3,0,
            0,0,0,39,0,0,0,43,44,45,
            46,47,0,49,50,51,52,22,54,0,
            1,64,3,4,77,74,75,0,0,10,
            11,12,0,58,6,0,62,63,62,63,
            0,6,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,56,40,
            41,42,62,63,58,0,61,48,66,0,
            0,0,53,61,55,76,57,0,1,78,
            3,4,0,0,0,58,0,10,11,12,
            6,0,6,0,0,0,64,0,58,0,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,0,40,41,42,
            0,0,0,0,0,48,61,0,0,60,
            53,61,55,0,57,0,1,0,3,4,
            0,0,60,60,0,10,11,12,83,84,
            85,86,87,88,89,90,91,92,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,77,40,41,42,0,0,
            0,0,0,48,0,0,0,0,53,0,
            55,0,57,0,1,0,3,4,0,0,
            0,0,0,10,11,12,0,0,0,0,
            0,0,0,0,0,0,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,0,40,41,42,0,0,0,0,
            0,48,0,0,0,0,53,0,55,0,
            57,0,1,0,3,4,0,0,0,0,
            0,10,11,12,0,0,0,0,0,0,
            0,0,0,0,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            0,40,41,42,0,0,0,0,0,48,
            0,0,1,2,53,4,55,0,57,0,
            0,10,11,12,0,0,0,0,0,0,
            0,0,0,0,23,24,25,26,27,28,
            0,30,31,32,33,34,35,36,37,38,
            0,40,41,42,0,0,0,0,1,48,
            0,4,0,0,53,0,55,10,11,12,
            0,0,0,0,0,0,0,0,0,0,
            23,24,25,26,27,28,0,30,31,32,
            33,34,35,36,37,38,0,40,41,42,
            0,0,0,0,0,48,10,11,12,0,
            53,0,55,0,0,0,0,0,0,23,
            24,25,26,27,28,0,30,31,32,33,
            34,35,36,37,38,0,40,41,42,0,
            1,2,3,4,5,0,7,8,9,0,
            0,0,13,14,15,16,17,18,19,20,
            21,0,23,0,1,2,3,4,5,0,
            7,8,9,0,0,0,13,14,15,16,
            17,18,19,20,21,0,23,0,0,0,
            0,0,0,1,2,3,4,5,6,7,
            8,9,0,0,65,13,14,15,16,17,
            18,19,20,21,0,0,0,1,2,3,
            4,5,0,7,8,9,0,0,65,13,
            14,15,16,17,18,19,20,21,0,1,
            2,0,4,5,6,7,8,9,0,57,
            0,13,14,15,16,17,18,19,20,21,
            0,0,0,0,0,0,0,0,0,0,
            1,2,0,4,5,6,7,8,9,0,
            0,65,13,14,15,16,17,18,19,20,
            21,0,1,2,0,4,5,6,7,8,
            9,0,0,0,13,14,15,16,17,18,
            19,20,21,0,1,2,0,4,5,0,
            7,8,9,0,0,0,13,14,15,16,
            17,18,19,20,21,0,1,2,0,4,
            5,0,7,8,9,0,0,0,13,14,
            15,16,17,18,19,20,21,0,1,2,
            0,4,5,0,7,8,9,0,0,0,
            13,14,15,16,17,18,19,20,21,0,
            1,2,0,4,5,0,7,8,9,0,
            0,0,13,14,15,16,17,18,19,20,
            21,0,1,2,3,0,5,0,0,0,
            0,10,11,12,0,0,0,10,11,12,
            0,0,0,22,23,24,25,26,27,28,
            23,24,25,26,27,28,0,0,0,0,
            1,2,3,0,5,0,0,0,0,10,
            11,12,0,0,0,0,0,56,0,0,
            59,22,23,24,25,26,27,28,10,11,
            12,0,0,0,0,0,0,0,0,0,
            0,23,24,25,26,27,28,10,11,12,
            0,0,0,0,0,56,0,0,59,0,
            23,24,25,26,27,28,10,11,12,0,
            0,0,0,0,0,0,0,0,0,23,
            24,25,26,27,28,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2206,3586,1,1697,3585,1,380,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2214,1,1,1,1,1,1,2306,
            1,1,1,1,1,1,1,1,1,1217,
            1,1,1,1340,661,1362,1315,1405,1,1181,
            1225,1271,1919,1,1228,1,28,2212,7,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2191,2191,2191,2191,2191,2191,
            2191,2191,2191,2191,2233,2191,2206,3586,1,1697,
            3585,1,380,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,2214,1,
            1,1,1,1,1,2306,1,1,1,1,
            1,1,1,1,1,1217,1,1,1,1340,
            661,1362,1315,1405,1,1181,1225,1271,1919,1,
            1228,1,1,2212,2206,3586,1,2215,3585,1,
            380,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2214,1,1,1,
            1,1,1,2306,1,1,1,1,1,1,
            1,1,1,1217,1,1,1,1340,661,1362,
            1315,1405,1,1181,1225,1271,1919,1,1228,1,
            2206,3586,1,2215,3585,1,380,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2214,1,1,1,1,1,1,2306,
            1,1,1,1,1,1,1,1,1,1217,
            1,1,1,1340,661,1362,1315,1405,1,1181,
            1225,1271,1919,1,1228,1,2206,1740,1895,59,
            1753,1997,2206,1981,1971,1989,2418,2419,2420,2085,
            2074,1500,2216,2217,2218,2219,1963,1802,2206,2368,
            2369,2367,2421,2370,2366,2206,2373,2378,2377,2375,
            2376,2374,2379,2380,2372,2206,2381,2382,2383,1,
            2200,1309,2211,233,461,234,221,2206,221,401,
            64,327,2206,1,1,2215,1,1,1,430,
            1756,2211,1,1,1,221,2206,221,1726,1206,
            1151,1078,329,112,2214,1,1,1,1,1,
            1,2505,1,1,1,1,1,1,1,1,
            1,2181,1,1,1,511,61,54,2210,2206,
            1,221,2215,221,221,1,221,1,2206,1,
            1,2215,1,1,511,1,2188,2210,1,1,
            1,2214,2206,2386,2206,293,2387,2206,421,738,
            2214,1,1,1,1,1,1,2505,1,1,
            1,1,1,1,1,1,1,2206,1,1,
            1,2206,2203,259,2430,1309,1,1676,1,1743,
            1767,1,179,1,2182,1726,1206,1151,1078,2206,
            3586,1,2215,3585,1,380,1,1,1,2461,
            60,292,1,1,1,1,1,1,1,1,
            1,2214,31,65,1253,1,2430,362,2306,265,
            2430,1309,430,51,1240,2230,2231,1131,1217,511,
            1853,1837,1340,661,1362,1315,1405,1404,1181,1225,
            1271,1919,2206,1228,2206,3586,1,2215,3585,1,
            380,1,1,1,220,2206,1331,1,1,1,
            1,1,1,1,1,1,2214,2206,2122,1726,
            1206,1151,1078,2306,247,511,2206,2386,594,2206,
            2387,712,686,1217,1,1,1,1340,661,1362,
            1315,1405,486,1181,1225,1271,1919,2206,1228,2206,
            3586,1,2215,3585,1,380,1,1,1,267,
            511,1423,1,1,1,1,1,1,1,1,
            1,2214,1,2206,2386,2185,2206,2387,2306,704,
            2206,2430,362,206,2386,1240,1758,2387,1217,72,
            2206,187,1340,661,1362,1315,1405,1089,1181,1225,
            1271,1919,2206,1228,2206,3586,1,2215,3585,1,
            380,1,1,1,2206,511,2005,1,1,1,
            1,1,1,1,1,1,2214,248,2206,2212,
            2206,66,2206,2306,249,2211,1456,1,1,1,
            2418,2419,2420,1217,2418,2419,2420,1340,661,1362,
            1315,1405,2206,1181,1225,1271,1919,2206,1228,2206,
            3586,1,2215,3585,1,380,1,1,1,218,
            1386,2131,1,1,1,1,1,1,1,1,
            1,2214,48,250,1,2430,362,2050,2306,246,
            1811,2210,1,2418,2419,2420,2206,738,1217,2418,
            2419,2420,1340,661,1362,1315,1405,714,1181,1225,
            1271,1919,1479,1228,2206,3586,1,2215,3585,1,
            380,1,1,1,2206,511,1383,1,1,1,
            1,1,1,1,1,1,2214,262,2206,1756,
            186,2213,1,2306,1038,1,1162,2206,116,2041,
            2017,2206,1,1217,2211,2211,2461,1340,661,1362,
            1315,1405,2206,1181,1225,1271,1919,116,1228,2206,
            3586,1,2215,3585,1,380,1,1,1,268,
            2206,62,1,1,1,1,1,1,1,1,
            1,2214,50,511,49,2212,2206,2050,2306,2050,
            2206,2206,2386,2215,116,2387,1,1520,1217,90,
            2210,2210,1340,661,1362,1315,1405,200,1181,1225,
            1271,1919,2214,1228,2206,3586,1,2215,3585,1,
            380,1,1,1,2206,511,1883,1,1,1,
            1,1,1,1,1,1,2214,265,2206,1756,
            2009,2206,1240,2306,2209,805,334,58,1526,2041,
            2017,2041,2017,1217,2206,90,188,1340,661,1362,
            1315,1405,1219,1181,1225,1271,1919,1111,1228,2206,
            3586,1,2215,3585,1,380,1,1,1,70,
            2206,2442,1,1,1,1,1,1,1,1,
            1,2214,2206,511,53,2206,2235,52,2306,2236,
            1,1853,1837,2215,1853,1837,2208,68,1217,1743,
            1767,63,1340,661,1362,1315,1405,1,1181,1225,
            1271,1919,2214,1228,2206,3586,1,2215,3585,1,
            380,1,1,1,57,205,56,1,1,1,
            1,1,1,1,1,1,2214,205,1294,2206,
            227,1294,2206,2306,2133,2206,230,534,2215,67,
            55,71,285,1217,2206,156,253,1340,661,1362,
            1315,1405,209,1181,1225,1271,1919,2214,1228,2206,
            1,2461,190,1,688,805,334,88,1,1,
            1,1,1,3490,380,227,1743,1767,1743,1767,
            28,231,1,1,1,1,1,1,2401,1,
            1,1,1,1,1,1,1,1,1164,1,
            1,1,1743,1767,1700,42,554,1,1768,2206,
            2206,2206,1,765,1,714,190,2206,1,534,
            190,1,1,1,41,1018,2206,1,1,1,
            1411,2206,1411,2206,2206,2206,2460,69,489,2206,
            1,1,1,1,1,1,2401,1,1,1,
            1,1,1,1,1,1,2206,1,1,1,
            2206,2206,2206,2206,2206,1,998,2206,2206,1184,
            1,641,1,2206,190,2206,1,2206,190,1,
            2206,2206,2387,2386,2206,1,1,1,978,958,
            938,918,898,858,878,838,818,785,1,1,
            1,1,1,1,2401,1,1,1,1,1,
            1,1,1,1,688,1,1,1,2206,2206,
            2206,2206,2206,1,2206,2206,2206,2206,1,2206,
            1,2206,190,2206,1,2206,189,1,2206,2206,
            2206,2206,2206,1,1,1,2206,2206,2206,2206,
            2206,2206,2206,2206,2206,2206,1,1,1,1,
            1,1,2401,1,1,1,1,1,1,1,
            1,1,2206,1,1,1,2206,2206,2206,2206,
            2206,1,2206,2206,2206,2206,1,2206,1,2206,
            189,2206,1,2206,190,1,2206,2206,2206,2206,
            2206,1,1,1,2206,2206,2206,2206,2206,2206,
            2206,2206,2206,2206,1,1,1,1,1,1,
            2401,1,1,1,1,1,1,1,1,1,
            2206,1,1,1,2206,2206,2206,2206,2206,1,
            2206,1,352,362,1,2384,1,2206,190,2206,
            2206,2418,2419,2420,2206,2206,2206,2206,2206,2206,
            2206,2206,2206,2206,2368,2369,2367,2421,2370,2366,
            2206,2373,2378,2377,2375,2376,2374,2379,2380,2372,
            2206,2381,2382,2383,2206,2206,2206,2206,2385,461,
            2206,2384,2206,2206,401,2206,327,2418,2419,2420,
            2206,2206,2206,2206,2206,2206,2206,2206,2206,2206,
            2368,2369,2367,2421,2370,2366,2206,2373,2378,2377,
            2375,2376,2374,2379,2380,2372,128,2381,2382,2383,
            2206,2206,2206,2206,2206,461,2418,2419,2420,2206,
            401,2206,327,2206,2206,2206,2206,2206,2206,2368,
            2369,2367,2421,2370,2366,2206,2373,2378,2377,2375,
            2376,2374,2379,2380,2372,2206,2381,2382,2383,1,
            2223,1895,2209,2224,1782,2206,1981,1971,1989,2206,
            2206,2206,2085,2074,1500,2216,2217,2218,2219,1963,
            1802,2206,577,2206,2223,1895,2209,2224,1868,2206,
            1981,1971,1989,2206,2206,2206,2085,2074,1500,2216,
            2217,2218,2219,1963,1802,2206,1091,2206,2206,2206,
            2206,2206,1,2223,1895,27,2224,1997,1276,1981,
            1971,1989,2206,2206,2208,2085,2074,1500,2216,2217,
            2218,2219,1963,1802,2206,2206,2206,2223,1895,2209,
            2224,1997,2206,1981,1971,1989,2206,2206,2208,2085,
            2074,1500,2216,2217,2218,2219,1963,1802,2206,2223,
            1895,2206,2224,1997,1276,1981,1971,1989,2206,27,
            2206,2085,2074,1500,2216,2217,2218,2219,1963,1802,
            2206,2206,2206,2206,2206,2206,2206,2206,2206,1,
            2223,1895,2206,2224,1997,1276,1981,1971,1989,2206,
            2206,2208,2085,2074,1500,2216,2217,2218,2219,1963,
            1802,2206,2223,1895,2206,2224,1997,1411,1981,1971,
            1989,2206,2206,2206,2085,2074,1500,2216,2217,2218,
            2219,1963,1802,2206,2223,1895,2206,2224,1997,2206,
            1981,1971,1989,2206,2206,2206,2085,2074,1500,2216,
            2217,2218,2219,1963,1802,1,2223,1895,2206,2224,
            1997,2206,1981,1971,1989,2206,2206,2206,2085,2074,
            1500,2216,2217,2218,2219,1963,1802,2206,2223,2007,
            2206,2224,1997,2206,1981,1971,1989,2206,2206,2206,
            2085,2074,1500,2216,2217,2218,2219,1963,1802,2206,
            2223,2015,2206,2224,1997,2206,1981,1971,1989,2206,
            2206,2206,2085,2074,1500,2216,2217,2218,2219,1963,
            1802,17,179,2194,2194,2206,2194,129,2206,2206,
            2206,179,179,179,2206,2206,2206,2418,2419,2420,
            2206,2206,2206,2194,179,179,179,179,179,179,
            2368,2369,2367,2421,2370,2366,2206,2206,2206,18,
            178,2197,2197,2206,2197,2206,2206,2206,2206,178,
            178,178,2206,2206,2206,2206,2206,2194,130,2206,
            2194,2197,178,178,178,178,178,178,2418,2419,
            2420,2206,2206,2206,2206,2206,2206,131,2206,2206,
            2206,2368,2369,2367,2421,2370,2366,2418,2419,2420,
            2206,2206,2206,2206,2206,2197,132,2206,2197,2206,
            2368,2369,2367,2421,2370,2366,2418,2419,2420,2206,
            2206,2206,2206,2206,2206,2206,2206,2206,2206,2368,
            2369,2367,2421,2370,2366
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            417,1,388,528,417,279,452,464,464,277,
            277,464,277,464,390,251,530,519,448,530,
            360,42,12,42,12,127,42,530,472,480,
            251,3,4,186,390,279,321,574,573,251,
            133,361,12,12,12,12,127,127,472,413,
            530,186,84,188,390,530,66,530,360,234,
            322,322,213,448,448,221,448,448,322,360,
            60,236,60,528,376,12,39,55,390,12,
            12,39,129,216,129,127,413,472,188,107,
            104,413,287,376,236,236,236,236,236,88,
            236,236,236,281,298,303,301,309,305,312,
            311,314,313,315,480,475,479,253,64,236,
            133,573,358,322,236,322,374,236,450,236,
            236,361,221,60,221,530,318,483,483,39,
            57,39,39,236,213,129,472,479,413,104,
            87,84,236,236,236,236,236,236,236,236,
            236,236,236,480,480,534,376,376,213,213,
            164,236,236,236,236,236,236,236,236,236,
            236,236,236,236,236,236,236,236,236,236,
            236,477,478,183,251,188,64,234,322,480,
            448,480,480,360,221,236,321,236,320,39,
            532,236,236,104,88,66,251,183,480,480,
            480,104,301,301,298,298,305,305,303,303,
            303,303,311,309,313,312,60,314,186,480,
            329,475,129,326,322,234,221,236,221,221,
            57,236,104,104,64,534,329,540,279,236,
            188,480,39,62,577,213,236,325,164,322,
            480,359,64,480,66,104,213,236,480,164,
            322,221,129,104,221,480,39,221
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            73,0,2,3,60,61,58,59,22,56,
            0,24,30,10,31,48,25,32,26,33,
            34,27,11,35,36,23,53,28,55,37,
            38,12,40,41,42,1,4,29,57,3,
            0,24,10,25,26,27,11,23,28,12,
            56,58,59,6,22,3,5,1,2,60,
            0,3,57,56,66,2,16,17,18,19,
            1,4,13,14,9,5,7,8,20,21,
            15,6,0,10,11,12,23,13,14,9,
            5,7,8,20,21,15,2,1,4,16,
            17,18,19,65,3,0,10,11,12,13,
            14,9,5,7,8,20,21,15,2,1,
            4,16,17,18,19,0,1,4,3,57,
            58,0,24,30,10,31,48,25,32,26,
            33,34,27,11,35,36,23,53,28,55,
            37,38,12,40,41,42,1,4,3,61,
            58,22,0,3,59,15,16,17,18,19,
            1,4,2,13,14,9,5,7,8,20,
            21,0,5,2,56,59,3,24,30,10,
            31,48,25,32,26,33,34,27,11,35,
            36,23,53,28,55,37,38,12,40,41,
            42,64,1,4,0,3,58,57,61,0,
            44,46,6,51,54,47,39,49,50,45,
            43,52,29,22,3,13,14,9,7,8,
            20,21,15,2,1,4,16,17,18,19,
            5,0,24,30,10,31,48,25,32,26,
            33,34,27,11,35,36,23,53,28,55,
            37,38,12,40,41,42,1,4,6,0,
            56,2,66,80,13,14,61,83,84,85,
            86,87,89,88,90,91,92,5,67,68,
            7,8,63,62,69,70,71,72,74,75,
            9,76,77,78,57,81,82,65,59,60,
            58,22,3,0,61,56,66,0,24,30,
            10,31,48,25,32,26,33,34,27,11,
            35,36,23,53,28,55,37,38,12,40,
            41,42,1,4,64,5,0,73,79,57,
            44,46,6,51,54,47,39,49,50,45,
            43,52,29,3,22,16,17,18,19,13,
            14,9,7,8,20,21,15,5,2,4,
            1,48,53,55,38,30,35,33,34,32,
            31,36,37,40,41,42,28,25,23,24,
            27,26,10,11,12,0,73,24,30,10,
            31,48,25,32,26,33,34,27,11,35,
            36,23,53,28,55,37,38,12,40,41,
            42,1,4,5,22,3,29,2,0,39,
            0,38,30,35,33,34,32,31,36,37,
            40,41,42,60,22,28,25,23,24,27,
            26,10,11,12,5,1,2,56,58,59,
            3,0,66,80,13,14,9,7,8,67,
            68,62,63,69,70,71,72,74,75,76,
            77,78,81,82,61,83,84,85,86,87,
            88,89,90,91,92,58,56,59,24,10,
            25,26,27,11,23,28,12,22,3,5,
            2,1,0,3,59,5,2,56,0,9,
            5,7,8,67,68,62,63,69,70,71,
            72,74,75,76,77,78,81,82,60,83,
            84,85,86,87,88,89,90,91,92,65,
            59,57,6,3,58,22,61,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            116,23,14,140,127,47,57,58,58,67,
            67,58,67,58,53,114,28,23,23,94,
            9,23,78,23,78,78,23,32,78,61,
            114,35,35,60,78,47,141,23,23,114,
            23,63,78,83,78,83,67,78,78,51,
            97,60,43,77,69,28,7,95,73,139,
            141,141,67,23,23,100,23,23,141,9,
            23,7,23,140,1,83,10,140,17,24,
            83,10,49,23,23,67,51,12,131,40,
            45,51,23,135,7,7,7,7,7,44,
            7,7,7,23,23,23,23,23,23,23,
            23,23,23,23,61,88,23,105,78,7,
            23,23,23,141,7,141,143,136,23,136,
            136,63,100,23,100,28,23,23,23,10,
            28,10,10,7,67,49,12,61,51,45,
            44,12,7,7,7,7,7,7,7,7,
            7,7,7,61,61,123,135,135,37,37,
            80,136,7,7,7,7,7,7,7,7,
            7,7,7,7,7,7,7,7,7,136,
            7,35,35,87,114,77,40,145,141,61,
            23,61,61,73,100,7,141,7,23,10,
            23,7,7,45,44,7,114,122,61,61,
            61,45,23,23,23,23,23,23,23,23,
            23,23,23,23,23,23,23,23,60,61,
            112,89,49,120,141,145,100,136,100,100,
            28,7,45,45,78,91,112,23,23,7,
            77,61,10,39,23,67,7,110,145,141,
            61,23,40,61,7,45,67,7,61,145,
            141,100,49,45,100,61,10,100
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            83,82,81,80,79,78,5,0,1,40,
            0,25,0,36,1,97,83,82,81,80,
            79,78,0,1,52,64,0,42,36,1,
            0,36,38,0,45,0,88,0,87,5,
            1,0,1,5,39,0,101,0,67,0,
            75,0,69,70,71,72,61,47,0,1,
            24,0,1,23,29,91,22,0,23,1,
            113,0,29,22,68,40,23,1,0,1,
            103,0,74,1,52,0,24,1,36,42,
            58,57,0,1,38,44,36,42,0,22,
            29,1,30,0,1,23,46,28,0,111,
            0,1,23,53,0,112,23,1,0,109,
            0,24,57,58,1,0,23,1,99,0,
            105,1,23,0,52,1,27,0,27,1,
            17,0,23,46,1,60,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,87,86,9,3,10,11,8,48,
            64,76,6,7,68,81,82,83,84,12,
            13,92,69,44,55,60,63,72,93,47,
            52,56,61,62,66,67,74,75,77,78,
            79,80,45,46,49,50,51,54,57,58,
            59,65,70,71,73,1,91,42,90,29,
            31,16,17,30,89,4,14,15,18,19,
            20,21,94,22,23,24,25,26,53,5,
            27,28,32,33,34,35,36,37,38,39,
            40,41,88
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,0,100,104,105,106,107,108,
            109,110,111,112,113,114,98,115,116,0,
            117,123,127,96,135,0,99,122,118,121,
            0,0,0,0,0,156,0,159,95,97,
            153,155,0,157,158,126,134,0,0,0,
            145,148,154,120,167,170,171,172,0,0,
            137,144,0,147,160,166,0,125,138,139,
            140,141,0,146,165,169,102,129,130,131,
            132,133,136,142,143,152,173,101,103,119,
            124,128,150,0,0,151,161,164,178,0,
            180,0,0,149,162,163,168,174,175,0,
            176,177,179,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            168,80,33,39,87,107,113,138,12,19,
            49,67,119,124,26,45,97,147,164,183,
            187,151,1,1,30,54,77,191,6,101,
            158,129,158,93,57,57,57
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            17,17,4,4,17,17,17,144,17,24,
            4,24,17,17,24,4,95,17,24,24,
            4,155,4,4,24,4,24,24,9,104,
            161,132,176,95,64,59,72
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            5,71,45,45,71,69,69,33,62,59,
            45,38,69,69,59,45,64,28,6,5,
            5,19,111,110,57,45,36,3,87,64,
            7,34,5,64,38,44,38
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            57,57,65,65,57,57,57,79,57,59,
            65,59,57,57,59,65,22,57,59,59,
            65,60,65,65,59,65,59,59,61,1,
            59,39,59,22,2,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            5,114,89,89,114,114,114,74,61,93,
            89,100,114,114,93,89,67,73,5,5,
            5,35,1,3,93,89,100,5,63,67,
            8,74,5,67,100,102,100
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            147,56,0,95,0,201,94,0,31,144,
            0,160,182,94,6,0,97,0,158,94,
            2,150,0,96,0,158,94,2,0,169,
            2,0,114,23,191,94,56,0,114,191,
            94,23,56,0,114,23,56,0,114,191,
            94,56,0,114,56,0,129,0,2,0,
            162,96,0,2,96,0,158,94,2,129,
            0,2,0,160,96,0,144,2,0,160,
            188,94,6,115,48,0,160,188,94,6,
            48,0,145,0,98,0,197,94,145,0,
            94,145,0,149,98,0,166,94,6,115,
            55,0,166,94,6,115,53,0,166,94,
            6,55,0,166,94,6,53,0,123,47,
            0,77,2,99,96,98,0,123,117,120,
            2,51,0,53,121,0,184,94,6,0,
            120,82,111,0,29,116,0,170,2,0,
            96,105,0,170,2,15,0,160,182,94,
            6,117,170,2,0,96,3,0,103,0,
            97,0,196,2,98,0,120,56,98,0,
            120,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1515,0,1738,0,2085,2074,1500,2066,1868,1386,
            688,534,430,714,1726,1206,1151,1078,805,334,
            1853,1837,1767,1743,2050,2041,2017,1997,1989,1782,
            1981,1971,1963,1802,1164,1131,1184,1111,1091,1058,
            1038,1018,998,978,958,938,918,898,878,858,
            838,818,785,619,765,599,577,307,661,511,
            641,554,466,489,444,0,1886,350,1881,1557,
            1265,0,1431,1674,1651,1628,1605,1582,1559,1520,
            1341,1479,1456,1291,1405,1229,1204,0,1267,1244,
            552,419,308,1407,1756,1309,1793,1242,0,374,
            346,1526,1407,1309,1492,1481,1242,1792,1676,1781,
            1377,362,0,681,307,685,346,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,195,94,116,205,190,171,172,173,55,
            53,174,48,175,176,94,2,1,129,94,
            6,115,6,115,6,6,115,146,5,144,
            94,129,135,2,199,190,185,178,131,94,
            137,94,6,94,6,94,94,6,5,94,
            146,2,56,94,94,58,61,146,184,52,
            43,45,50,49,39,47,54,51,122,6,
            46,44,115,116,94,94,166,145,94,167,
            94,166,188,115,189,94,94,168,94,23,
            114,94,99,2,15,21,20,8,7,5,
            9,14,13,98,101,103,102,105,104,107,
            106,109,108,111,158,116,159,206,6,5,
            137,131,3,120,94,115,2,2,123,2,
            2,94,60,147,60,94,183,1,4,166,
            94,166,160,61,58,188,168,198,94,114,
            191,168,92,91,90,88,89,87,86,85,
            84,83,61,170,120,145,2,2,80,66,
            2,56,68,67,5,62,63,8,7,75,
            74,72,71,70,69,76,9,78,77,82,
            81,150,151,2,94,58,94,139,153,120,
            39,120,120,184,60,58,197,60,144,160,
            58,191,23,114,5,117,94,2,170,170,
            196,120,102,102,101,101,104,104,103,103,
            103,103,106,105,108,107,120,109,2,169,
            94,146,182,94,153,110,117,2,117,117,
            58,60,114,114,6,146,94,117,117,60,
            94,158,160,58,201,66,56,202,110,153,
            120,123,94,158,61,147,66,56,153,110,
            117,79,182,147,117,153,160,117
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "member_name",
            "type_name",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "identifier_or_typedefname",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "typedef_name_in_declspec",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 36,
           SCOPE_SIZE        = 37,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 288,
           NT_OFFSET         = 93,
           LA_STATE_OFFSET   = 2512,
           MAX_LA            = 2147483647,
           NUM_RULES         = 306,
           NUM_NONTERMINALS  = 114,
           NUM_SYMBOLS       = 207,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1698,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 2181,
           ERROR_ACTION      = 2206;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
