/*******************************************************************************
* Copyright (c) 2006, 2007 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.parser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3,1,4,
            3,4,3,3,2,2,7,8,1,3,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,1,3,1,
            1,1,1,1,1,1,1,3,4,3,
            1,2,4,1,2,1,1,1,2,5,
            7,5,7,5,9,8,8,7,8,7,
            7,6,8,7,7,6,3,2,2,2,
            3,1,2,4,2,2,2,2,1,2,
            1,2,1,2,3,2,1,1,2,3,
            2,2,1,3,2,2,1,3,2,2,
            1,1,3,1,3,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,5,5,6,6,2,2,1,
            1,0,1,2,4,2,1,1,3,1,
            2,3,1,5,6,6,7,2,1,0,
            1,3,1,3,1,1,1,1,1,3,
            1,3,1,1,2,5,3,1,3,5,
            1,3,2,4,3,5,4,6,6,3,
            5,1,2,3,4,1,2,1,3,1,
            1,3,2,1,2,1,3,1,2,2,
            1,3,3,1,2,2,3,4,5,1,
            4,5,1,1,3,3,3,2,1,2,
            3,2,1,0,1,2,1,1,1,1,
            4,6,1,2,-69,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-35,-2,0,0,
            0,0,0,0,0,0,0,0,-152,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-8,-119,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-11,0,0,0,0,
            0,0,0,0,0,-9,0,-112,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-17,
            -50,0,0,0,0,0,0,0,0,0,
            0,-133,0,0,0,-141,0,0,0,0,
            0,0,0,0,0,-193,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-195,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-58,0,0,
            -134,0,0,0,0,0,0,0,0,0,
            0,-240,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -62,0,0,-19,0,0,0,0,0,0,
            0,0,0,0,-264,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-64,0,0,-22,0,0,0,
            0,0,0,0,0,0,0,-266,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-104,0,0,-33,
            0,0,0,0,0,0,0,0,0,0,
            -267,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-106,
            0,0,-34,0,0,0,0,0,0,0,
            0,0,0,-273,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-107,0,0,-65,0,0,0,0,
            0,0,0,0,0,0,-276,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-108,0,0,-66,0,
            0,0,0,0,0,0,0,0,0,-285,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-183,0,
            0,-82,0,0,0,0,0,0,0,0,
            0,0,-286,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-196,0,0,-84,0,0,0,0,0,
            0,0,0,0,0,-288,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-283,0,0,-85,0,0,
            0,0,0,0,0,0,0,0,-289,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-86,0,0,
            -87,0,0,0,0,0,0,0,0,0,
            0,-291,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -88,0,0,-89,-90,0,0,0,0,0,
            0,0,0,0,-295,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-91,0,0,-92,-93,0,0,
            0,0,0,0,0,0,0,-297,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-94,0,0,-96,
            -117,0,0,0,0,0,0,0,0,0,
            -298,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-118,
            0,0,-120,-121,0,0,0,0,0,0,
            0,0,0,-299,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-122,0,0,-124,-125,0,0,0,
            0,0,0,0,0,0,-300,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-127,0,0,-139,-175,
            0,0,0,0,0,0,0,0,0,-302,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-182,0,
            0,-184,-189,0,0,0,0,0,0,0,
            0,0,-83,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-194,0,-153,0,0,0,0,0,
            0,0,0,0,0,0,0,-146,0,0,
            0,0,0,0,0,0,0,0,-158,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-49,0,-131,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-154,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-147,0,0,0,0,0,0,0,0,
            0,0,-159,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-206,-207,0,
            -132,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -53,0,-148,0,0,0,0,0,0,0,
            0,0,-245,0,0,-149,0,0,0,0,
            0,0,0,0,0,0,-155,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-187,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-150,0,0,0,
            0,0,0,0,0,-208,0,0,0,-151,
            0,0,0,0,0,0,0,0,-209,0,
            0,-130,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-241,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-74,0,0,0,0,0,0,0,-142,
            0,0,0,0,0,0,0,-210,0,-211,
            -212,-116,-31,0,-213,-214,-215,0,0,-156,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-269,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-296,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-103,0,0,0,0,0,
            0,0,-75,0,0,0,0,0,0,-216,
            -4,0,-55,-71,0,-217,0,-218,-36,-219,
            0,0,-230,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-113,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-220,
            -221,0,-76,0,0,0,0,0,0,-137,
            -226,0,-233,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-77,0,0,0,0,0,
            0,-237,-51,-16,-243,-246,0,-234,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-78,
            0,0,0,0,0,0,-97,-30,0,0,
            0,0,-259,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-247,0,0,-79,0,0,0,0,
            0,0,-128,-21,0,-138,0,-261,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -143,0,0,0,0,0,0,-204,0,0,
            0,0,-263,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-282,0,0,-144,0,0,0,0,0,
            0,-101,0,-24,-172,0,0,-275,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -145,0,0,0,0,0,0,0,0,0,
            0,0,-278,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-202,0,0,0,0,
            0,0,0,-43,0,-173,0,-279,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -73,0,0,0,0,0,-178,0,0,0,
            -176,0,-293,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-80,0,0,0,0,
            0,0,0,0,0,0,0,-56,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-135,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-98,0,0,
            -136,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-70,
            0,0,-81,0,0,0,0,0,-201,0,
            0,0,-42,-198,0,-157,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-255,0,0,0,0,0,
            0,0,0,0,-229,0,-44,0,-199,0,
            -179,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-257,-258,
            -268,0,0,0,0,-270,0,0,-110,0,
            -188,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-45,-102,0,0,-190,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-200,0,
            -191,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-203,
            0,0,0,0,0,0,0,0,0,0,
            0,-222,0,-236,0,-265,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-223,0,0,0,0,0,0,0,0,
            -52,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-100,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-238,-239,0,-227,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-242,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-109,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-252,-114,0,
            -126,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -272,-274,0,-160,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-161,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-162,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -163,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-164,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-165,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-166,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-167,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-168,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-169,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-170,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-181,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -192,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -197,0,0,0,0,0,0,0,0,0,
            0,-63,0,0,-228,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-232,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-244,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-59,
            0,-18,0,0,-68,-115,0,0,-251,-20,
            -23,0,-29,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-248,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-254,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -3,0,-47,-37,0,-14,-39,-41,-67,-1,
            0,0,-277,0,-54,-15,0,0,-174,0,
            0,0,0,0,0,0,0,0,0,0,
            -13,0,0,0,0,0,0,0,0,0,
            -6,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-224,0,0,0,0,-105,-5,0,
            -171,0,0,0,0,0,0,0,0,0,
            -111,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-177,-7,0,-72,0,
            0,0,0,0,0,-123,0,0,0,0,
            -95,0,0,0,0,-28,-38,0,0,0,
            0,0,0,0,0,0,-225,0,0,0,
            0,0,0,-40,-249,0,0,-180,0,0,
            0,-48,0,-57,-185,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-61,0,0,0,0,
            -99,0,-10,0,0,0,0,-281,0,0,
            0,0,0,0,0,0,0,-231,0,0,
            0,0,-32,-253,-186,0,0,0,0,0,
            0,0,-256,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-250,-235,0,0,
            -129,0,0,0,0,0,0,0,0,0,
            -205,0,0,0,0,0,0,0,0,0,
            0,0,0,-271,0,-260,0,0,0,0,
            0,0,0,0,0,-284,0,0,-12,0,
            0,0,0,-262,-25,0,0,-26,0,0,
            0,0,0,-27,0,0,0,0,0,0,
            0,0,0,0,0,-46,-140,0,0,-287,
            0,0,0,0,0,-60,0,0,0,0,
            0,0,0,0,0,0,-280,0,0,0,
            0,0,-290,-292,0,0,0,-294,0,-301,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            80,19,1,1,39,39,22,22,37,37,
            20,20,2,2,2,2,3,3,3,4,
            4,4,4,4,4,4,4,4,4,81,
            81,5,5,5,5,5,5,5,5,5,
            5,5,6,6,7,7,7,7,8,8,
            8,9,9,9,10,10,10,10,10,11,
            11,11,12,12,13,13,14,14,15,15,
            16,16,17,17,18,18,18,18,18,18,
            18,18,18,18,18,18,25,34,21,21,
            51,26,26,26,26,26,26,26,27,27,
            27,32,24,24,82,82,67,67,28,28,
            29,29,29,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,31,31,31,
            31,31,83,46,46,33,33,33,33,43,
            43,43,43,43,43,64,64,64,64,64,
            84,84,84,84,85,85,85,85,86,86,
            86,86,68,68,56,56,35,35,35,35,
            35,52,52,52,52,52,52,52,52,52,
            52,52,52,71,69,69,69,69,69,69,
            72,57,57,58,58,53,53,45,87,87,
            73,73,73,59,70,70,70,70,70,74,
            74,75,75,65,65,23,23,23,36,44,
            44,40,40,40,40,41,42,42,88,88,
            76,90,90,38,38,38,38,38,38,38,
            38,38,48,48,48,48,60,60,54,54,
            54,55,55,49,49,49,89,89,63,63,
            61,61,61,50,50,50,50,50,50,50,
            47,47,47,66,66,66,66,62,91,92,
            92,77,77,80,80,93,93,78,78,78,
            78,79,79,94,94,127,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,88,2641,108,973,49,156,92,
            2756,106,91,93,94,95,96,1006,2575,931,
            17,16,19,712,42,44,778,745,811,808,
            1356,107,455,190,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,104,108,973,1201,529,92,2756,1043,
            91,93,94,95,96,1006,473,378,1,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,2641,108,973,
            221,49,92,2756,106,91,93,94,95,96,
            1006,2575,413,24,400,103,931,17,16,19,
            712,42,44,1178,107,547,190,17,16,19,
            712,907,44,778,745,811,808,844,841,874,
            845,878,877,74,88,105,108,973,514,1870,
            92,2756,100,91,93,94,95,96,1006,190,
            17,16,19,712,907,44,778,745,811,808,
            844,841,874,845,878,877,74,88,850,108,
            973,413,23,92,2756,98,91,93,94,95,
            96,1006,190,17,16,19,712,907,44,778,
            745,811,808,844,841,874,845,878,877,74,
            88,850,108,973,573,185,92,2756,99,91,
            93,94,95,96,1006,190,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,88,456,108,973,772,184,92,
            2756,114,91,93,94,95,96,1006,190,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,850,108,973,
            29,204,92,2756,112,91,93,94,95,96,
            1006,190,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,88,
            850,108,973,891,187,92,2756,1652,91,93,
            94,95,96,1006,190,17,16,19,712,907,
            44,778,745,811,808,844,841,874,845,878,
            877,74,88,585,108,973,174,186,92,2756,
            126,91,93,94,95,96,1006,190,17,16,
            19,712,907,44,778,745,811,808,844,841,
            874,845,878,877,74,88,850,108,973,918,
            205,92,2756,122,91,93,94,95,96,1006,
            190,17,16,19,712,907,44,778,745,811,
            808,844,841,874,845,878,877,74,88,850,
            108,973,652,206,92,2756,125,91,93,94,
            95,96,1006,190,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,593,108,973,311,207,92,2756,124,
            91,93,94,95,96,1006,190,17,16,19,
            712,907,44,778,745,811,808,844,841,874,
            845,878,877,74,88,709,108,973,48,271,
            92,2756,121,91,93,94,95,96,1006,190,
            17,16,19,712,907,44,778,745,811,808,
            844,841,874,845,878,877,74,88,348,108,
            973,219,27,92,2756,120,91,93,94,95,
            96,1006,190,17,16,19,712,907,44,778,
            745,811,808,844,841,874,845,878,877,74,
            88,263,108,973,711,241,92,2756,118,91,
            93,94,95,96,1006,190,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,88,549,108,973,30,488,92,
            2756,111,91,93,94,95,96,1006,190,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,414,108,973,
            919,359,92,2756,123,91,93,94,95,96,
            1006,190,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,88,
            694,108,973,753,964,92,2756,119,91,93,
            94,95,96,1006,190,17,16,19,712,907,
            44,778,745,811,808,844,841,874,845,878,
            877,74,88,943,108,973,332,568,92,2756,
            117,91,93,94,95,96,1006,190,17,16,
            19,712,907,44,778,745,811,808,844,841,
            874,845,878,877,74,88,576,108,973,974,
            992,92,2756,116,91,93,94,95,96,1006,
            190,17,16,19,712,907,44,778,745,811,
            808,844,841,874,845,878,877,74,88,730,
            108,973,64,472,92,2756,115,91,93,94,
            95,96,1006,987,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,2641,835,1009,931,17,16,19,712,
            42,44,778,745,811,1357,197,1596,931,17,
            16,19,712,42,44,778,745,1276,2937,931,
            17,16,19,712,42,44,778,745,811,808,
            844,841,874,845,1480,155,1490,987,17,16,
            19,712,907,44,778,745,811,808,844,841,
            874,845,878,877,74,88,2641,222,1009,931,
            17,16,19,712,42,44,778,745,811,1430,
            197,1596,931,17,16,19,712,42,44,778,
            745,1289,2937,931,17,16,19,712,42,44,
            778,745,811,808,844,841,874,1481,582,702,
            1884,987,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,88,
            2641,195,1009,931,17,16,19,712,42,44,
            778,745,1348,737,197,1596,931,17,16,19,
            712,42,44,778,745,1350,2937,931,17,16,
            19,712,42,44,778,745,811,808,844,841,
            1436,1557,223,910,1919,788,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,88,2641,1528,1009,931,17,16,
            19,712,42,44,778,1351,993,232,2575,2868,
            931,17,16,19,712,42,44,778,1355,1002,
            280,1493,847,17,16,19,712,907,44,778,
            745,811,808,844,841,874,845,878,877,74,
            270,2501,665,17,16,19,712,907,44,778,
            745,811,808,844,841,874,845,878,877,74,
            270,2501,931,17,16,19,712,42,39,273,
            931,17,16,19,712,42,44,1179,1027,272,
            1029,693,800,175,274,934,863,353,742,275,
            931,17,16,19,712,42,44,778,745,811,
            808,844,1438,134,276,847,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,270,2501,665,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,270,2501,697,17,16,19,712,
            42,35,273,931,17,16,19,712,42,38,
            471,254,28,784,784,2845,924,274,746,399,
            952,775,275,697,17,16,19,712,42,35,
            2646,133,2821,2871,240,227,227,276,725,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,225,130,1009,
            739,994,241,931,17,16,19,712,42,37,
            155,966,2795,725,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,1726,1563,1009,931,17,16,19,712,
            42,36,1030,495,1077,1018,975,2896,725,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,142,1598,1009,
            931,17,16,19,712,42,35,524,833,140,
            144,225,2914,756,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,291,980,1009,624,931,17,16,19,
            712,42,34,794,1094,225,155,2242,756,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,142,18,1009,
            657,931,17,16,19,712,42,47,860,140,
            144,225,2653,725,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,1008,1738,1009,931,17,16,19,712,
            42,46,906,3060,1111,584,265,2957,756,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,142,247,1009,
            723,931,17,16,19,712,42,45,3060,140,
            144,235,2940,756,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,3060,3060,1009,789,875,17,16,19,
            712,42,43,3060,1179,3060,155,2963,756,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,88,142,226,1009,
            822,903,17,16,19,712,40,906,3060,140,
            144,592,2964,756,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,88,3060,230,1009,987,959,17,16,19,
            712,33,3060,3060,3060,3060,237,2970,609,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,1662,1993,756,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,29,233,539,3060,
            21,931,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,88,
            195,246,1009,959,17,16,19,712,32,906,
            3060,3060,3060,226,155,1879,931,17,16,19,
            712,907,44,778,745,811,808,844,841,874,
            845,878,877,74,88,369,1526,1009,1665,2029,
            1593,223,224,3060,3060,906,3060,1196,20,155,
            1440,443,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,1915,
            142,1583,646,264,247,1593,223,224,211,906,
            906,906,140,144,236,1956,889,544,679,376,
            234,931,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,88,
            3060,3060,1009,3060,3060,3060,3060,3060,238,239,
            281,3060,1213,539,265,2064,931,17,16,19,
            712,907,44,778,745,811,808,844,841,874,
            845,878,877,74,88,142,246,1009,646,3060,
            3060,3060,3060,3060,212,3060,3060,140,144,768,
            2146,931,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,88,
            49,22,1009,1921,3060,3060,3060,3060,3060,3060,
            3060,3060,672,3060,155,2147,931,17,16,19,
            712,907,44,778,745,811,808,844,841,874,
            845,878,877,74,88,247,525,1009,3060,3060,
            3060,3060,49,3060,3060,3060,3060,3060,2867,3060,
            2828,819,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,270,
            1015,17,16,19,712,907,44,778,745,811,
            808,844,841,874,845,878,877,74,1767,2746,
            1905,3060,3060,3060,3060,3060,155,155,165,637,
            17,16,19,712,907,44,778,745,811,808,
            844,841,874,845,878,877,74,1949,558,591,
            3060,3060,247,819,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,270,931,17,16,19,712,42,44,778,
            745,811,808,844,841,874,845,878,877,90,
            3060,3060,3060,3060,3060,3060,3060,3060,155,731,
            277,931,17,16,19,712,42,44,778,745,
            811,808,844,841,874,845,878,877,90,129,
            263,155,155,214,931,17,16,19,712,907,
            44,778,745,811,808,844,841,874,845,878,
            877,74,85,268,690,3060,3060,3060,3060,3060,
            3060,3060,1073,931,17,16,19,712,907,44,
            778,745,811,808,844,841,874,845,878,877,
            74,84,931,17,16,19,712,907,44,778,
            745,811,808,844,841,874,845,878,877,74,
            83,931,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,82,
            931,17,16,19,712,907,44,778,745,811,
            808,844,841,874,845,878,877,74,81,931,
            17,16,19,712,907,44,778,745,811,808,
            844,841,874,845,878,877,74,80,931,17,
            16,19,712,907,44,778,745,811,808,844,
            841,874,845,878,877,74,79,931,17,16,
            19,712,907,44,778,745,811,808,844,841,
            874,845,878,877,74,78,931,17,16,19,
            712,907,44,778,745,811,808,844,841,874,
            845,878,877,74,77,931,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,76,931,17,16,19,712,907,
            44,778,745,811,808,844,841,874,845,878,
            877,74,75,931,17,16,19,712,42,44,
            778,745,811,808,844,841,874,845,878,877,
            90,931,17,16,19,712,907,44,778,745,
            811,808,844,841,874,845,878,877,74,89,
            3060,880,3060,3060,3060,3060,3060,3060,3060,3060,
            3060,3060,226,3060,201,931,17,16,19,712,
            907,44,778,745,811,808,844,841,874,845,
            878,877,74,1950,931,17,16,19,712,42,
            44,778,745,811,808,844,841,874,845,878,
            877,90,931,17,16,19,712,42,44,778,
            745,811,808,844,841,874,845,878,877,90,
            254,646,92,3060,3060,254,731,211,279,784,
            92,92,3060,92,3060,202,643,679,3060,2718,
            196,2767,2173,1213,2731,133,128,3060,2894,2784,
            1883,267,2936,1951,931,17,16,19,712,907,
            44,778,745,811,808,844,841,874,845,878,
            877,74,30,931,17,16,19,712,42,44,
            778,745,811,808,844,841,874,845,878,877,
            73,349,183,831,92,3060,366,92,92,915,
            253,3060,3060,155,3060,323,521,3060,3060,277,
            3060,3060,295,2794,141,317,2816,2512,2641,2641,
            289,396,183,292,1848,756,139,143,2092,142,
            102,477,2575,1431,2671,3060,1439,223,613,3060,
            580,140,144,2681,142,294,288,264,3060,1523,
            223,224,162,580,141,135,140,144,2766,1628,
            2747,2823,2909,272,1353,253,139,143,235,301,
            255,539,231,2766,2656,136,137,138,285,287,
            318,366,2853,2681,1558,266,2583,401,2641,289,
            2924,2918,2915,2719,246,146,539,218,3060,92,
            401,264,1431,1523,223,224,731,1115,1523,223,
            224,474,1039,1628,3060,288,565,710,1292,246,
            141,1523,223,224,2218,580,109,910,3060,3060,
            2721,2062,139,143,710,92,2641,162,377,141,
            1524,198,366,3060,710,731,2641,286,287,1353,
            197,139,143,2641,1375,2788,2149,3060,195,2656,
            2659,401,2570,2641,3060,131,710,197,2681,3060,
            193,567,3060,1043,478,2946,252,197,155,2570,
            145,3060,1523,223,224,2641,580,193,235,2570,
            2641,511,2946,366,583,731,141,193,163,197,
            2968,577,2946,583,2659,3060,3060,401,139,143,
            3060,2570,401,2641,3060,127,1594,824,731,193,
            251,312,2641,610,2946,1736,1010,2659,1523,223,
            224,324,1039,1523,223,224,2659,1115,1633,3060,
            2641,3060,2867,251,312,3060,731,3060,2241,1010,
            2844,1905,251,266,2659,264,155,2241,1010,1060,
            1771,199,3060,2641,731,1128,1668,1956,1145,264,
            251,3060,3060,3060,1162,1736,1010,2659,269,3060,
            3060,1628,141,3060,1703,3060,92,547,141,3060,
            155,141,2218,251,139,143,856,141,2906,1010,
            139,143,1664,139,143,2641,2050,731,1734,139,
            143,1917,888,155,155,2641,3060,1992,731,2575,
            155,3060,3060,3060,3060,264,3060,1773,3060,197,
            3060,3060,293,3060,3060,921,954,1628,113,3060,
            3060,2570,1020,3060,3060,3060,3060,3060,259,194,
            3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,
            3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,
            3060,3060,3060,3060,3060,3060,3060,3060,3060,3060,
            2649,3060,0,148,3062,0,3069,1,0,1,
            3063,0,1,976,0,1,3062,0,1,3316,
            0,9,11,0,1,3281,0,110,855,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,0,0,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,0,0,49,
            50,4,4,53,54,55,56,57,58,59,
            60,61,62,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,0,64,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,44,45,46,
            81,82,49,50,67,68,53,54,55,56,
            57,58,59,60,61,62,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,0,0,30,3,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,0,0,49,50,3,0,53,
            54,55,56,57,58,59,60,61,62,0,
            1,2,3,4,0,1,2,8,4,10,
            11,0,48,29,30,0,17,18,19,20,
            21,22,23,24,25,26,27,0,0,30,
            0,0,5,6,7,0,9,2,73,12,
            13,14,15,16,0,1,2,64,49,50,
            0,21,53,54,55,56,57,58,59,60,
            61,62,0,0,2,3,3,5,6,7,
            8,9,0,0,12,13,14,15,16,51,
            52,0,1,2,3,0,0,1,2,17,
            4,47,30,30,32,33,34,35,36,37,
            38,39,40,41,42,43,44,45,46,28,
            0,49,2,3,28,5,6,7,8,9,
            0,0,12,13,14,15,16,77,0,48,
            10,11,0,0,1,73,3,5,6,7,
            30,0,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,0,0,49,
            2,28,0,5,6,7,8,9,0,1,
            12,13,14,15,16,0,1,2,0,1,
            2,48,4,73,63,0,0,2,47,3,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,0,28,2,0,1,
            5,6,7,8,9,29,30,12,13,14,
            15,16,0,0,2,0,69,70,71,72,
            8,69,70,71,72,0,28,32,33,34,
            35,36,37,38,39,40,41,42,43,44,
            45,46,0,1,2,3,4,5,6,7,
            8,9,10,11,0,0,2,0,3,17,
            18,19,20,0,22,23,24,25,26,27,
            0,0,0,0,2,21,0,64,5,6,
            7,5,6,7,29,9,31,0,12,13,
            14,15,16,21,0,1,83,84,85,86,
            87,88,89,90,91,92,0,65,32,33,
            34,35,36,37,38,39,40,41,42,43,
            0,50,28,0,1,5,6,7,0,9,
            2,0,12,13,14,15,16,0,0,69,
            70,71,72,5,6,7,0,1,0,21,
            4,28,32,33,34,35,36,37,38,39,
            40,41,42,43,0,78,0,0,2,5,
            6,7,0,9,28,0,12,13,14,15,
            16,0,0,0,0,4,4,3,5,6,
            7,0,0,21,3,3,32,33,34,35,
            36,37,38,39,40,41,42,43,0,1,
            2,3,4,29,47,31,8,9,10,11,
            29,29,47,31,76,17,18,19,20,63,
            22,23,24,25,26,27,0,1,2,48,
            4,5,6,7,8,63,10,11,67,68,
            0,0,1,17,18,19,20,0,22,23,
            24,25,26,27,0,1,2,3,4,18,
            19,0,8,65,10,11,5,6,7,28,
            0,17,18,19,20,21,22,23,24,25,
            26,27,0,0,1,31,0,1,2,3,
            4,0,10,11,8,4,10,11,0,0,
            0,3,3,17,18,19,20,66,22,23,
            24,25,26,27,0,1,2,3,4,0,
            0,80,8,3,10,11,0,29,0,31,
            31,17,18,19,20,0,22,23,24,25,
            26,27,0,1,30,0,1,2,3,4,
            30,65,17,8,28,10,11,0,67,68,
            3,0,17,18,19,20,47,22,23,24,
            25,26,27,0,74,75,3,0,1,2,
            3,4,21,0,1,8,29,10,11,0,
            64,2,66,48,17,18,19,20,0,22,
            23,24,25,26,27,48,78,30,0,1,
            2,28,4,0,1,0,8,4,10,11,
            0,48,0,3,0,17,18,19,20,21,
            22,23,24,25,26,27,0,1,2,0,
            4,28,3,21,8,0,10,11,3,0,
            1,31,0,17,18,19,20,21,22,23,
            24,25,26,27,0,1,2,0,4,0,
            31,47,8,0,10,11,31,28,0,1,
            0,17,18,19,20,21,22,23,24,25,
            26,27,0,1,2,0,4,28,3,0,
            8,21,10,11,0,0,28,0,0,17,
            18,19,20,0,22,23,24,25,26,27,
            0,1,2,0,4,21,74,75,8,21,
            10,11,0,10,11,66,29,17,18,19,
            20,0,22,23,24,25,26,27,0,1,
            2,0,4,0,1,0,8,2,10,11,
            65,29,63,0,0,17,18,19,20,0,
            22,23,24,25,26,27,0,1,2,0,
            4,0,0,0,8,21,10,11,47,76,
            21,0,29,17,18,19,20,0,22,23,
            24,25,26,27,0,1,2,0,4,2,
            29,0,8,2,10,11,0,0,0,0,
            1,17,18,19,20,0,22,23,24,25,
            26,27,0,51,52,0,0,5,6,7,
            0,9,51,52,12,13,14,15,16,0,
            0,0,0,0,5,6,7,0,9,0,
            77,12,13,14,15,16,0,51,52,51,
            52,5,6,7,0,9,79,0,12,13,
            14,15,16,0,0,0,0,0,5,6,
            7,0,9,0,0,12,13,14,15,16,
            0,0,0,0,0,5,6,7,0,9,
            0,0,12,13,14,15,16,0,0,0,
            0,0,5,6,7,0,9,0,0,12,
            13,14,15,16,0,0,0,0,0,5,
            6,7,0,9,0,0,12,13,14,15,
            16,0,0,0,0,0,5,6,7,0,
            9,0,0,12,13,14,15,16,0,0,
            0,0,0,5,6,7,0,9,0,0,
            12,13,14,15,16,0,0,0,0,0,
            5,6,7,0,9,0,0,12,13,14,
            15,16,0,0,0,0,0,5,6,7,
            0,9,0,0,12,13,14,15,16,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3060,1053,3042,1042,1550,1,1,1,3039,1,
            1515,1483,1,1,1,1,1,1586,1873,1796,
            1761,2643,1423,1332,3072,3073,3074,3075,164,72,
            3070,3068,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,48,3060,3157,
            940,1691,2655,2219,2221,2576,977,343,911,1352,
            944,1458,943,9,3051,3051,3051,3051,3051,3051,
            3051,3051,3051,3051,3051,3051,3051,3051,3051,3051,
            3051,3051,3051,3051,3051,3051,3051,3051,3051,3051,
            3051,1,2101,3051,3051,3051,3051,3051,3051,3051,
            3051,3051,3051,3051,3051,3051,3051,3051,3051,3051,
            1099,1886,3051,3051,1655,1621,3051,3051,3051,3051,
            3051,3051,3051,3051,3051,3051,3060,1053,3042,3071,
            1550,1,1,1,3039,1,1515,1483,1,1,
            1,1,1,1586,1873,1796,1761,2643,1423,1332,
            3072,3073,3074,3075,3060,3060,3070,3067,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,213,3060,3157,940,3071,3060,2219,
            2221,2576,977,343,911,1352,944,1458,943,3060,
            1053,976,3071,1550,3060,2843,3281,3063,2761,1515,
            1483,3060,3066,2792,3070,3060,1586,1873,1796,1761,
            2643,1423,1332,3072,3073,3074,3075,153,54,3070,
            189,3060,3275,3276,3277,210,3228,3263,3032,3229,
            3227,3278,3230,3226,1,2843,3281,2192,3157,940,
            68,2644,2219,2221,2576,977,343,911,1352,944,
            1458,943,3060,1,1,3071,3071,1,1,1,
            1,1,64,3060,1,1,1,1,1,1267,
            1280,1,2713,3054,3067,3060,254,2713,3281,329,
            1,2463,3070,3070,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1808,
            3060,3350,1,3071,1808,1,1,1,1,1,
            51,1,1,1,1,1,1,1227,3060,3066,
            1340,416,242,1,2881,284,3067,1,1,1,
            3070,2,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,59,3060,3350,
            3062,1808,61,3275,3276,3277,3063,3228,3060,1245,
            3229,3227,3278,3230,3226,1,2843,3281,260,2713,
            3281,3066,2761,283,3310,3060,3060,3263,101,3071,
            3232,3237,3236,3234,3235,3233,3238,3239,3231,3240,
            3241,3242,366,376,342,148,1808,3033,219,1433,
            3275,3276,3277,3063,3228,2838,3070,3229,3227,3278,
            3230,3226,3060,42,3062,3060,1216,1203,1152,1088,
            3063,1216,1203,1152,1088,3060,1808,3232,3237,3236,
            3234,3235,3233,3238,3239,3231,3240,3241,3242,366,
            376,342,3060,1053,3062,3065,1443,3275,3276,3277,
            3063,2515,1515,1483,3060,3060,3250,3060,3069,1586,
            1873,1796,1761,3060,1423,1332,3072,3073,3074,3075,
            60,3060,3060,243,3250,2572,147,2444,1,1,
            1,3275,3276,3277,676,3228,3068,70,3229,3227,
            3278,3230,3226,2580,219,1434,2425,2406,2387,2368,
            2349,2311,2330,2292,2273,2244,3060,3064,3232,3237,
            3236,3234,3235,3233,3238,3239,3231,3240,3241,3242,
            148,1522,1808,220,1433,3275,3276,3277,3060,3228,
            3263,3060,3229,3227,3278,3230,3226,3060,3060,1216,
            1203,1152,1088,3275,3276,3277,258,2881,66,2581,
            1,1808,3232,3237,3236,3234,3235,3233,3238,3239,
            3231,3240,3241,3242,149,1163,1,3060,3048,3275,
            3276,3277,188,3228,1808,3060,3229,3227,3278,3230,
            3226,50,1,244,3060,1691,2655,3069,3275,3276,
            3277,3060,3060,2647,3067,3069,3232,3237,3236,3234,
            3235,3233,3238,3239,3231,3240,3241,3242,1,1053,
            3062,3065,1415,709,426,3068,3063,2120,1515,1483,
            1491,1312,459,3068,1360,1586,1873,1796,1761,3310,
            1423,1332,3072,3073,3074,3075,3060,1053,3062,3066,
            1550,3275,3276,3277,3063,3310,1515,1483,1655,1621,
            3060,31,1828,1586,1873,1796,1761,3060,1423,1332,
            3072,3073,3074,3075,1,1053,3062,3069,1550,3085,
            3086,245,3063,3064,1515,1483,3275,3276,3277,1851,
            3060,1586,1873,1796,1761,2749,1423,1332,3072,3073,
            3074,3075,53,3060,1961,3068,3060,1053,3062,3065,
            1550,49,1340,416,3063,1691,1515,1483,3060,1,
            62,3069,192,1586,1873,1796,1761,481,1423,1332,
            3072,3073,3074,3075,3060,1053,3062,3071,1550,200,
            3060,412,3063,3071,1515,1483,3060,1395,71,3068,
            192,1586,1873,1796,1761,65,1423,1332,3072,3073,
            3074,3075,3060,1996,3070,3060,1053,3062,3067,1550,
            3070,3064,329,3063,2552,1515,1483,3060,1655,1621,
            3067,208,1586,1873,1796,1761,2534,1423,1332,3072,
            3073,3074,3075,1,1139,1075,3067,1,1053,3045,
            3071,1550,2648,220,1434,3039,2604,1515,1483,3060,
            3338,3192,1525,3066,1586,1873,1796,1761,3060,1423,
            1332,3072,3073,3074,3075,3066,1163,3070,3060,1053,
            3062,1808,1550,260,2881,3060,3063,2761,1515,1483,
            1,3066,3060,3036,3060,1586,1873,1796,1761,2749,
            1423,1332,3072,3073,3074,3075,1,1053,3062,3060,
            1550,1808,3069,2643,3063,1,1515,1483,191,261,
            2579,3068,63,1586,1873,1796,1761,2749,1423,1332,
            3072,3073,3074,3075,3060,1053,3062,3060,1550,3060,
            3068,492,3063,3060,1515,1483,191,1808,262,2579,
            224,1586,1873,1796,1761,2785,1423,1332,3072,3073,
            3074,3075,3060,1117,3062,3060,1550,2552,3065,1,
            3063,228,1515,1483,1,3060,1808,209,224,1586,
            1873,1796,1761,67,1423,1332,3072,3073,3074,3075,
            3060,1053,3062,52,1550,2643,1139,1075,3063,229,
            1515,1483,86,1340,416,1525,4376,1586,1873,1796,
            1761,3060,1423,1332,3072,3073,3074,3075,3060,1181,
            3062,3060,1550,3060,2031,3060,3063,3317,1515,1483,
            3064,2481,3309,87,41,1586,1873,1796,1761,3060,
            1423,1332,3072,3073,3074,3075,1,1053,3045,3060,
            1550,248,58,69,3039,2785,1515,1483,2623,1360,
            2785,57,2481,1586,1873,1796,1761,110,1423,1332,
            3072,3073,3074,3075,1,1053,3062,3060,1550,3342,
            2777,209,3063,1959,1515,1483,56,3060,55,3060,
            2066,1586,1873,1796,1761,3060,1423,1332,3072,3073,
            3074,3075,157,1267,1280,3060,3060,3275,3276,3277,
            3060,3228,1267,1280,3229,3227,3278,3230,3226,161,
            3060,3060,3060,3060,3275,3276,3277,3060,3228,3060,
            1227,3229,3227,3278,3230,3226,151,1267,1280,1267,
            1280,3275,3276,3277,3060,3228,3057,3060,3229,3227,
            3278,3230,3226,155,3060,3060,3060,3060,3275,3276,
            3277,3060,3228,3060,3060,3229,3227,3278,3230,3226,
            159,3060,3060,3060,3060,3275,3276,3277,3060,3228,
            3060,3060,3229,3227,3278,3230,3226,160,3060,3060,
            3060,3060,3275,3276,3277,3060,3228,3060,3060,3229,
            3227,3278,3230,3226,156,3060,3060,3060,3060,3275,
            3276,3277,3060,3228,3060,3060,3229,3227,3278,3230,
            3226,152,3060,3060,3060,3060,3275,3276,3277,3060,
            3228,3060,3060,3229,3227,3278,3230,3226,158,3060,
            3060,3060,3060,3275,3276,3277,3060,3228,3060,3060,
            3229,3227,3278,3230,3226,154,3060,3060,3060,3060,
            3275,3276,3277,3060,3228,3060,3060,3229,3227,3278,
            3230,3226,150,3060,3060,3060,3060,3275,3276,3277,
            3060,3228,3060,3060,3229,3227,3278,3230,3226
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            368,397,142,47,368,403,415,365,365,415,
            365,415,399,29,403,415,33,306,33,306,
            415,33,335,415,415,415,415,403,142,366,
            106,29,219,53,466,103,306,306,306,306,
            335,335,415,415,415,142,112,29,431,466,
            216,179,29,423,471,264,306,332,46,306,
            306,332,335,62,61,62,340,47,113,29,
            471,177,16,16,16,16,16,16,16,16,
            16,66,128,240,237,244,242,250,248,252,
            251,254,253,226,423,53,103,165,473,267,
            213,165,197,332,434,332,62,332,16,499,
            29,112,14,107,107,499,31,31,1,31,
            31,106,107,69,262,16,262,216,473,177,
            128,128,498,498,287,16,431,431,257,501,
            16,16,16,16,16,16,16,16,16,16,
            16,16,16,16,16,16,16,16,16,16,
            16,16,16,16,16,16,16,16,16,16,
            165,423,431,426,430,430,165,213,264,106,
            16,259,332,110,107,107,126,16,169,16,
            16,16,1,262,1,62,172,431,431,430,
            213,179,466,428,468,237,237,242,242,242,
            242,240,240,248,244,244,251,250,262,253,
            252,423,466,468,473,499,267,16,213,197,
            434,16,14,14,107,431,31,431,431,1,
            175,179,499,16,171,225,366,16,177,501,
            471,431,439,16,426,439,213,213,287,107,
            287,107,14,1,16,1,1,213,177,428,
            473,431,1,431,287,1,431,287,287,107,
            431,111,62,431,1,1,431,1,1,431,
            1,431,287,107,1,175,1,1,1,1,
            431,1
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            54,56,21,60,62,57,50,58,59,55,
            53,61,49,30,3,24,25,26,27,8,
            18,19,17,10,11,22,23,20,4,2,
            1,0,12,5,13,14,15,6,9,16,
            7,28,29,48,21,47,1,4,2,30,
            3,0,21,28,1,64,29,30,3,0,
            64,31,3,29,0,65,48,31,47,66,
            80,18,19,17,4,10,11,67,68,51,
            52,69,70,71,72,74,75,76,77,78,
            81,82,83,84,85,86,87,88,89,90,
            91,92,64,28,1,29,30,3,0,73,
            79,31,54,56,21,60,62,57,50,58,
            59,55,53,61,49,30,3,18,19,17,
            4,10,11,22,23,20,1,24,25,26,
            27,2,8,44,45,46,14,16,13,9,
            12,15,40,32,37,35,36,34,33,38,
            39,41,42,43,5,6,7,0,50,0,
            64,28,66,0,31,3,28,66,1,24,
            25,26,27,2,8,18,19,17,4,10,
            11,22,23,20,21,0,18,19,17,4,
            10,11,22,23,20,1,2,8,24,25,
            26,27,65,3,0,47,28,1,29,48,
            30,3,64,0,21,64,83,84,85,86,
            87,89,88,90,91,92,4,67,68,10,
            11,52,51,69,70,71,72,74,75,17,
            76,77,78,31,81,82,65,48,29,30,
            3,47,0,65,3,9,5,6,7,18,
            19,17,4,10,11,22,23,20,1,2,
            8,24,25,26,27,0,1,24,25,26,
            27,2,8,18,19,17,4,10,11,22,
            23,20,48,3,0,12,32,5,33,44,
            13,34,14,35,36,15,6,37,38,9,
            45,16,46,39,40,7,41,42,43,2,
            8,31,3,0,29,2,31,3,0,12,
            32,5,33,44,13,34,14,35,36,15,
            6,37,38,9,45,16,46,39,40,7,
            41,42,43,8,2,21,0,12,32,5,
            33,44,13,34,14,35,36,15,6,37,
            38,9,45,16,46,39,40,7,41,42,
            43,2,8,30,3,49,73,0,8,44,
            45,46,40,32,37,35,36,34,33,38,
            39,41,42,43,47,30,16,13,9,12,
            15,14,5,6,7,4,2,28,1,29,
            48,3,0,4,47,2,1,0,12,32,
            5,33,44,13,34,14,35,36,15,6,
            37,38,9,45,16,46,39,40,7,41,
            42,43,2,8,63,4,0,4,1,28,
            48,3,12,32,5,33,44,13,34,14,
            35,36,15,6,37,38,9,45,16,46,
            39,40,7,41,42,43,63,8,2,0,
            48,3,4,1,28,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            85,100,70,46,106,73,74,7,7,74,
            13,74,93,76,96,97,100,20,100,20,
            97,100,20,97,74,74,74,73,20,83,
            47,118,100,100,123,52,20,110,20,110,
            20,13,97,97,97,125,41,118,59,123,
            52,37,28,20,49,54,110,42,46,129,
            110,42,13,42,100,100,80,46,1,91,
            49,20,37,37,37,37,37,37,37,37,
            37,100,24,100,100,100,100,100,100,100,
            100,100,100,100,20,100,52,61,114,4,
            56,61,55,42,118,42,42,42,37,13,
            118,15,36,47,47,44,100,100,9,100,
            100,100,47,100,100,37,100,52,19,4,
            24,24,22,22,58,37,59,59,100,103,
            37,37,37,37,37,37,37,37,37,37,
            37,37,37,37,37,37,37,37,37,37,
            37,37,37,37,37,37,37,37,37,37,
            61,99,59,89,100,59,61,56,63,47,
            37,100,42,100,47,47,33,37,100,37,
            37,37,9,100,9,42,67,59,59,59,
            56,37,123,52,102,100,100,100,100,100,
            100,100,100,100,100,100,100,100,100,100,
            100,99,123,101,19,100,64,37,56,55,
            118,37,36,36,47,59,100,59,59,9,
            39,37,100,37,31,100,100,37,20,104,
            49,59,121,37,90,121,56,56,58,47,
            58,47,36,9,37,9,9,56,4,52,
            19,59,9,59,58,9,59,58,58,47,
            59,100,42,59,9,9,59,9,9,59,
            9,59,58,47,9,39,9,9,9,9,
            59,9
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            33,32,82,4,19,0,72,0,32,4,
            26,0,59,0,4,32,37,67,33,19,
            0,1,0,19,45,4,0,42,76,0,
            77,0,19,33,46,20,4,0,4,62,
            19,37,0,83,0,19,20,0,19,22,
            0,38,0,19,4,39,0,4,22,0,
            60,0,39,4,23,0,92,91,0,71,
            70,69,52,43,0,19,42,90,0,19,
            33,46,24,0,93,33,19,0,19,50,
            40,0,69,70,71,52,35,36,23,0,
            40,22,19,50,0,33,19,78,0,58,
            19,45,0,89,19,33,0,40,19,0,
            19,33,48,0,33,19,94,0,19,45,
            53,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            2,85,99,9,51,67,79,98,72,10,
            11,47,58,63,66,75,8,6,7,71,
            3,12,13,86,87,88,89,1,42,93,
            92,50,55,59,64,65,69,70,77,78,
            81,82,83,57,73,76,29,91,102,80,
            16,17,48,49,52,53,54,60,61,62,
            68,74,30,31,90,4,14,15,18,19,
            20,21,84,22,23,24,25,26,56,5,
            27,28,32,33,34,35,36,37,38,39,
            40,41,43,44,45,94,95,96,97,100,
            101
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            103,0,0,109,114,115,116,117,118,119,
            120,121,122,123,124,125,126,113,0,107,
            128,105,145,131,127,130,0,0,0,0,
            0,132,137,108,144,146,106,166,104,163,
            0,165,143,152,157,135,153,164,174,176,
            129,147,156,167,173,151,0,155,160,172,
            175,177,111,139,162,112,134,138,148,149,
            150,154,159,0,161,169,180,182,0,0,
            110,133,136,140,141,142,158,168,170,171,
            178,179,181,183,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            164,164,38,44,70,95,101,70,134,24,
            54,62,76,107,112,76,15,31,50,85,
            143,160,184,188,15,147,1,10,35,59,
            67,117,122,192,89,154,125,154,154,6,
            81
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            22,19,4,4,22,22,22,19,140,29,
            4,29,22,22,22,19,22,29,4,83,
            22,29,29,4,19,151,4,13,29,4,
            29,120,120,29,92,157,128,178,171,8,
            83
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            4,4,38,38,70,69,69,70,29,50,
            38,42,70,69,69,70,47,50,38,53,
            24,5,4,4,47,17,77,62,50,38,
            40,85,84,3,53,6,30,4,4,91,
            53
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            31,29,65,65,31,31,31,29,79,48,
            65,48,31,31,31,29,31,48,65,30,
            31,48,48,65,29,47,65,24,48,65,
            48,16,16,48,2,48,50,48,48,64,
            30
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            4,4,121,121,171,171,171,171,85,127,
            121,159,171,171,171,171,108,127,121,115,
            134,4,4,4,108,34,1,110,127,121,
            159,172,172,4,115,7,85,4,4,2,
            115
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            152,28,0,104,0,193,0,31,0,192,
            120,0,153,0,167,120,21,0,42,106,
            0,106,0,155,120,1,151,0,105,0,
            155,120,1,0,162,1,0,119,9,161,
            120,28,0,119,161,120,9,28,0,119,
            9,28,0,119,161,120,28,0,119,28,
            0,155,120,1,141,0,145,1,0,175,
            120,21,160,44,0,175,120,21,44,0,
            146,0,107,0,188,120,146,0,120,146,
            0,158,107,0,158,120,21,173,46,0,
            158,120,21,173,45,0,158,120,21,46,
            0,158,120,21,45,0,171,144,0,143,
            0,170,144,0,127,57,0,80,2,108,
            105,107,0,127,123,135,1,60,0,56,
            130,0,183,120,21,0,135,82,117,0,
            29,126,0,164,1,0,105,115,0,164,
            1,20,0,167,120,21,123,164,1,0,
            105,3,0,112,42,106,0,105,3,0,
            112,106,0,182,1,105,0,135,28,105,
            0,135,1,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1213,2501,0,1873,1796,1761,1443,1726,1163,1099,
            1360,1227,1139,1075,329,1280,1267,1216,1203,1152,
            1088,1691,1655,1621,1340,416,1415,1586,1550,1515,
            1483,1423,1332,1395,1773,1738,1703,1668,1375,2066,
            1633,1598,1563,2623,2604,2552,2173,1312,1528,1493,
            2534,2515,2149,2481,2031,1996,1961,1245,2463,1921,
            2444,2425,2406,2387,2368,2349,2330,2311,2292,2273,
            2244,1886,1851,1828,1181,1117,1292,2221,1458,2192,
            2120,1053,1808,2101,1020,987,954,921,888,855,
            822,789,756,723,690,657,624,591,558,525,
            492,459,426,343,378,295,0,2173,2101,1395,
            1375,1312,1292,0,2816,2946,2794,2784,2767,0,
            1956,1628,1593,1557,1523,1439,1905,2867,2713,2881,
            2659,2937,0,1020,987,954,921,888,855,822,
            789,756,723,690,657,624,591,558,525,492,
            459,426,343,378,295,2649,1558,0,1905,2838,
            2713,2659,2731,2718,1870,1201,2792,2843,2646,0,
            2671,2641,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,181,120,134,194,153,170,46,45,171,
            44,172,144,120,144,144,173,21,173,21,
            144,160,21,144,172,171,170,153,191,189,
            169,1,145,143,120,141,21,120,21,120,
            21,120,144,144,144,120,21,29,145,120,
            141,64,149,4,1,28,120,158,146,159,
            120,158,120,175,160,176,195,134,120,149,
            1,21,20,23,22,11,10,4,17,19,
            18,105,1,109,108,111,110,113,112,115,
            114,117,116,106,4,143,141,120,120,9,
            119,120,4,158,120,158,175,29,64,29,
            120,183,61,53,55,59,58,50,57,62,
            60,122,126,2,56,54,133,141,120,120,
            1,1,80,66,1,28,164,135,122,146,
            11,10,68,67,4,72,71,70,69,51,
            52,17,75,74,77,76,82,81,78,92,
            91,90,88,89,87,86,85,84,83,64,
            120,161,155,134,156,190,120,119,161,188,
            47,145,29,3,135,184,1,1,127,1,
            1,29,47,152,47,167,120,164,164,182,
            135,123,120,151,1,108,108,110,110,110,
            110,109,109,112,111,111,114,113,135,116,
            115,161,120,1,29,29,161,9,119,4,
            29,47,147,121,135,135,50,135,135,47,
            29,192,66,28,193,123,123,29,21,149,
            1,162,120,47,149,120,119,119,121,135,
            121,135,121,123,1,123,123,152,120,151,
            120,155,123,135,121,123,135,121,121,135,
            135,127,167,155,123,123,135,123,123,135,
            123,135,121,123,79,29,123,123,123,123,
            135,123
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "#",
            "##",
            "nl",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "EOF_TOKEN",
            "identifier",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "Invalid",
            "PlaceMarker",
            "Parameter",
            "DisabledMacroName",
            "Completion",
            "EndOfCompletion",
            "SingleLineComment",
            "MultiLineComment",
            "ERROR_TOKEN",
            "ident",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "argument_expression_list",
            "type_name",
            "initializer_list",
            "assignment_expression",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "expression_in_statement",
            "expression_list",
            "constant_expression",
            "statement",
            "compound_statement",
            "label_identifier",
            "block_item_list",
            "block_item",
            "declaration",
            "goto_identifier",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifiers",
            "storage_class_specifier",
            "type_qualifier",
            "function_specifier",
            "type_specifier",
            "struct_or_union_specifier",
            "enum_specifier",
            "typedef_name",
            "init_declarator",
            "declarator",
            "initializer",
            "struct_or_union_identifier",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "struct_declarator",
            "enum_identifier",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer",
            "function_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "function_declarator",
            "knr_direct_declarator",
            "identifier_list",
            "knr_function_declarator",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "abstract_declarator",
            "direct_abstract_declarator",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 49,
           SCOPE_UBOUND      = 40,
           SCOPE_SIZE        = 41,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 302,
           NT_OFFSET         = 101,
           LA_STATE_OFFSET   = 3354,
           MAX_LA            = 2147483647,
           NUM_RULES         = 294,
           NUM_NONTERMINALS  = 95,
           NUM_SYMBOLS       = 196,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2650,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 3032,
           ERROR_ACTION      = 3060;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
