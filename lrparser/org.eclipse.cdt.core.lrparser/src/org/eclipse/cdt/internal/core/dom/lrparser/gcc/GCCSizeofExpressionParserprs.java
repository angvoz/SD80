/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCSizeofExpressionParserprs implements lpg.lpgjavaruntime.ParseTable, GCCSizeofExpressionParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,8,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,6,8,
            0,0,1,1,3,3,3,0,1,0,
            1,2,4,2,1,1,1,3,1,1,
            2,3,7,8,0,1,0,1,3,1,
            3,1,1,1,1,1,1,3,1,1,
            1,1,1,3,1,2,2,1,5,3,
            1,3,5,1,3,1,3,2,4,3,
            5,4,6,6,3,5,1,3,4,5,
            6,0,1,2,1,3,1,1,3,2,
            1,1,1,1,2,1,2,3,1,1,
            1,3,1,2,2,2,3,4,5,1,
            7,3,0,0,1,1,3,3,4,1,
            1,2,3,2,3,2,1,0,1,2,
            1,1,1,1,1,2,4,3,6,2,
            4,1,1,1,1,2,6,3,1,3,
            1,4,0,1,1,1,3,1,0,4,
            3,1,2,1,3,4,4,6,1,0,
            1,3,1,3,0,1,4,5,2,2,
            3,3,5,3,4,3,1,2,2,2,
            4,2,1,1,2,2,3,2,2,3,
            1,1,1,1,1,1,1,2,5,3,
            1,1,-39,0,0,0,0,0,0,-2,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-175,-35,0,-133,
            0,-135,0,0,0,-58,0,0,0,0,
            0,0,-40,0,0,0,0,0,-4,0,
            0,0,0,0,0,0,0,-16,0,-46,
            0,0,0,0,0,0,-36,0,0,0,
            0,0,0,-171,0,-137,0,-34,-187,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-168,0,0,-80,0,0,0,0,
            0,0,0,0,0,0,0,0,-55,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-131,-37,0,0,0,0,0,-18,0,
            -47,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-138,0,-19,
            0,0,0,0,0,-48,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-162,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-139,0,-146,
            0,0,0,0,0,0,0,-31,0,0,
            -147,-75,-286,0,0,0,0,0,0,0,
            0,0,0,0,0,-73,0,-32,0,0,
            0,0,0,0,0,0,-20,0,0,-255,
            -21,0,0,-189,-158,0,-249,0,-125,0,
            0,0,0,0,0,0,-52,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-22,0,-302,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -5,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-239,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-159,
            0,0,0,0,0,0,0,0,-256,-305,
            0,-78,0,0,0,0,0,0,0,0,
            0,0,0,0,-23,-87,-148,0,0,0,
            0,0,0,0,0,0,-122,0,0,0,
            0,0,0,0,-124,0,-197,-237,0,0,
            0,0,0,0,-241,0,0,0,0,0,
            0,-262,0,0,0,0,0,0,0,-154,
            0,0,0,0,0,0,0,0,0,-184,
            0,-258,0,0,0,0,0,0,0,0,
            0,0,0,0,-24,-134,0,0,0,0,
            0,0,0,0,0,-25,0,0,0,0,
            0,0,0,-81,0,-336,0,0,0,-278,
            0,0,0,0,0,0,-119,0,0,0,
            0,0,0,0,-185,0,0,0,0,0,
            0,0,0,-288,0,0,-282,0,0,0,
            0,0,0,-1,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -238,-26,0,-208,0,0,-27,0,0,-296,
            0,0,0,0,-56,0,0,0,0,0,
            0,0,0,0,0,0,0,-3,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-223,0,-74,0,0,0,0,0,0,
            0,0,0,0,-123,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-209,
            0,0,0,0,0,0,0,0,-166,-28,
            0,-156,0,0,0,0,0,0,-211,0,
            0,0,0,0,0,0,-83,0,0,0,
            0,0,0,0,0,-167,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -136,0,0,0,0,0,0,0,0,-127,
            -129,0,-130,0,0,0,0,0,0,0,
            -312,0,0,0,0,0,0,-231,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-242,0,0,-29,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -84,-140,-309,-169,0,0,0,0,0,0,
            0,-254,-179,0,0,0,0,0,0,0,
            -62,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-177,-182,0,-6,0,0,
            0,0,0,0,-63,0,0,0,0,0,
            0,-85,0,0,0,0,0,-245,0,0,
            0,0,0,0,0,0,0,0,-268,-298,
            0,-64,0,0,0,0,0,0,-181,0,
            0,0,0,0,-94,0,-303,-212,0,0,
            0,0,0,0,0,0,0,0,-65,0,
            0,0,0,0,0,-199,0,0,0,0,
            0,0,0,0,-213,0,0,0,0,0,
            0,0,-284,0,0,-66,0,0,0,0,
            0,0,-202,0,0,0,0,0,0,0,
            -314,-215,0,0,0,0,0,0,0,-322,
            -99,0,-67,0,0,0,0,0,0,-205,
            0,0,0,0,0,0,-100,0,-224,0,
            0,0,0,0,0,0,0,-101,0,-68,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-102,-226,0,0,0,0,
            0,0,0,-103,-104,0,-69,0,0,0,
            0,0,0,-219,0,0,0,0,0,0,
            0,-105,-227,0,0,0,0,0,0,0,
            -106,-107,0,-70,0,0,0,0,0,0,
            -247,0,0,0,0,0,0,0,-108,-246,
            0,0,0,0,0,0,0,-265,-109,0,
            -71,0,0,0,0,0,0,-248,0,0,
            0,0,0,-110,0,-293,-111,0,0,0,
            0,0,0,0,-308,-112,0,-72,0,0,
            0,0,0,0,-113,0,0,0,0,0,
            0,-96,0,-114,0,0,0,0,0,0,
            0,-115,-116,0,0,0,0,0,-160,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-250,0,0,-117,0,0,0,0,0,
            0,0,-118,0,0,-7,0,0,0,0,
            0,0,0,0,0,0,-121,0,-49,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-252,-251,-257,-259,-198,0,0,0,
            0,0,0,-161,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-132,0,0,
            0,0,0,0,0,0,0,0,-142,0,
            -203,0,0,0,0,0,0,-260,0,0,
            0,0,0,-149,0,-150,-261,0,0,0,
            0,0,0,0,-152,-153,0,-204,0,0,
            0,0,0,0,-283,0,0,0,0,0,
            -294,-155,-157,-163,0,0,0,0,0,0,
            0,-307,-172,0,-229,0,0,0,0,0,
            0,-174,0,0,0,0,0,0,0,-176,
            -180,0,0,0,0,0,0,0,-243,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-285,0,0,0,0,0,
            0,0,0,0,0,0,0,-279,-290,-299,
            -310,0,0,0,0,0,0,0,-295,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-313,-183,-306,0,0,0,0,0,
            0,0,0,0,0,0,0,-188,-311,0,
            0,0,0,0,0,0,0,0,-315,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-319,-192,0,0,0,0,0,
            0,0,-193,0,-330,0,0,0,0,0,
            0,0,0,0,0,0,0,-196,-217,-326,
            -327,0,0,0,0,0,0,0,-320,-98,
            0,0,0,0,0,0,0,-53,0,0,
            0,0,0,0,0,0,0,0,-144,0,
            -325,-59,0,0,0,0,0,-200,0,0,
            -214,0,0,-216,0,0,0,0,0,0,
            0,0,-221,0,0,0,0,-225,0,-236,
            0,0,-334,0,0,0,0,0,0,0,
            -335,-240,-57,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-244,-266,0,
            0,0,-195,-190,0,-267,0,-232,-280,0,
            0,-281,0,-300,0,0,0,0,0,-304,
            0,0,0,0,-316,0,-292,-33,0,-324,
            0,0,0,0,0,0,0,-328,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-41,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-173,-170,
            0,0,0,0,0,0,0,-60,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-89,0,0,0,0,0,0,0,0,
            0,0,-207,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-220,0,0,0,0,-271,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-274,-17,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-264,0,0,-165,-329,0,0,0,0,
            0,0,0,0,0,-145,0,0,0,0,
            0,0,0,0,-287,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-61,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-317,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-233,0,-263,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -14,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-151,0,0,0,-277,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-79,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -54,0,0,0,0,0,0,-82,0,0,
            0,0,0,0,0,0,0,0,-128,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-218,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-15,0,0,0,0,0,0,0,
            0,0,0,0,0,-191,0,-275,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-194,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-228,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-230,0,
            0,-38,0,0,0,0,-301,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -253,0,-270,0,0,-222,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-272,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-273,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-323,0,
            0,0,0,0,0,0,0,-234,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-332,
            0,0,0,0,0,0,0,0,0,0,
            -333,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-338,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-120,0,0,0,
            -337,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-50,0,0,
            0,0,0,0,0,0,0,0,0,-51,
            0,0,0,0,0,0,-86,0,0,0,
            0,0,0,0,0,0,0,-88,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-8,
            0,0,0,0,0,0,0,0,0,0,
            -91,-97,0,0,0,0,0,0,0,0,
            0,-93,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-9,0,0,0,0,0,0,
            0,0,0,0,-95,-141,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-42,0,0,
            0,0,0,0,0,0,0,-126,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-206,0,0,0,0,0,0,0,0,
            -10,0,0,0,0,0,0,0,0,0,
            0,0,-11,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-12,0,0,0,
            0,0,0,0,0,-13,0,0,0,0,
            0,0,-30,0,0,0,0,0,0,0,
            -43,0,0,0,0,0,0,0,0,0,
            -44,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-45,0,0,0,
            0,0,0,-77,0,-76,0,0,0,0,
            0,0,-92,0,0,0,0,0,0,0,
            0,0,-143,0,0,0,0,0,0,0,
            -210,0,0,0,-186,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-235,0,0,
            0,-90,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-164,0,0,
            0,0,0,0,0,0,0,0,-178,0,
            0,0,0,0,-201,0,0,0,0,-289,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-291,0,0,-276,0,0,0,0,
            0,-318,0,0,0,-331,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-269,0,
            0,-297,0,0,-321,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            114,7,115,34,34,24,24,51,51,27,
            27,1,1,2,2,2,2,3,3,3,
            4,5,5,5,5,5,5,5,5,68,
            68,90,6,6,6,6,6,6,6,6,
            6,6,8,8,9,9,9,9,10,10,
            10,11,11,11,12,12,12,12,12,17,
            17,17,18,18,19,19,20,20,21,21,
            22,22,23,23,26,26,26,26,26,26,
            26,26,26,26,26,26,35,29,25,116,
            116,92,92,57,36,36,36,36,36,36,
            36,37,37,37,30,30,117,117,93,93,
            38,38,39,39,39,65,65,40,40,40,
            40,41,41,41,41,41,76,76,33,33,
            33,33,33,52,52,52,99,99,94,94,
            94,94,95,95,95,96,96,96,97,97,
            97,98,98,98,118,118,100,100,101,53,
            56,56,56,56,56,69,70,70,70,70,
            70,70,70,70,70,70,70,70,80,77,
            77,119,120,81,81,78,78,78,82,102,
            102,103,103,83,83,83,59,121,121,104,
            84,84,84,79,79,122,105,105,106,106,
            85,85,31,32,32,32,54,55,55,42,
            42,42,42,45,45,47,43,43,44,48,
            48,139,139,46,140,140,123,123,49,49,
            49,49,49,49,49,49,49,107,66,66,
            66,66,50,72,72,71,71,71,73,73,
            67,67,124,124,75,75,74,74,74,60,
            60,60,61,62,62,62,63,63,63,63,
            58,58,58,64,125,91,91,91,91,86,
            126,127,127,128,128,129,129,141,141,142,
            142,143,143,143,143,145,145,144,144,144,
            146,146,13,13,13,28,28,14,14,130,
            130,108,108,108,109,109,131,131,110,110,
            15,15,132,132,111,111,111,16,87,133,
            133,134,134,112,112,112,88,88,88,6,
            6,12,12,23,3,37,135,113,113,113,
            89,89,33,76,52,101,101,101,104,104,
            104,122,119,120,50,82,128,128,136,137,
            86,114,114,205,1135,17,21,18,438,940,
            133,44,530,509,611,607,364,312,313,314,
            715,644,796,785,867,862,74,1130,1819,91,
            999,2849,1357,186,134,212,1558,20,17,21,
            18,438,42,878,44,530,509,611,607,50,
            1690,330,354,715,1345,136,133,135,1733,159,
            1558,20,17,21,18,438,42,1819,44,530,
            509,1228,138,165,1177,178,1357,185,49,49,
            142,145,148,151,716,888,888,364,312,313,
            314,2756,357,1007,104,429,388,2148,2517,2528,
            2561,2572,1352,87,87,134,212,582,1219,1558,
            20,17,21,18,438,42,2605,44,530,509,
            611,1324,1130,1819,254,212,136,133,135,225,
            159,1558,20,17,21,18,438,42,333,44,
            530,509,1245,138,165,274,331,19,1250,1531,
            1135,142,145,148,151,716,1558,20,17,21,
            18,438,42,357,44,530,509,1254,2148,2517,
            2528,2561,2572,1352,1438,20,17,21,18,438,
            940,1427,44,530,509,611,607,2605,1357,187,
            1585,715,644,796,785,867,862,74,1357,31,
            280,1585,1513,1534,20,17,21,18,438,940,
            1427,44,530,509,611,607,1819,123,1357,31,
            715,644,796,785,867,862,74,253,122,280,
            244,315,285,332,49,1537,22,255,1718,255,
            1393,888,1773,315,312,313,314,1558,20,17,
            21,18,438,42,407,44,530,1282,727,87,
            286,285,126,1246,243,737,1267,1718,253,212,
            253,212,218,864,220,930,222,223,228,273,
            1504,1582,20,17,21,18,438,350,25,286,
            268,804,476,271,1335,1372,20,17,21,18,
            438,940,1427,44,530,509,611,607,24,834,
            590,473,715,644,796,785,867,862,74,301,
            1589,280,1303,20,17,21,18,438,940,619,
            44,530,509,611,607,167,591,1357,825,715,
            644,796,785,867,862,74,966,709,735,315,
            312,313,314,287,1782,1513,238,949,1267,1718,
            316,312,313,314,786,1462,20,17,21,18,
            438,940,1537,44,530,509,611,607,342,1797,
            1585,288,715,644,796,785,867,862,74,240,
            1585,280,1654,20,17,21,18,438,940,194,
            44,530,509,611,607,294,755,111,344,715,
            644,796,785,867,862,74,242,125,328,316,
            312,313,314,380,475,861,268,320,1721,1718,
            1486,20,17,21,18,438,940,49,44,530,
            509,611,607,1678,554,1585,1782,715,644,796,
            785,867,862,74,1420,410,280,1510,20,17,
            21,18,438,940,393,44,530,509,611,607,
            341,888,121,275,715,644,796,785,867,862,
            74,1842,31,280,1226,254,212,201,157,87,
            1357,1769,1578,381,1718,1558,20,17,21,18,
            438,42,326,44,530,509,611,1327,1558,20,
            17,21,18,438,940,289,44,530,509,611,
            607,1718,1585,1579,1819,715,644,796,785,867,
            862,74,28,227,91,1630,20,17,21,18,
            438,940,1955,44,530,509,611,607,23,2909,
            571,281,715,644,796,785,867,862,74,1513,
            1309,939,1558,20,17,21,18,438,42,168,
            44,530,509,611,607,209,454,417,390,715,
            644,796,785,867,862,93,1332,20,17,21,
            18,438,940,242,44,530,509,611,607,226,
            429,1085,1850,715,644,796,785,867,862,74,
            1819,1832,1210,1221,316,312,313,314,1849,1663,
            239,1654,20,17,21,18,438,940,1222,44,
            530,509,611,607,272,277,259,318,715,644,
            796,785,867,862,74,1357,294,328,1558,20,
            17,21,18,438,940,127,44,530,509,611,
            607,687,965,1468,1819,715,644,796,785,867,
            862,74,1832,49,92,316,312,313,314,2860,
            2178,1558,20,17,21,18,438,940,278,44,
            530,509,611,607,254,212,230,1655,715,644,
            796,785,867,862,74,1819,1819,85,1582,20,
            17,21,18,438,349,1558,20,17,21,18,
            438,940,735,44,530,509,611,607,1338,337,
            1733,327,715,644,796,785,867,862,74,1585,
            1585,84,1558,20,17,21,18,438,940,49,
            44,530,509,611,607,626,1903,1585,1819,715,
            644,796,785,867,862,74,2912,2915,83,1558,
            20,17,21,18,438,940,49,44,530,509,
            611,607,279,1300,338,1685,715,644,796,785,
            867,862,74,1357,296,82,1558,20,17,21,
            18,438,940,1112,44,530,509,611,607,1425,
            617,1790,1410,715,644,796,785,867,862,74,
            1585,1257,81,1558,20,17,21,18,438,940,
            1513,44,530,509,611,607,335,1633,193,1819,
            715,644,796,785,867,862,74,117,430,80,
            1558,20,17,21,18,438,940,292,44,530,
            509,611,607,2313,241,572,1819,715,644,796,
            785,867,862,74,736,948,79,1558,20,17,
            21,18,438,940,49,44,530,509,611,607,
            2330,1952,1761,1819,715,644,796,785,867,862,
            74,1773,1330,78,1558,20,17,21,18,438,
            940,49,44,530,509,611,607,2372,583,1797,
            1842,715,644,796,785,867,862,74,1517,819,
            77,1558,20,17,21,18,438,940,1258,44,
            530,509,611,607,350,1975,1517,1141,715,644,
            796,785,867,862,74,949,293,76,1558,20,
            17,21,18,438,940,644,44,530,509,611,
            607,282,1177,178,476,715,644,796,785,867,
            862,74,640,630,75,364,312,313,314,1558,
            20,17,21,18,438,940,1501,44,530,509,
            611,607,1513,134,212,1186,715,644,796,785,
            867,862,74,851,1654,353,1582,20,17,21,
            18,438,41,1681,137,133,135,1407,159,1558,
            20,17,21,18,438,42,243,44,530,509,
            1255,139,165,1819,1513,1819,1819,1728,1768,143,
            146,149,152,716,1558,20,17,21,18,438,
            940,358,44,530,509,611,607,224,794,317,
            336,715,644,796,785,867,862,74,244,790,
            73,1558,20,17,21,18,438,940,49,44,
            530,509,611,607,1063,2873,1111,1842,715,644,
            796,785,867,862,74,1369,1660,1382,1558,20,
            17,21,18,438,940,1727,44,530,509,611,
            607,1842,804,853,1465,715,644,796,785,867,
            862,74,1513,880,1424,1558,20,17,21,18,
            438,42,301,44,530,509,611,607,179,293,
            1684,1139,715,644,796,785,867,862,93,1558,
            20,17,21,18,438,42,295,44,530,509,
            611,607,203,1752,1108,291,715,644,796,785,
            867,862,93,745,377,1558,20,17,21,18,
            438,42,356,44,530,509,611,607,1778,1779,
            1819,1819,715,644,796,785,867,862,93,1558,
            20,17,21,18,438,42,1495,44,530,509,
            611,607,1137,322,1200,229,715,644,796,785,
            867,862,93,1842,69,1558,20,17,21,18,
            438,42,1512,44,530,509,611,607,1016,1789,
            319,1721,715,644,796,785,867,862,93,1558,
            20,17,21,18,438,42,211,44,530,509,
            611,607,1165,233,1842,919,715,644,796,785,
            867,862,93,879,180,1558,20,17,21,18,
            438,42,1680,44,530,509,611,607,1755,1683,
            1513,1842,715,644,796,785,867,862,93,1819,
            137,1503,316,312,313,314,201,383,1558,20,
            17,21,18,438,42,204,44,530,1299,1,
            1503,1819,400,2431,379,86,383,110,1188,888,
            95,1852,202,615,1290,760,108,94,96,97,
            98,99,806,1469,86,347,110,87,1853,95,
            200,1362,615,1819,760,108,94,96,97,98,
            99,1819,208,1558,20,17,21,18,438,42,
            105,44,530,509,611,607,109,2448,1179,1327,
            715,644,1336,333,49,348,1565,363,1760,1856,
            2808,888,1784,106,1323,109,315,312,313,314,
            1696,315,312,313,314,1263,363,541,396,87,
            676,2054,107,1273,2808,888,2208,1709,764,3121,
            315,312,313,314,3121,217,864,220,930,222,
            223,228,3121,89,3121,2036,3121,1354,1778,1558,
            20,17,21,18,438,42,3121,44,1201,217,
            864,220,930,222,223,228,3121,3121,3121,32,
            289,3121,1795,3121,3121,3121,454,2781,1558,20,
            17,21,18,438,42,3121,44,530,509,611,
            607,3121,383,154,1740,715,644,796,785,1363,
            3121,2882,1850,974,3121,315,312,313,314,3121,
            2311,1008,217,864,220,930,222,223,228,273,
            981,197,3121,1840,1769,262,3121,276,49,3121,
            266,804,476,271,904,888,258,3121,1191,3121,
            1138,3121,1513,3121,263,217,864,220,930,222,
            223,228,273,87,333,413,3121,1580,1423,3121,
            3121,2808,383,266,804,476,271,315,312,313,
            314,3121,1840,1769,412,255,705,990,3121,3121,
            87,3121,2054,2808,503,408,1537,3121,196,315,
            312,313,314,888,260,255,217,864,220,930,
            222,223,228,3121,2036,3121,253,212,208,1778,
            3121,87,3121,124,2272,770,3121,3121,217,864,
            220,930,222,223,228,3121,253,212,1308,1776,
            447,1795,1558,20,17,21,18,438,42,3121,
            44,530,509,611,607,3121,3121,473,3121,715,
            644,796,1385,3121,155,1740,541,208,3121,3121,
            2882,3121,3121,2808,3121,3121,3121,1043,3121,316,
            312,313,314,3121,333,3121,777,1326,1776,3121,
            198,2808,1461,454,3121,3121,3121,316,312,313,
            314,1582,20,17,21,18,438,34,217,864,
            220,930,222,223,228,3121,469,1503,3121,196,
            1081,1795,3121,888,3121,3121,217,864,220,930,
            222,223,228,315,312,313,314,757,3121,2876,
            3121,86,3121,110,2159,752,95,3121,727,3121,
            2886,760,1628,94,96,97,98,99,3121,3121,
            3121,276,218,864,220,930,222,223,228,192,
            1504,1558,20,17,21,18,438,42,1240,44,
            530,509,611,607,3121,3121,273,3121,1309,431,
            3121,364,312,313,314,3121,454,266,804,476,
            271,3121,315,312,313,314,3121,3121,613,134,
            212,990,3121,3121,3121,454,3121,727,3121,3121,
            3121,3121,1850,1582,20,17,21,18,438,33,
            141,133,135,3121,159,3121,517,1503,1764,1407,
            3121,196,3121,888,3121,3121,3121,140,165,3121,
            3121,316,312,313,314,2477,258,565,1503,3121,
            1044,86,1513,110,888,3121,95,752,3121,3121,
            3121,760,103,94,96,97,98,99,681,1503,
            3121,3121,86,3121,110,888,3121,95,3121,3121,
            3121,191,760,101,94,96,97,98,99,729,
            1503,3121,593,86,3121,110,888,1780,95,2754,
            1477,2056,3121,760,355,94,96,97,98,99,
            316,312,313,314,86,3121,110,3121,3121,95,
            3121,3121,3121,3121,760,102,94,96,97,98,
            99,1731,3121,845,1503,3121,1714,3121,454,3121,
            888,273,3121,888,315,312,313,314,3121,3121,
            893,1503,266,804,476,271,3121,888,86,727,
            110,87,3121,95,1850,115,265,3121,760,118,
            94,96,97,98,99,86,3121,110,3121,3121,
            95,1407,3121,3121,3121,760,114,94,96,97,
            98,99,941,1503,3121,3121,3121,610,258,888,
            3121,1119,1044,3121,1513,3121,3121,3121,3121,1057,
            1503,3121,3121,3121,3121,3121,888,86,185,110,
            3121,3121,95,3121,3121,2808,3121,760,1784,94,
            96,97,98,99,86,3121,110,3121,3121,95,
            1808,3121,3121,3121,760,113,94,96,97,98,
            99,1105,1503,316,312,313,314,3121,888,3121,
            217,864,220,930,222,223,228,3121,1153,1503,
            3121,3121,3121,1423,3121,888,86,3121,110,3121,
            3121,95,3121,3121,3121,3121,760,120,94,96,
            97,98,99,86,3121,110,3121,495,95,3121,
            3121,1823,3121,760,119,94,96,97,98,99,
            315,312,313,314,316,312,313,314,1558,20,
            17,21,18,438,42,727,44,530,509,1272,
            1558,20,17,21,18,438,42,1002,44,530,
            509,1281,3121,3121,3121,3121,273,1504,1253,3121,
            364,312,313,314,3121,3121,3121,268,804,476,
            271,364,312,313,314,3121,3121,3121,134,212,
            1558,20,17,21,18,438,42,3121,40,134,
            212,1674,1606,20,17,21,18,438,1459,144,
            133,135,1687,159,364,312,313,314,3121,3121,
            147,133,135,3121,159,364,312,313,314,3121,
            3121,3121,134,212,1558,20,17,21,18,438,
            42,3121,39,134,212,1718,1606,20,17,21,
            18,438,360,150,133,135,3121,159,364,312,
            313,314,3121,3121,153,133,135,3121,159,3121,
            3121,3121,3121,3121,3121,3121,134,212,1558,20,
            17,21,18,438,42,3121,44,1217,295,20,
            17,21,18,438,42,3121,36,359,133,135,
            3121,159,295,20,17,21,18,438,42,3121,
            36,1558,20,17,21,18,438,42,3121,38,
            3121,3121,245,1558,20,17,21,18,438,42,
            3121,37,3121,3121,3121,3121,246,1558,20,17,
            21,18,438,42,3121,36,1558,20,17,21,
            18,438,42,413,35,3121,3121,3121,3121,3121,
            383,1558,20,17,21,18,438,42,3121,47,
            3121,1558,20,17,21,18,438,42,87,46,
            3121,3121,503,408,3121,3121,196,1558,20,17,
            21,18,438,42,545,45,1414,20,17,21,
            18,438,42,917,43,3121,3121,315,312,313,
            314,3121,2272,413,3121,3121,315,312,313,314,
            383,545,727,3121,3121,1756,3121,3121,596,3121,
            3121,1042,383,3121,315,312,313,314,87,3121,
            3121,3121,503,408,1407,3121,196,3121,545,727,
            87,3121,869,3121,115,3121,3121,3121,615,3121,
            2477,315,312,313,314,315,312,313,314,3121,
            3121,1407,2272,3121,3121,3121,727,3121,1356,3121,
            981,3121,3121,3121,3121,568,3121,610,1086,1359,
            902,315,312,313,314,1356,3121,3121,1407,3121,
            64,2316,315,312,313,314,727,454,315,312,
            313,314,363,989,2090,3121,1769,1679,3121,3121,
            454,3121,1794,727,3121,528,1805,3121,1183,315,
            312,313,314,1850,456,315,312,313,314,315,
            312,313,314,3121,2277,1318,196,3121,3121,1714,
            2420,3121,1714,3121,2481,1714,888,3121,3121,888,
            3121,3121,888,3121,3121,3121,3121,258,3121,3121,
            3121,1581,752,1513,87,3121,3121,87,115,3121,
            87,115,3121,3121,115,3121,3121,3121,3121,3121,
            3121,3121,3121,3121,3121,3121,191,3121,3121,3121,
            3121,3121,3121,3121,3121,3121,3121,3121,3121,1724,
            3121,3121,3121,3121,1120,1613,2056,1689,3121,3121,
            1743,3121,3121,1629,3121,0,1798,32,0,458,
            32,0,3129,1,0,957,128,0,1041,128,
            0,1102,128,0,957,129,0,1041,129,0,
            1102,129,0,957,130,0,1041,130,0,1102,
            130,0,957,184,0,1041,184,0,1102,184,
            0,184,188,0,957,183,0,1041,183,0,
            1102,183,0,183,188,0,957,131,0,1041,
            131,0,1102,131,0,957,132,0,1041,132,
            0,1102,132,0,20,178,0,957,362,0,
            1041,362,0,1102,362,0,1,690,0,957,
            374,0,1041,374,0,1102,374,0,1,957,
            0,1,1041,0,1,1102,0,350,360,0,
            957,252,0,1041,252,0,1102,252,0,8,
            10,0,1,3346,0,1,3357,0,112,2389,
            0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            0,0,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,0,0,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,0,1,65,66,67,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,49,68,
            32,33,34,35,36,37,38,39,40,41,
            42,43,44,45,46,47,86,87,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,68,0,65,66,67,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,0,0,32,33,
            34,35,36,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,0,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,24,25,
            26,99,28,9,10,68,32,33,34,35,
            36,0,0,0,1,2,80,81,5,6,
            7,8,0,11,0,51,52,53,54,55,
            56,57,58,59,60,61,62,0,69,65,
            66,67,0,30,2,3,69,5,24,25,
            26,9,10,11,84,0,14,15,0,1,
            2,3,0,0,0,1,2,3,4,5,
            0,1,30,9,10,11,12,13,14,15,
            16,17,18,19,0,21,22,23,30,31,
            0,49,50,82,24,73,74,75,76,0,
            78,79,0,1,2,63,64,49,6,7,
            8,69,70,71,72,73,74,75,76,0,
            78,79,80,81,82,83,84,85,86,87,
            88,89,90,91,92,93,94,95,96,97,
            0,77,2,3,82,5,83,63,64,9,
            10,11,0,1,14,15,4,0,6,7,
            8,0,0,1,2,0,4,5,3,0,
            30,9,10,11,12,13,14,15,16,17,
            18,19,0,21,22,23,0,30,2,49,
            50,29,73,74,75,76,31,78,79,0,
            0,0,20,63,64,5,6,7,8,69,
            70,71,72,73,74,75,76,48,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,0,1,
            2,3,4,5,0,0,2,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,63,64,0,27,2,29,68,5,
            6,7,8,0,30,37,38,39,40,41,
            42,43,44,45,46,47,0,1,2,3,
            4,5,0,48,30,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,27,0,29,6,7,8,0,
            6,7,8,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,4,5,
            0,0,2,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,48,0,
            0,27,0,29,2,3,6,7,8,0,
            30,37,38,39,40,41,42,43,44,45,
            46,47,0,1,25,3,4,0,6,7,
            8,0,30,31,12,0,1,2,3,0,
            5,6,7,8,63,64,24,25,26,0,
            28,29,0,0,32,33,34,35,36,24,
            25,26,27,28,11,30,31,32,33,34,
            35,36,50,51,52,53,54,55,56,57,
            58,59,60,61,62,0,1,65,66,67,
            0,1,2,3,4,5,0,48,2,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,2,27,0,29,
            6,7,8,84,6,7,8,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            2,3,4,5,0,0,2,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,48,0,0,27,0,29,2,3,
            6,7,8,0,1,37,38,39,40,41,
            42,43,44,45,46,47,0,1,0,3,
            4,0,6,7,8,0,30,31,12,0,
            1,2,3,0,5,6,7,8,63,64,
            24,25,26,0,28,29,13,0,32,33,
            34,35,36,24,25,26,27,28,0,30,
            31,32,33,34,35,36,50,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,1,2,3,4,5,
            0,48,0,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,1,
            20,27,4,29,6,7,8,0,0,0,
            3,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,4,5,80,81,
            48,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,0,27,
            4,29,6,7,8,0,48,50,49,37,
            38,39,40,41,42,43,44,45,46,47,
            0,1,2,3,4,5,68,0,0,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,0,1,48,27,4,29,
            6,7,8,0,1,2,3,37,38,39,
            40,41,42,43,44,45,46,47,0,1,
            0,3,4,0,6,7,8,49,0,1,
            12,0,4,30,31,0,0,6,7,8,
            63,64,24,25,26,0,28,29,20,0,
            32,33,34,35,36,24,25,26,0,28,
            24,25,26,32,33,34,35,36,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,0,37,65,66,67,0,1,2,3,
            4,5,0,0,2,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            0,1,2,27,0,29,6,7,8,0,
            6,7,8,37,38,39,40,41,42,43,
            44,45,46,47,0,1,2,3,4,5,
            0,0,2,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,0,0,
            1,27,3,29,0,24,25,26,0,5,
            0,37,38,39,40,41,42,43,44,45,
            46,47,0,1,2,3,4,5,20,0,
            31,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,0,1,0,27,
            4,29,6,7,8,0,0,0,12,37,
            38,39,40,41,42,43,44,45,46,47,
            24,25,26,0,28,71,72,20,32,33,
            34,35,36,73,74,75,76,0,78,79,
            0,0,2,3,3,0,48,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,65,66,67,0,6,7,8,27,0,
            1,31,0,4,0,30,0,0,6,7,
            8,5,0,24,25,26,0,28,83,20,
            49,32,33,34,35,36,24,25,26,13,
            28,24,25,26,32,33,34,35,36,0,
            51,52,53,54,55,56,57,58,59,60,
            61,62,0,1,2,3,4,5,0,20,
            48,9,10,11,12,13,14,15,16,17,
            18,19,0,21,22,23,0,71,72,0,
            28,0,1,2,3,4,5,0,9,10,
            9,10,11,12,13,14,15,16,17,18,
            19,0,21,22,23,0,0,1,0,28,
            4,6,7,8,6,7,8,30,0,0,
            2,0,1,2,3,4,5,69,0,77,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,69,88,89,90,91,
            92,93,94,95,96,97,0,70,77,0,
            1,5,3,0,1,2,0,4,5,0,
            98,50,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,1,2,
            31,4,5,24,25,26,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,0,1,2,0,4,5,0,0,5,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,0,1,2,20,4,
            5,24,25,26,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,0,
            1,2,0,4,5,3,0,0,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,0,1,2,0,4,5,3,
            0,0,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,0,1,2,
            20,4,5,27,0,49,9,10,11,12,
            13,14,15,16,17,18,19,0,21,22,
            23,0,1,2,0,4,5,3,0,77,
            9,10,11,12,13,14,15,16,17,18,
            19,13,21,22,23,0,1,2,0,4,
            5,27,0,49,9,10,11,12,13,14,
            15,16,17,18,19,48,21,22,23,0,
            1,2,0,4,5,0,0,5,9,10,
            11,12,13,14,15,16,17,18,19,0,
            21,22,23,0,1,2,48,4,5,0,
            0,2,9,10,11,12,13,14,15,16,
            17,18,19,0,21,22,23,0,0,6,
            7,8,0,0,0,2,0,3,6,7,
            8,0,6,7,8,0,1,24,25,26,
            5,28,0,71,72,32,33,34,35,36,
            24,25,26,0,28,31,3,0,32,33,
            34,35,36,6,7,8,0,0,1,3,
            0,4,0,49,2,5,6,7,8,0,
            27,24,25,26,31,28,14,15,0,32,
            33,34,35,36,0,0,2,30,3,0,
            0,6,30,0,0,6,7,8,0,6,
            7,8,0,0,6,7,8,0,0,0,
            3,3,27,0,20,6,7,8,0,0,
            0,3,3,0,68,0,0,70,68,6,
            7,8,70,77,0,9,10,0,31,31,
            6,7,8,6,7,8,27,85,0,31,
            0,3,0,63,64,48,0,49,6,7,
            8,0,49,0,3,63,64,49,49,0,
            1,0,0,4,3,3,0,1,0,31,
            4,0,0,2,2,0,0,2,0,0,
            0,0,31,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,50,50,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3121,5112,1,1614,5081,1,3076,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            423,1,1,1,1,1,1,3130,1,3221,
            72,1,1,1,1,1,1,1476,570,942,
            581,1502,2086,1474,717,1486,1966,1485,1,88,
            3128,1,1,1,1,1,1,1,1,1,
            1,1,1,1,3115,1,1,1,8,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,1028,3378,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3109,3109,3109,3109,3109,1858,1712,3109,3109,
            3109,3109,3109,3109,3109,3109,3109,3109,3109,3109,
            3109,3378,3121,3109,3109,3109,3121,5112,1,3131,
            5081,1,3076,1,1,1,1,1,1,1,
            1,1,1,1,1,1,423,1,1,1,
            1,1,1,3130,1,3221,62,1,1,1,
            1,1,1,1476,570,942,581,1502,2086,1474,
            717,1486,1966,1485,1,3346,2398,1,1,1,
            1,1,1,1,1,1,1,1,1,156,
            70,1,1,1,3121,3132,1935,3121,3133,2697,
            1102,957,1041,2683,2671,2706,2562,3137,2193,2071,
            1396,3134,3135,3136,51,2594,2550,1088,3334,3336,
            3335,2985,3283,2638,1829,3377,3284,3282,3337,3285,
            3281,66,64,267,3346,1883,875,489,252,1102,
            957,1041,59,2141,3121,3288,3293,3292,3290,3291,
            3289,3294,3295,3287,3296,3297,3298,284,810,2763,
            2812,1872,1,702,3133,3133,837,3133,3334,3336,
            3335,3133,3133,3133,2012,3121,3133,3133,1,3346,
            1883,261,67,68,3121,3132,1935,3125,3133,2697,
            323,3445,3133,2683,2671,2706,661,3137,2193,2071,
            1396,3134,3135,3136,54,2594,2550,1088,702,261,
            3121,3133,3133,416,3446,2510,2498,1409,536,3121,
            511,440,1,3346,2398,3133,3133,261,3094,3088,
            3091,3133,3133,3133,3133,3133,3133,3133,3133,61,
            3133,3133,3133,3133,3133,3133,3133,3133,3133,3133,
            3133,3133,3133,3133,3133,3133,3133,3133,3133,3133,
            1,3124,3132,3132,416,3132,1753,627,1698,3132,
            3132,3132,184,3031,3132,3132,3031,270,3028,3022,
            3025,3121,3121,1,1,1,1,1,90,1,
            3132,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,3121,702,993,3132,
            3132,3503,2510,2498,1409,536,90,511,440,352,
            1,3121,423,3132,3132,252,3094,3088,3091,3132,
            3132,3132,3132,3132,3132,3132,3132,2,3132,3132,
            3132,3132,3132,3132,3132,3132,3132,3132,3132,3132,
            3132,3132,3132,3132,3132,3132,3132,3132,3121,5112,
            1,3131,5081,1,269,3121,991,1,1,1,
            1,1,1,1,1,1,1,1,423,1,
            1,1,627,1698,267,3130,2107,3221,3378,252,
            1102,957,1041,3121,702,1476,570,942,581,1502,
            2086,1474,717,1486,1966,1485,3121,5112,1,3131,
            5081,1,3121,1369,702,1,1,1,1,1,
            1,1,1,1,1,1,423,1,1,1,
            1,3346,2398,3130,252,3221,3094,3088,3091,3121,
            1102,957,1041,1476,570,942,581,1502,2086,1474,
            717,1486,1966,1485,3121,5112,1,3131,5081,1,
            221,351,1052,1,1,1,1,1,1,1,
            1,1,1,1,423,1,1,1,1639,340,
            181,3130,1,3221,2107,264,1102,957,1041,3121,
            702,1476,570,942,581,1502,2086,1474,717,1486,
            1966,1485,3121,1,3460,190,1,3121,1,1,
            1,3121,702,264,1,20,178,3064,3064,71,
            3064,178,178,178,627,1698,1,1,1,3121,
            1,3316,3121,65,1,1,1,1,1,178,
            178,178,3064,178,2141,3064,3064,178,178,178,
            178,178,190,1,1,1,1,1,1,1,
            1,1,1,1,1,3121,1751,1,1,1,
            3121,5112,1,3131,5081,1,3121,1434,502,1,
            1,1,1,1,1,1,1,1,1,1,
            423,1,1,1,1,3346,2398,3130,374,3221,
            3094,3088,3091,2012,3085,3079,3082,1476,570,942,
            581,1502,2086,1474,717,1486,1966,1485,3121,5112,
            1,3131,5081,1,3121,58,1448,1,1,1,
            1,1,1,1,1,1,1,1,423,1,
            1,1,1639,3121,372,3130,1,3221,2107,3127,
            1102,957,1041,3121,3358,1476,570,942,581,1502,
            2086,1474,717,1486,1966,1485,3121,1,3121,189,
            1,3121,1,1,1,3121,702,3126,1,350,
            360,360,3097,3121,3097,360,360,360,627,1698,
            1,1,1,3121,1,3316,1085,3121,1,1,
            1,1,1,360,360,360,3097,360,63,360,
            3097,360,360,360,360,360,189,1,1,1,
            1,1,1,1,1,1,1,1,1,3121,
            3121,1,1,1,3121,5112,1,3131,5081,1,
            3121,2206,3121,1,1,1,1,1,1,1,
            1,1,1,1,423,1,1,1,183,3043,
            817,3130,3043,3221,3040,3034,3037,1,3121,255,
            2992,1476,570,942,581,1502,2086,1474,717,1486,
            1966,1485,3121,5112,1,3131,5081,1,875,489,
            2227,1,1,1,1,1,1,1,1,1,
            1,1,423,1,1,1,205,5044,3121,3130,
            5044,3221,1102,957,1041,3121,2269,3128,949,1476,
            570,942,581,1502,2086,1474,717,1486,1966,1485,
            3121,5112,1,3131,5081,1,1515,57,30,1,
            1,1,1,1,1,1,1,1,1,1,
            423,1,1,1,371,5268,2248,3130,5268,3221,
            1102,957,1041,1,3112,1883,3127,1476,570,942,
            581,1502,2086,1474,717,1486,1966,1485,3121,1,
            3121,190,1,3121,1,1,1,675,3121,3132,
            1,129,3133,702,3126,3121,247,3010,3004,3007,
            627,1698,1,1,1,3121,1,3316,1053,3121,
            1,1,1,1,1,3334,3336,3335,3121,3283,
            3334,3336,3335,3284,3282,3337,3285,3281,190,1,
            1,1,1,1,1,1,1,1,1,1,
            1,3121,1738,1,1,1,3121,5112,1,3131,
            5081,1,3121,3121,2785,1,1,1,1,1,
            1,1,1,1,1,1,423,1,1,1,
            252,3346,2398,3130,375,3221,1102,957,1041,3121,
            1102,957,1041,1476,570,942,581,1502,2086,1474,
            717,1486,1966,1485,3121,5112,1,3131,5081,1,
            3121,248,459,1,1,1,1,1,1,1,
            1,1,1,1,423,1,1,1,3121,3121,
            1530,3130,3127,3221,48,1,1,1,3121,2747,
            60,1476,570,942,581,1502,2086,1474,717,1486,
            1966,1485,3121,5112,1,3131,5081,1,1264,3121,
            3126,1,1,1,1,1,1,1,1,1,
            1,1,423,1,1,1,3121,3132,3121,3130,
            3133,3221,1102,957,1041,69,3121,3121,2606,1476,
            570,942,581,1502,2086,1474,717,1486,1966,1485,
            3334,3336,3335,3121,3283,2731,2721,1291,3284,3282,
            3337,3285,3281,2510,2498,1409,536,3121,511,440,
            3121,3121,1522,3127,3131,219,3499,3288,3293,3292,
            3290,3291,3289,3294,3295,3287,3296,3297,3298,128,
            3121,2763,2812,1872,3121,3001,2995,2998,3130,3121,
            3132,3126,130,3133,3121,702,50,249,3019,3013,
            3016,2747,200,3334,3336,3335,345,3283,1753,1129,
            1934,3284,3282,3337,3285,3281,3334,3336,3335,1779,
            3283,1,1,1,3284,3282,3337,3285,3281,3121,
            3288,3293,3292,3290,3291,3289,3294,3295,3287,3296,
            3297,3298,1,3132,1935,3125,3133,2648,42,1468,
            1665,2683,2671,2706,661,3137,2193,2071,1396,3134,
            3135,3136,112,2594,2550,1088,210,2731,2721,53,
            915,3121,3132,1935,3125,3133,2662,290,2638,1829,
            2683,2671,2706,661,3137,2193,2071,1396,3134,3135,
            3136,3121,2594,2550,1088,252,3121,3132,182,1488,
            3133,3106,3100,3103,1102,957,1041,1565,3121,3121,
            614,1,3874,1935,29,3776,2697,1338,3121,3124,
            2683,2671,2706,661,3137,2193,2071,1396,3134,3135,
            3136,5346,2594,2550,1088,1589,1311,1284,1257,1230,
            1203,1149,1176,1122,1095,1061,3121,1173,3124,3121,
            1426,2838,3127,3121,3132,1935,3121,3133,2697,250,
            3118,29,2683,2671,2706,661,3137,2193,2071,1396,
            3134,3135,3136,817,2594,2550,1088,1,3874,1935,
            3126,3776,2697,3334,3336,3335,2683,2671,2706,661,
            3137,2193,2071,1396,3134,3135,3136,5346,2594,2550,
            1088,376,3132,1935,3121,3133,2697,251,361,2855,
            2683,2671,2706,661,3137,2193,2071,1396,3134,3135,
            3136,5346,2594,2550,1088,3121,3132,1935,817,3133,
            2697,3334,3336,3335,2683,2671,2706,661,3137,2193,
            2071,1396,3134,3135,3136,5346,2594,2550,1088,3121,
            3132,1935,3121,3133,2697,3125,30,3121,2683,2671,
            2706,661,3137,2193,2071,1396,3134,3135,3136,5346,
            2594,2550,1088,1,3874,1935,1,3776,2697,3131,
            188,3121,2683,2671,2706,661,3137,2193,2071,1396,
            3134,3135,3136,5346,2594,2550,1088,3121,3132,1935,
            205,3133,2697,3130,206,3150,2683,2671,2706,661,
            3137,2193,2071,1396,3134,3135,3136,1,2594,2550,
            1088,3121,3132,2713,3121,3133,2697,3131,3121,3124,
            2683,2671,2706,661,3137,2193,2071,1396,3134,3135,
            3136,1779,2594,2550,1088,3121,3132,2773,1,3133,
            2697,3130,3121,5350,2683,2671,2706,661,3137,2193,
            2071,1396,3134,3135,3136,3133,2594,2550,1088,1,
            3132,1935,49,3133,2697,3121,3121,2747,2683,2671,
            2706,661,3137,2193,2071,1396,3134,3135,3136,3121,
            2594,2550,1088,329,3132,1935,3132,3133,2697,3121,
            3121,1774,2683,2671,2706,661,3137,2193,2071,1396,
            3134,3135,3136,131,2594,2550,1088,3121,3121,3052,
            3046,3049,373,334,3121,1192,132,3127,1102,957,
            1041,3121,3061,3055,3058,3121,1711,3334,3336,3335,
            1800,3283,3121,2731,2721,3284,3282,3337,3285,3281,
            3334,3336,3335,1,3283,3126,116,362,3284,3282,
            3337,3285,3281,3073,3067,3070,3121,3121,3132,3125,
            1,3133,32,699,2986,252,3094,3088,3091,3121,
            116,3334,3336,3335,116,3283,3147,3148,3121,3284,
            3282,3337,3285,3281,3121,1,738,1539,116,158,
            56,3076,2989,366,375,1102,957,1041,365,1102,
            957,1041,55,3121,1102,957,1041,3121,3121,367,
            3127,3127,116,343,371,1102,957,1041,3121,3121,
            3121,3127,3131,199,1615,3121,52,1025,3378,1102,
            957,1041,598,3124,368,2638,1829,369,3126,3126,
            1102,957,1041,1102,957,1041,3130,578,3121,3126,
            3121,3127,370,627,1698,646,3121,1001,1102,957,
            1041,1,700,3121,3127,627,1698,1808,1956,207,
            3132,3121,283,3133,3129,1156,206,870,3121,3126,
            870,321,3121,772,1908,346,3121,1790,3121,3121,
            3121,3121,3126,3121,3121,3121,3121,3121,3121,3121,
            3121,3121,3121,3121,3121,3121,3121,3121,3121,3121,
            3121,3121,3121,3121,3121,3121,3121,3121,3121,3121,
            3121,3128,1156
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            192,1,478,3,478,478,478,478,478,478,
            478,478,478,478,478,11,450,238,235,242,
            240,250,248,252,251,254,253,224,478,450,
            388,388,160,478,178,178,178,63,345,329,
            478,478,478,478,478,478,478,478,478,478,
            478,478,478,478,478,478,478,478,396,478,
            478,478,478,478,478,478,478,478,478,478,
            478,478,178,178,121,76,67,99,531,182,
            181,568,600,600,600,580,124,580,124,124,
            580,124,580,16,580,360,478,330,235,235,
            240,240,240,240,240,240,238,238,248,242,
            242,251,250,437,437,253,252,94,74,63,
            70,58,475,121,564,103,178,602,534,269,
            177,529,92,124,388,385,388,92,388,124,
            478,20,450,329,510,266,266,388,600,600,
            497,600,600,266,437,478,437,593,96,478,
            478,74,70,58,564,121,102,99,178,61,
            360,446,536,321,177,176,178,126,273,94,
            311,178,327,266,266,343,478,391,478,478,
            497,437,393,497,595,600,313,154,304,94,
            58,58,478,478,121,103,531,213,212,67,
            536,178,446,445,177,94,126,273,311,311,
            416,510,266,178,600,178,178,497,478,497,
            265,216,595,595,67,219,131,304,72,222,
            136,388,478,437,307,304,74,58,564,121,
            121,178,602,534,61,321,178,159,178,273,
            304,592,273,311,313,439,313,266,510,497,
            478,497,497,595,216,216,595,76,7,444,
            6,76,317,388,478,74,564,58,536,446,
            273,431,313,304,478,388,160,266,178,328,
            216,131,266,494,529,478,121,313,58,178,
            446,159,304,265,478,261,431,262,304,178,
            160,266,497,389,178,121,304,389,431,478,
            262,262,497,178,178,187,262,497
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            99,0,77,27,99,49,31,3,48,0,
            48,68,77,50,99,70,85,14,15,35,
            28,36,34,33,32,11,9,10,71,72,
            63,64,73,74,75,76,80,81,82,83,
            84,86,87,69,88,89,90,91,92,93,
            94,95,96,97,78,79,27,24,26,25,
            49,1,3,31,2,30,6,8,7,5,
            0,3,50,30,70,14,15,11,5,9,
            10,21,22,16,23,12,2,17,18,19,
            13,1,4,20,0,2,25,0,24,26,
            25,28,14,15,11,5,9,10,21,22,
            16,23,12,2,1,4,17,18,19,13,
            77,3,0,1,4,20,6,8,7,0,
            3,48,31,13,0,69,20,14,15,11,
            5,9,10,21,22,16,23,12,2,17,
            18,19,13,1,4,30,70,0,49,16,
            17,18,19,13,4,14,15,11,5,9,
            10,21,22,12,23,2,1,31,3,0,
            2,3,49,31,30,0,3,49,50,27,
            0,16,17,18,19,13,1,4,2,14,
            15,11,5,9,10,21,22,12,23,29,
            0,2,48,31,30,6,8,7,3,49,
            27,69,0,69,88,89,90,91,92,94,
            93,95,96,97,5,71,72,9,10,64,
            63,73,74,75,76,78,79,80,81,11,
            82,83,84,68,77,31,50,99,86,87,
            48,6,8,7,49,27,3,0,31,3,
            2,0,32,51,24,52,65,33,53,34,
            54,55,35,26,56,57,28,66,36,67,
            58,59,25,60,61,62,1,4,12,7,
            8,6,29,3,50,0,69,30,70,0,
            1,4,3,50,49,0,77,3,68,0,
            3,49,31,1,24,0,31,98,50,39,
            41,20,45,47,42,37,43,44,40,38,
            46,29,3,27,2,17,18,19,13,14,
            15,11,5,9,10,21,22,16,23,12,
            65,66,67,59,51,56,54,55,53,52,
            57,58,60,61,62,36,33,28,32,35,
            24,26,25,34,6,8,7,4,1,0,
            37,0,48,68,0,16,17,18,19,13,
            1,4,2,14,15,11,5,9,10,21,
            22,12,23,48,0,32,24,33,34,35,
            26,28,36,25,3,30,49,31,27,20,
            5,1,2,6,8,7,48,0,3,49,
            50,69,0,48,2,3,31,49,0,32,
            51,52,65,33,53,34,54,55,35,56,
            57,28,66,36,67,58,59,60,61,62,
            7,8,6,20,24,26,25,2,17,18,
            19,13,4,14,15,11,9,10,21,22,
            16,23,12,1,5,0,39,41,20,45,
            47,42,37,43,44,40,38,46,29,16,
            17,18,19,1,4,2,14,15,11,5,
            9,10,21,22,12,23,27,3,13,0,
            5,2,30,31,3,32,51,52,65,33,
            53,34,54,55,35,56,57,28,66,36,
            67,58,59,60,61,62,1,4,12,7,
            8,6,68,24,26,25,0,59,51,56,
            54,55,53,52,57,58,60,61,62,30,
            49,31,36,33,28,32,35,24,26,25,
            34,48,27,3,5,1,7,8,6,2,
            0,5,32,51,24,52,65,33,53,34,
            54,55,35,26,56,57,28,66,36,67,
            58,59,25,60,61,62,1,4,12,68,
            6,8,7,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            59,24,45,24,45,45,45,45,45,45,
            45,45,45,45,45,24,119,24,24,24,
            24,24,24,24,24,24,24,24,45,119,
            32,32,109,121,11,11,11,143,1,13,
            45,45,45,45,45,45,45,45,45,45,
            45,45,45,45,45,45,45,45,100,45,
            45,45,45,45,45,45,45,45,45,45,
            45,45,11,11,51,45,149,49,142,27,
            27,79,24,24,24,80,38,80,38,38,
            80,38,80,24,80,73,45,87,24,24,
            24,24,24,24,24,24,24,24,24,24,
            24,24,24,24,24,24,24,24,117,156,
            24,131,62,51,40,50,11,147,68,11,
            29,24,8,131,8,131,8,8,8,131,
            45,24,119,93,124,126,126,8,24,24,
            137,24,24,126,24,65,24,125,47,45,
            45,43,24,38,40,51,50,25,11,113,
            16,24,97,85,10,24,11,38,117,24,
            117,11,24,126,126,160,121,24,121,121,
            137,24,24,137,104,24,53,82,117,24,
            38,117,45,45,51,50,112,27,27,149,
            97,11,11,24,11,24,131,152,117,8,
            24,162,126,11,24,11,11,137,45,137,
            126,38,128,115,149,24,55,14,42,24,
            44,8,45,24,71,14,117,117,40,51,
            51,11,147,68,34,85,11,45,11,117,
            14,125,133,8,53,24,24,126,162,137,
            121,137,137,104,131,38,36,44,11,24,
            24,44,51,8,45,43,40,25,165,11,
            152,104,53,14,45,8,162,126,11,24,
            131,55,126,24,55,45,51,53,25,11,
            11,45,14,126,45,24,128,38,14,11,
            162,126,137,24,11,51,14,24,104,45,
            38,131,137,11,11,57,131,137
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            99,113,97,96,81,95,94,1,0,111,
            24,0,7,51,0,99,113,98,97,96,
            81,95,94,0,31,0,49,0,132,24,
            0,90,0,62,61,45,43,28,0,72,
            0,86,7,64,5,0,133,0,7,5,
            34,0,68,0,88,0,125,0,7,114,
            0,5,7,0,5,135,0,24,7,0,
            129,0,81,77,78,79,80,89,69,52,
            0,1,136,0,109,0,7,33,1,35,
            117,0,35,1,51,93,7,33,0,7,
            29,115,0,7,45,43,28,0,7,116,
            0,24,62,61,43,45,7,0,59,30,
            7,29,0,29,7,27,0,43,45,7,
            13,0,7,59,83,0,1,35,7,36,
            0,24,61,62,7,0,7,33,28,66,
            0,103,7,59,0,62,61,28,0,33,
            76,7,65,0,123,7,33,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            87,2,89,88,9,99,97,98,10,11,
            8,95,86,6,7,70,83,84,85,3,
            12,13,96,50,78,66,94,71,100,1,
            92,46,57,62,65,74,79,47,48,51,
            52,53,59,60,61,67,73,29,42,93,
            49,54,58,63,64,68,69,76,77,80,
            81,82,16,17,56,72,75,30,31,4,
            14,15,18,19,20,21,91,43,44,22,
            23,24,25,26,5,27,28,32,33,34,
            35,36,37,38,39,40,41,55,101,90
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            107,0,0,0,109,113,0,114,115,116,
            117,118,182,0,0,0,119,120,121,122,
            123,124,0,104,0,125,106,183,108,130,
            142,0,134,103,126,129,0,0,0,0,
            0,162,164,0,165,0,0,0,166,0,
            105,141,0,0,152,0,128,151,156,175,
            176,177,0,0,0,163,172,0,144,0,
            167,170,171,174,111,133,145,146,147,148,
            153,0,155,159,161,178,0,187,190,110,
            112,127,132,136,137,138,139,140,143,149,
            150,0,154,158,0,160,169,0,184,0,
            186,0,189,102,0,0,131,135,0,0,
            157,0,168,173,0,179,180,0,181,0,
            0,185,0,0,188,191,0,0,0,0,
            0,0,0,0,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            178,236,406,315,198,295,103,129,135,264,
            77,344,366,323,1,86,119,145,163,63,
            244,305,35,59,91,141,215,280,386,421,
            425,340,362,375,393,375,329,15,27,56,
            8,8,95,98,150,173,98,225,230,233,
            292,429,50,71,111,219,284,390,400,8,
            111,254,188,353,188,254,400,20,20,41,
            211,41,41,41,41,41,290,384,20,20,
            45,124,153,124,153,153
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            186,186,186,302,186,302,109,6,6,186,
            83,350,372,310,6,39,109,6,39,68,
            249,310,39,39,39,6,213,213,186,39,
            6,302,302,302,397,379,333,18,18,39,
            6,6,39,101,6,39,176,228,228,228,
            213,39,53,74,126,222,287,53,403,11,
            114,249,205,356,191,257,414,25,33,43,
            213,270,272,274,276,278,213,213,22,30,
            47,126,160,114,155,168
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            79,77,5,40,79,40,66,49,49,77,
            58,40,39,40,137,63,66,49,48,14,
            77,40,89,108,63,49,83,76,30,5,
            5,40,39,39,23,39,40,104,101,3,
            129,128,61,74,49,45,55,78,78,78,
            41,3,37,86,66,83,76,37,8,137,
            66,77,79,40,79,77,5,104,101,113,
            83,98,97,96,95,94,76,38,104,101,
            135,66,48,66,46,48
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            50,50,50,31,50,31,24,77,77,50,
            50,31,98,27,77,31,24,77,31,31,
            20,27,31,31,31,77,27,27,50,31,
            77,31,31,31,48,31,27,7,7,31,
            77,77,31,2,77,31,1,1,1,1,
            27,31,48,69,5,1,1,48,31,68,
            5,20,20,37,1,1,31,1,1,12,
            27,1,65,66,66,59,27,27,1,1,
            68,5,2,5,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            33,33,109,95,33,95,75,81,81,33,
            176,95,95,95,10,85,75,81,15,37,
            33,95,33,12,85,81,6,29,92,109,
            109,95,95,95,145,95,95,1,24,109,
            4,10,85,87,81,15,17,33,33,33,
            95,109,95,179,75,6,29,95,116,10,
            75,33,33,95,33,33,109,1,24,34,
            6,34,34,34,34,34,29,95,1,24,
            27,75,15,75,15,15
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            157,68,157,30,0,103,0,157,30,0,
            30,128,103,0,184,128,0,183,0,128,
            0,159,183,0,159,0,155,128,0,152,
            183,0,152,0,175,2,12,0,104,0,
            199,0,190,0,157,0,30,128,0,235,
            39,0,29,129,0,130,2,0,231,2,
            209,0,230,2,2,7,0,104,104,0,
            226,107,0,31,151,0,168,191,107,20,
            164,0,105,0,0,171,107,2,161,0,
            171,107,2,0,174,2,0,166,107,0,
            175,0,107,150,5,150,166,0,170,0,
            150,166,0,9,0,0,170,0,107,150,
            5,150,0,150,0,9,0,0,126,28,
            207,107,30,0,126,207,107,28,30,0,
            126,28,30,0,126,207,107,30,0,126,
            30,0,145,0,2,0,168,104,0,2,
            104,0,171,107,2,145,0,2,0,167,
            104,0,155,2,0,162,0,168,205,107,
            20,101,222,65,0,105,0,222,65,0,
            107,3,0,0,0,105,0,168,205,107,
            20,222,65,0,3,0,0,0,105,0,
            159,0,106,0,221,107,159,0,107,159,
            0,157,106,0,182,65,0,107,0,182,
            67,0,182,66,0,202,107,20,220,101,
            219,181,0,220,101,219,181,0,3,0,
            0,105,0,219,181,0,107,0,3,0,
            0,105,0,202,107,20,219,181,0,148,
            0,147,0,146,0,145,0,144,0,218,
            107,133,0,107,133,0,135,106,0,133,
            0,129,46,0,165,127,165,176,2,43,
            0,104,129,0,165,176,2,43,0,106,
            0,104,129,0,165,127,165,127,165,2,
            43,0,165,127,165,2,43,0,165,2,
            43,0,106,0,106,0,104,129,0,129,
            2,37,0,129,2,37,136,42,0,104,
            106,0,136,42,0,79,2,108,104,106,
            0,129,2,47,0,136,124,129,2,45,
            0,55,129,0,129,2,45,0,104,129,
            55,129,0,135,0,217,107,20,0,157,
            39,0,129,87,122,0,29,125,0,175,
            2,0,104,114,0,168,191,107,20,124,
            175,2,0,104,3,0,112,0,105,0,
            216,2,105,0,129,30,105,0,129,2,
            0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1956,1797,0,1108,0,2873,2056,2178,0,1427,
            0,699,1522,0,2090,610,1956,2036,1797,2398,
            2054,1883,1850,1934,1773,0,942,0,2785,1709,
            1690,0,1352,454,383,0,2481,2420,2886,1956,
            2882,2036,2277,1797,2090,2876,2208,1934,610,2054,
            1778,1679,2855,1773,2849,454,2838,1042,981,786,
            727,2477,1352,2605,2572,2763,2561,2812,1872,2528,
            716,2517,2148,383,2311,2808,2781,2159,2754,0,
            930,864,804,476,610,2477,1883,1850,2107,2272,
            0,2773,2713,1935,2448,2431,2389,2372,2330,2313,
            2269,2248,2227,2206,2086,1709,1690,0,2606,2562,
            2193,2071,1396,1088,661,2662,2648,2756,2012,1858,
            416,1753,875,489,2141,1698,627,2510,2498,1409,
            536,511,440,2747,2731,2721,2638,1829,2706,2697,
            2683,2671,2594,2550,1665,1639,1001,1615,1589,1565,
            772,1539,1515,1488,1461,966,1434,1369,942,915,
            702,1338,1311,1284,1257,1230,1203,1176,1149,1122,
            1095,1061,383,1028,888,837,810,745,583,675,
            554,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,214,107,192,12,23,16,22,21,10,
            9,5,11,15,14,105,2,110,109,112,
            111,118,117,120,119,122,121,106,49,2,
            85,70,2,30,130,175,129,159,107,20,
            10,9,72,71,5,79,78,76,75,74,
            73,63,64,11,81,80,83,82,87,86,
            84,97,96,95,93,94,92,91,90,89,
            88,69,175,216,129,124,107,30,2,162,
            161,194,7,8,6,195,181,196,67,66,
            197,65,198,101,213,199,12,107,109,109,
            111,111,111,111,111,111,110,110,117,112,
            112,119,118,215,129,121,120,124,20,166,
            150,128,28,126,107,5,174,107,2,2,
            2,2,219,128,182,128,182,222,182,128,
            12,106,2,217,46,38,40,44,43,37,
            42,47,45,135,41,39,101,133,6,48,
            48,107,150,5,107,126,207,172,171,133,
            107,173,107,2,232,1,13,101,20,101,
            20,175,3,129,101,2,2,136,2,2,
            48,235,157,48,107,233,191,107,20,164,
            5,150,207,28,126,5,2,143,145,107,
            49,171,230,209,2,220,128,107,20,107,
            124,176,165,129,37,129,129,48,68,48,
            218,155,128,2,107,201,2,168,49,226,
            236,70,30,101,227,107,20,150,107,126,
            126,155,107,2,166,49,124,2,1,20,
            202,159,203,107,205,101,206,165,127,124,
            2,124,124,49,128,155,166,69,234,13,
            188,69,157,70,30,107,107,172,107,231,
            107,107,205,168,69,49,127,165,129,136,
            128,48,124,2,49,68,157,191,172,171,
            223,49,202,221,48,155,128,184,168,165,
            127,124,98,5,1,157,168,49,49,48,
            184,128,124,165,1,151,128,124
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            ">?",
            "<?",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "no_sizeof_type_name_start",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "identifier_list",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "extended_asm_param",
            "case_range_expression",
            "typeof_declaration_specifiers",
            "typeof_type_specifier",
            "field_name_designator"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 85,
           SCOPE_SIZE        = 86,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 338,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3503,
           MAX_LA            = 2147483647,
           NUM_RULES         = 382,
           NUM_NONTERMINALS  = 146,
           NUM_SYMBOLS       = 246,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 844,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 99,
           EOLT_SYMBOL       = 99,
           ACCEPT_ACTION     = 2985,
           ERROR_ACTION      = 3121;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
