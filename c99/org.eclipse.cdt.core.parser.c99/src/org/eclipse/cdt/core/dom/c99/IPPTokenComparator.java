/*******************************************************************************
 * Copyright (c) 2006, 2007 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.cdt.core.dom.c99;

import org.eclipse.cdt.core.dom.parser.c99.PPToken;

/**
 * Interface that specifies preprocessor tokens and comparator objects
 * that the preprocessor will use to interpret regular tokens
 * as preprocessor tokens.
 * 
 * @author Mike Kucera
 */
public interface IPPTokenComparator<TKN> {
	
	
	/**
	 * Kind codes for tokens that are generated by the preprocessor.
	 * 
	 * The preprocessor needs to generate certain types of tokens
	 * (for example when using the ## operator), these token kinds
	 * that can be generated are listed here.
	 */
	public static final int 
		KIND_IDENTIFIER = 0,
		KIND_COMPLETION = 1,
		KIND_END_OF_COMPLETION = 2,
		KIND_INTEGER = 3,
		KIND_STRINGLIT = 4,
		KIND_INVALID = 5,
		KIND_PLACEMARKER = 6;
		
	
	/**
	 * Returns the PP token kind for the given token.
	 * 
	 * Precondition: token cannot be null.
	 * 
	 */
	public PPToken getKind(TKN token);
	
	
	/**
	 * Returns the specific parser token kind that corresponds
	 * to the given kind code. The kind codes are listed as static
	 * fields of this class.
	 */
	public TKN createToken(int tokenToMake, int startOffset, int endOffset, String image);
	
	
	/**
	 * Creates a clone of the given token.
	 * 
	 * Used when a macro is invoked. 
	 */
	public TKN cloneToken(TKN token);
	
	
	public void setStartOffset(TKN token, int offset);
	
	public void setEndOffset(TKN token, int offset);
	
	public int getStartOffset(TKN token);
	
	public int getEndOffset(TKN token);
}
