//!ExtractConstantInt
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@A.h
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
	void bar();
};

#endif /*A_H_*/


//=
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
	void bar();
    static const int theAnswer = 42;
};

#endif /*A_H_*/


//@A.cpp
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return /*$*/42/*$$*/; //Hallo
}

void A::bar()
{
	int a = 42;
	int b = 42;
}

//=
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return theAnswer; //Hallo
}

void A::bar()
{
	int a = theAnswer;
	int b = theAnswer;
}

//!ExtractConstantInt 2
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@A.h
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
	void bar();
};

#endif /*A_H_*/


//=
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
	void bar();
    static const int theAnswer = 42;
};

#endif /*A_H_*/


//@A.cpp
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	//Hallo
	return /*$*/42/*$$*/;
}

void A::bar()
{
	int a = 42;
	int b = 42;
}

//=
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	//Hallo
	return theAnswer;
}

void A::bar()
{
	int a = theAnswer;
	int b = theAnswer;
}

//!ExtractConstantFloat
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@A.h
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	float foo();
	void bar();
};

#endif /*A_H_*/


//=
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	float foo();
	void bar();
    static const float theAnswer = 42.0;
};

#endif /*A_H_*/


//@A.cpp
#include "A.h"

A::A()
{
}

A::~A()
{
}

float A::foo()
{
	return /*$*/42.0/*$$*/;
}

void A::bar()
{
	float a = 42.0;
	float b = 42.0;
}

//=
#include "A.h"

A::A()
{
}

A::~A()
{
}

float A::foo()
{
	return theAnswer;
}

void A::bar()
{
	float a = theAnswer;
	float b = theAnswer;
}

//!ExtractConstantStaticInt
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@A.h
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
	static const int a = 42;
};

#endif /*A_H_*/

//=
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
	static const int a = 42;
};

#endif /*A_H_*/

//@A.cpp
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return 42;
}

int bar()
{
	return /*$*/42/*$$*/;
}


//=
#include "A.h"

namespace 
{
    const int theAnswer = 42;
}
A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return theAnswer;
}

int bar()
{
	return theAnswer;
}


//!replaceNumberProtected
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@.config
visibility=protected
//@A.h
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
};

#endif /*A_H_*/

//=
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
protected:
    static const int theAnswer = 42;
};

#endif /*A_H_*/

//@A.cpp
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return /*$*/42/*$$*/;
}

//=
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return theAnswer;
}

//!replaceNumberPrivate
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@.config
visibility=private
//@A.h
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
};

#endif /*A_H_*/

//=
#ifndef A_H_
#define A_H_

class A
{
public:
	A();
	virtual ~A();
	int foo();
private:
    static const int theAnswer = 42;
};

#endif /*A_H_*/

//@A.cpp
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return /*$*/42/*$$*/;
}

//=
#include "A.h"

A::A()
{
}

A::~A()
{
}

int A::foo()
{
	return theAnswer;
}

//!Bug 246062 [Refactoring] NPE extracting a constant from an inlined method
//#org.eclipse.cdt.ui.tests.refactoring.extractconstant.ExtractConstantRefactoringTest
//@.config
filename=A.h
//@A.h
class X {
	void method() {
		int a= /*$*/42/*$$*/;
	}
};

//=
class X {
	void method() {
		int a= theAnswer;
    }

public:
    static const int theAnswer = 42;
};

