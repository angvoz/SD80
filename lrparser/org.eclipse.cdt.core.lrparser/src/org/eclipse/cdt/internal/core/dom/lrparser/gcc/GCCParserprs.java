/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCParserprs implements lpg.lpgjavaruntime.ParseTable, GCCParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,4,
            4,3,3,2,2,8,1,0,1,1,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,6,8,0,0,1,1,3,3,3,
            0,1,0,1,2,4,2,1,1,1,
            3,1,1,2,3,7,8,0,1,0,
            1,3,1,3,1,1,1,1,1,1,
            3,1,1,1,1,1,3,1,2,2,
            1,5,3,1,3,5,1,3,1,3,
            2,4,3,5,4,6,6,3,5,1,
            2,3,4,5,0,1,2,1,3,1,
            1,3,2,1,1,1,1,2,1,2,
            3,1,1,1,3,1,2,2,2,3,
            4,5,1,7,3,0,0,1,1,3,
            3,4,1,1,2,3,2,3,2,1,
            0,1,2,1,1,1,1,1,2,4,
            3,6,2,4,1,1,1,1,2,6,
            3,1,3,1,4,0,1,1,1,3,
            1,0,4,3,1,2,1,3,4,4,
            6,1,0,1,3,1,3,0,1,4,
            5,1,1,2,2,3,2,2,3,1,
            1,1,1,1,2,5,-101,-50,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-2,0,0,
            -8,0,0,-7,-156,0,0,0,-225,-10,
            0,0,0,0,0,0,0,0,-5,0,
            -28,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-86,0,0,-4,0,-11,
            -107,0,0,-12,0,-49,0,0,0,0,
            0,-24,0,0,0,0,0,-25,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-158,0,0,-96,0,-205,
            0,-221,-31,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-140,0,
            -115,0,-333,-3,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-48,0,
            -41,0,0,0,0,0,0,0,0,0,
            0,0,-222,0,0,0,0,0,0,0,
            0,0,-309,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-220,0,0,0,
            0,0,0,0,0,0,0,-53,0,0,
            0,0,0,0,0,0,0,0,0,-47,
            0,0,0,0,0,0,0,0,-283,0,
            0,0,0,0,0,0,0,0,0,-32,
            0,-45,0,0,0,0,0,0,0,0,
            0,0,-66,0,0,-168,-318,0,0,0,
            0,0,0,0,0,0,0,-159,0,0,
            0,0,0,0,0,0,0,-30,0,0,
            0,-214,0,0,0,0,0,0,0,0,
            0,-173,0,0,-54,0,0,0,0,0,
            -170,0,0,0,0,0,0,0,0,0,
            0,0,0,-111,0,0,0,0,0,0,
            0,-29,0,0,0,0,0,0,-56,0,
            -58,-321,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-177,0,-73,0,
            0,0,0,0,0,0,0,0,0,0,
            -244,0,0,0,0,0,0,0,0,-59,
            0,0,-27,-215,0,0,0,0,0,0,
            0,0,0,0,0,-68,0,0,0,0,
            0,-246,0,-79,0,0,0,0,0,0,
            0,0,0,0,-181,0,-180,0,0,0,
            0,0,0,0,-63,0,0,0,-186,0,
            0,0,-46,-67,-334,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-13,0,0,0,0,
            0,-34,-81,0,-69,0,0,0,0,-308,
            -26,0,0,0,0,0,0,-70,0,0,
            0,0,0,0,0,0,0,-216,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -83,0,-250,0,0,0,0,0,-249,0,
            0,0,0,-72,0,0,0,0,0,-36,
            0,0,-113,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-62,0,-223,
            -183,0,0,0,0,0,0,0,0,0,
            0,0,-43,0,0,0,0,0,0,-100,
            0,-118,0,0,0,0,0,0,0,0,
            0,0,-153,0,0,0,0,0,0,0,
            0,0,-90,0,-332,0,0,0,0,0,
            0,0,0,0,0,0,-84,-185,0,0,
            0,0,0,0,0,0,0,-91,-57,-230,
            0,0,0,0,0,0,0,0,-93,0,
            0,0,-94,0,-97,-37,-108,0,-290,0,
            0,0,0,0,0,0,0,0,0,-279,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-226,-174,0,0,-98,
            0,0,0,0,0,0,0,0,0,-38,
            -82,0,0,0,0,0,0,0,0,0,
            0,0,0,-187,-203,0,0,0,0,0,
            0,0,0,0,0,-87,0,0,0,0,
            0,0,0,0,-231,0,0,0,-188,0,
            0,0,0,0,0,0,0,0,0,0,
            -88,-95,0,0,0,0,0,0,0,-247,
            0,0,-99,-189,0,0,0,0,0,0,
            0,0,0,0,0,0,-103,0,0,0,
            0,0,0,0,0,0,0,-291,-190,0,
            0,0,0,0,0,0,0,0,-89,-110,
            0,-204,0,0,0,0,0,0,0,0,
            0,0,0,-191,0,0,0,0,0,0,
            0,0,0,-144,0,0,-152,0,0,0,
            0,0,0,0,-297,0,0,0,-192,0,
            0,0,0,0,0,0,0,0,-227,-154,
            0,-105,0,0,0,0,0,0,0,-320,
            0,0,-340,-193,0,0,0,0,0,0,
            0,0,0,0,-172,0,-116,0,0,0,
            0,0,0,0,0,0,0,-127,-194,0,
            0,0,0,0,0,0,0,0,-128,0,
            0,-235,0,0,0,0,0,0,0,0,
            0,0,0,-195,0,0,0,0,0,0,
            0,0,0,-232,0,0,-284,0,0,0,
            0,0,0,0,-129,0,0,-130,-196,0,
            0,0,0,0,0,0,0,0,-131,-292,
            0,-132,0,0,0,0,0,0,0,-133,
            0,0,-134,-197,0,0,0,0,0,0,
            0,0,0,0,-300,0,-61,0,0,0,
            0,0,0,0,-326,0,0,-135,-242,0,
            0,0,0,0,0,0,0,0,-324,-311,
            -329,-136,0,0,0,0,0,0,0,-137,
            0,0,-141,-248,0,0,0,0,0,0,
            0,0,0,0,0,0,-64,0,0,0,
            0,0,0,0,-336,0,0,-252,-145,0,
            0,0,0,0,0,0,0,0,-147,-148,
            -149,0,0,0,0,0,0,0,-151,0,
            0,0,-253,0,0,0,0,0,0,0,
            0,0,0,-157,-162,-165,0,0,0,0,
            0,0,0,-282,0,0,-166,-102,0,0,
            0,-167,-104,0,0,0,0,-178,-217,-179,
            0,0,0,0,0,0,0,0,0,-237,
            0,0,0,0,-251,0,-263,0,0,0,
            -119,-264,0,0,0,0,0,0,0,0,
            0,0,0,-265,-266,0,-293,-114,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-267,0,0,
            -315,-184,0,0,0,0,0,0,0,0,
            -268,-269,-270,-138,0,0,0,0,0,0,
            0,0,0,0,-325,-254,0,0,0,0,
            0,0,0,0,0,0,-271,-150,0,0,
            0,0,0,0,0,0,0,0,-337,-272,
            0,0,0,0,0,0,0,0,0,0,
            -273,-169,0,0,0,0,0,0,0,0,
            0,0,-341,-274,0,0,0,0,0,0,
            0,0,0,0,-275,-262,0,0,0,0,
            0,0,0,-21,0,0,-276,-171,-182,-277,
            -278,-60,0,0,0,0,0,0,-218,-294,
            0,0,0,0,0,0,0,0,0,0,
            -234,0,0,0,0,0,0,-303,0,0,
            0,0,-198,-298,0,-304,-199,-233,0,0,
            0,0,0,0,0,0,-313,0,0,0,
            0,-322,0,0,0,-85,0,0,0,0,
            -236,0,-125,0,0,0,0,0,0,0,
            0,0,0,0,-285,0,0,0,-323,0,
            0,0,0,-238,0,-160,0,0,0,-299,
            -175,0,0,0,0,0,0,0,0,0,
            -239,0,0,0,0,0,0,0,0,0,
            0,-243,0,0,0,-92,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-259,
            0,0,0,0,-164,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-14,0,-240,0,-301,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-260,0,0,-261,0,0,-280,-245,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-307,
            -312,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-335,0,-319,0,-327,
            0,0,0,0,0,0,0,-342,-305,0,
            0,0,0,0,0,0,0,0,0,-339,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-344,0,0,0,-76,0,0,0,
            0,0,0,-139,0,0,0,0,0,0,
            0,0,0,-219,0,0,0,0,0,0,
            0,0,0,0,0,-228,0,0,0,0,
            0,0,0,-117,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-74,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-206,0,0,0,0,0,0,
            0,0,-314,0,0,0,-112,0,0,-295,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-310,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -224,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-52,0,0,-306,0,0,0,
            -15,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-210,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-71,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-80,0,0,0,-51,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-9,
            0,-161,0,-22,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-163,0,-78,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-241,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-286,0,0,0,0,
            0,-281,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-288,0,0,0,0,
            0,-126,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-289,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-330,0,0,-302,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-287,0,0,0,0,0,0,
            0,0,0,-338,0,0,0,0,0,0,
            -19,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-343,0,0,-328,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -18,0,-23,0,0,0,0,0,0,0,
            0,0,0,0,0,-20,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-33,
            0,0,0,0,-1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -258,0,0,0,0,-40,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-296,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-211,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-6,0,-44,
            -200,0,0,0,0,0,0,-55,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-155,0,
            0,0,0,0,-123,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-212,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-213,0,0,0,0,
            0,0,0,0,0,0,0,0,-255,-229,
            0,0,0,0,0,0,-257,0,0,0,
            0,0,0,-16,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-17,0,0,0,0,0,-65,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-120,0,
            0,0,0,0,0,0,-121,0,0,0,
            0,0,0,0,-122,0,0,0,0,0,
            0,0,-124,0,0,0,0,0,0,0,
            0,-201,0,0,-146,0,0,0,0,0,
            0,0,-202,0,-207,0,0,0,0,0,
            0,0,0,-75,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-208,0,0,0,0,0,0,
            0,-209,0,0,0,0,0,0,0,0,
            0,-256,0,0,0,0,0,0,0,-142,
            0,0,0,0,-109,-316,0,0,0,-35,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-39,0,0,0,0,-42,
            0,0,0,0,0,0,0,0,-77,0,
            0,0,0,-106,0,-176,0,0,0,0,
            0,0,0,0,0,0,0,0,-143,0,
            0,0,0,-317,0,0,0,-331,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            118,1,44,44,21,21,50,50,24,24,
            2,2,2,2,3,3,3,4,4,5,
            5,5,5,5,5,5,5,74,74,98,
            98,6,6,6,6,6,6,6,6,6,
            6,6,7,7,8,8,8,8,9,9,
            9,14,14,14,15,15,15,15,15,16,
            16,16,17,17,18,18,19,19,20,20,
            22,22,23,23,26,26,26,26,26,26,
            26,26,26,26,26,26,37,32,25,119,
            119,100,100,59,38,38,38,38,38,38,
            38,39,39,39,33,33,101,101,75,75,
            40,40,41,41,41,67,67,42,42,42,
            42,43,43,43,43,43,53,53,29,29,
            29,29,29,54,54,54,89,89,84,84,
            84,84,85,85,85,86,86,86,87,87,
            87,88,88,88,102,102,90,90,91,55,
            57,57,57,57,57,68,70,70,70,70,
            70,70,70,70,70,70,70,70,79,79,
            27,27,76,76,120,121,80,80,77,77,
            77,92,103,103,104,104,93,93,93,61,
            122,122,105,94,94,94,78,78,123,106,
            106,107,107,95,95,30,31,31,31,56,
            51,51,45,45,45,45,34,34,35,46,
            46,47,36,36,108,108,48,125,125,124,
            124,52,52,52,52,52,52,52,52,52,
            109,60,60,60,60,49,81,81,71,71,
            71,72,72,62,62,126,126,83,83,82,
            82,82,63,63,63,64,65,65,65,66,
            66,66,66,69,69,69,73,127,99,99,
            99,99,96,128,129,129,130,130,131,131,
            118,118,132,132,110,110,110,110,133,133,
            111,111,111,112,112,10,10,10,28,28,
            11,11,134,134,113,113,113,114,114,135,
            135,115,115,12,12,136,136,116,116,116,
            13,58,137,137,138,138,117,117,117,97,
            97,97,53,54,91,91,91,105,105,105,
            123,120,121,49,92,130,130,314,647,14,
            19,15,1218,1207,44,1229,1268,353,315,316,
            317,1265,1282,1279,1293,1290,1332,1318,223,1340,
            74,487,127,91,34,411,933,134,215,1703,
            97,14,19,15,1218,42,44,1229,1268,1206,
            821,483,1592,1265,1282,1279,1293,1290,1332,1591,
            87,136,133,135,159,1206,933,1651,1366,2124,
            160,707,489,126,573,138,487,165,353,315,
            316,317,584,142,145,148,151,1752,627,124,
            87,2120,806,2031,2361,2376,1584,1157,134,215,
            199,313,448,226,234,411,933,1406,483,1676,
            1902,933,1703,405,14,19,15,1218,42,44,
            1229,1268,136,133,135,159,1265,1282,1564,1428,
            87,1229,1017,472,378,89,138,1674,165,353,
            315,316,317,311,142,145,148,151,1752,411,
            2704,346,2120,806,2031,2361,2376,1584,104,134,
            215,256,215,1703,194,14,19,15,1218,42,
            44,1229,1268,1550,642,1681,391,1265,1282,1279,
            1293,1290,1575,136,133,135,159,1703,310,14,
            19,15,1218,42,44,1229,1268,138,224,165,
            1669,1265,1282,1279,1551,142,145,148,151,1752,
            1889,1923,779,2120,806,2031,2361,2376,1584,1637,
            533,14,19,15,1218,1207,44,1229,1268,1785,
            393,233,504,1265,1282,1279,1293,1290,1332,1318,
            958,1340,74,411,431,283,706,1659,533,14,
            19,15,1218,1207,44,1229,1268,2620,411,933,
            284,1265,1282,1279,1293,1290,1332,1318,1606,1340,
            74,394,1703,283,14,19,15,1218,42,44,
            1229,1268,791,87,229,966,1265,1488,288,334,
            1691,1791,1369,14,19,15,1218,1207,44,1229,
            1268,1642,1315,294,1229,1265,1282,1279,1293,1290,
            1332,1318,1573,1340,74,289,288,331,820,1374,
            1369,725,1524,533,14,19,15,1218,1207,44,
            1229,1268,182,321,256,215,1265,1282,1279,1293,
            1290,1332,1318,289,1340,74,945,1736,283,413,
            491,14,19,15,1218,1207,44,1229,1268,323,
            1107,833,489,1265,1282,1279,1293,1290,1332,1318,
            610,1340,74,325,1703,1468,14,19,15,1218,
            42,44,1229,1268,335,765,411,2755,1265,1501,
            199,290,1736,241,1580,1369,14,19,15,1218,
            1207,44,1229,1268,898,1439,329,1229,1265,1282,
            1279,1293,1290,1332,1318,947,1340,74,291,1662,
            283,1090,1017,868,1060,1681,1702,14,19,15,
            1218,1207,44,1229,1268,257,215,256,215,1265,
            1282,1279,1293,1290,1332,1318,626,1340,74,257,
            215,283,417,325,194,443,353,315,316,317,
            1896,699,2488,157,1118,1681,1165,1369,854,664,
            730,318,315,316,317,230,134,215,1703,189,
            14,19,15,1218,42,44,1229,1268,853,2024,
            344,525,1502,1706,292,592,226,645,1369,417,
            144,133,135,159,1889,1967,220,783,223,679,
            417,969,2097,1725,901,14,19,15,1218,1207,
            44,1229,1268,257,215,233,1428,1265,1282,1279,
            1293,1290,1332,1318,1190,1340,74,188,1606,1492,
            1703,1229,14,19,15,1218,42,44,1229,1268,
            730,154,558,1879,1265,1282,1279,1293,1587,333,
            1206,1725,1747,368,14,19,15,1218,40,436,
            345,256,215,1703,227,14,19,15,1218,1207,
            44,1229,1268,1211,126,1896,509,1265,1282,1279,
            1293,1290,1332,1318,212,1340,74,1154,1502,91,
            14,19,15,1218,1207,44,1229,1268,1381,1831,
            1619,489,1265,1282,1279,1293,1290,1332,1318,1506,
            1340,74,779,1529,1516,37,1013,411,2796,1791,
            1031,14,19,15,1218,1207,44,1229,1268,1874,
            1889,2027,242,1265,1282,1279,1293,1290,1332,1318,
            1368,1340,74,784,336,331,1578,1206,1789,1193,
            1703,280,14,19,15,1218,42,44,1229,1268,
            417,1253,262,1406,1265,1282,1279,1293,1290,1332,
            1318,197,1340,93,1703,1248,14,19,15,1218,
            1207,44,1229,1268,347,341,1253,190,1265,1282,
            1279,1293,1290,1332,1318,791,1340,74,278,1703,
            85,14,19,15,1218,1207,44,1229,1268,1405,
            123,1253,1253,1265,1282,1279,1293,1290,1332,1318,
            791,1340,74,163,1703,84,14,19,15,1218,
            1207,44,1229,1268,330,122,111,1604,1265,1282,
            1279,1293,1290,1332,1318,285,1340,74,791,1703,
            83,14,19,15,1218,1207,44,1229,1268,417,
            1182,767,1248,1265,1282,1279,1293,1290,1332,1318,
            206,1340,74,23,1703,82,14,19,15,1218,
            1207,44,1229,1268,411,1065,1180,1253,1265,1282,
            1279,1293,1290,1332,1318,791,1340,74,183,1703,
            81,14,19,15,1218,1207,44,1229,1268,1610,
            1253,125,1203,1265,1282,1279,1293,1290,1332,1318,
            791,1340,74,791,1703,80,14,19,15,1218,
            1207,44,1229,1268,121,411,721,1730,1265,1282,
            1279,1293,1290,1332,1318,207,1340,74,1825,1703,
            79,14,19,15,1218,1207,44,1229,1268,782,
            22,277,1253,1265,1282,1279,1293,1290,1332,1318,
            493,1340,74,26,1703,78,14,19,15,1218,
            1207,44,1229,1268,411,579,1665,1253,1265,1282,
            1279,1293,1290,1332,1318,930,1340,74,779,1703,
            77,14,19,15,1218,1207,44,1229,1268,360,
            1861,1988,285,1265,1282,1279,1293,1290,1332,1318,
            702,1340,74,509,1703,76,14,19,15,1218,
            1207,44,1229,1268,196,411,607,706,1265,1282,
            1279,1293,1290,1332,1318,1308,1340,74,1758,1703,
            75,14,19,15,1218,1207,44,1229,1268,417,
            1253,1253,900,1265,1282,1279,1293,1290,1332,1318,
            1118,1340,74,1306,1703,92,14,19,15,1218,
            42,44,1229,1268,2345,117,297,1879,1265,1282,
            1279,1293,1290,1332,1318,417,1340,93,1703,1247,
            14,19,15,1218,1207,44,1229,1268,340,1824,
            1390,387,1265,1282,1279,1293,1290,1332,1318,64,
            1340,74,299,1703,1624,14,19,15,1218,1207,
            44,1229,1268,214,1855,771,1714,1265,1282,1279,
            1293,1290,1332,1318,347,1340,74,489,1832,1680,
            322,1107,575,1844,318,315,316,317,286,1703,
            1881,14,19,15,1218,42,44,1229,1268,1552,
            1612,1418,2780,1503,338,1276,295,1402,592,226,
            231,1703,1575,14,19,15,1218,42,39,221,
            783,223,225,815,1375,1851,276,1703,1294,14,
            19,15,1218,42,44,1229,1268,271,1016,1179,
            274,1265,1282,1279,1293,1290,1332,1318,607,1340,
            93,1703,1294,14,19,15,1218,42,44,1229,
            1268,742,976,1023,1879,1265,1282,1279,1293,1290,
            1332,1318,243,1340,93,1703,1294,14,19,15,
            1218,42,44,1229,1268,232,204,1070,1879,1265,
            1282,1279,1293,1290,1332,1318,245,1340,93,1703,
            1259,14,19,15,1218,42,44,1229,1268,350,
            205,1910,1879,1265,1282,1279,1293,1290,1332,1318,
            244,1340,93,1703,1107,14,19,15,1218,42,
            44,1229,1268,320,1826,1429,1294,1265,1282,1279,
            1293,1290,1332,1318,1428,1340,93,727,1879,1833,
            1551,1774,190,367,353,315,316,317,1838,1703,
            1856,14,19,15,1218,42,44,1229,1268,339,
            236,1849,933,1527,134,215,110,86,1452,1093,
            20,920,1863,1879,1294,95,1802,1879,1879,1082,
            108,94,96,97,98,99,87,1568,137,133,
            135,159,1073,115,2742,109,1,367,16,351,
            352,1879,139,1769,165,14,19,15,1218,33,
            143,146,149,152,1752,1849,933,106,246,1862,
            110,86,2206,1093,1879,920,252,367,1257,95,
            1294,770,489,1082,108,94,96,97,98,99,
            87,1879,3017,1646,3017,2226,314,115,3017,109,
            110,86,1850,1093,352,920,896,933,3017,95,
            199,3017,2254,1082,108,94,96,97,98,99,
            1879,107,3017,325,247,699,2480,3017,3017,109,
            110,86,1330,1093,352,318,315,316,317,95,
            3017,1618,1017,1082,1404,94,96,97,98,99,
            3017,106,496,2024,127,367,402,3017,3017,592,
            226,231,318,315,316,317,318,315,316,317,
            220,783,223,225,195,3017,2097,1754,110,86,
            2390,1093,1879,920,2780,1879,3017,95,1879,715,
            2480,1082,108,94,96,97,98,99,3017,318,
            315,316,317,1626,105,815,21,109,276,275,
            1879,1879,352,3017,3017,154,558,1970,3017,271,
            1016,1179,274,592,226,231,1877,368,1879,107,
            1879,281,1331,3017,220,783,223,225,1294,1703,
            1600,14,19,15,1218,42,44,1229,1268,282,
            1879,2314,3017,1265,1282,1279,1293,1290,1332,1318,
            3017,1340,73,1294,3017,3017,3017,699,2480,3017,
            296,2342,590,3017,474,2580,3017,318,315,316,
            317,3017,298,2446,1703,3017,14,19,15,1218,
            42,44,1229,1268,200,2024,750,2212,1540,3017,
            3017,592,226,231,411,367,3017,366,592,226,
            231,1280,220,783,223,225,3017,279,2097,220,
            783,223,225,1164,489,265,276,3017,3017,87,
            592,226,231,199,3017,3017,1627,269,1016,1179,
            274,220,783,223,225,3017,3017,913,276,3017,
            3017,3017,1874,3017,411,933,266,155,558,269,
            1016,1179,274,1344,2480,2481,3017,927,489,3017,
            715,2480,3017,318,315,316,317,3017,1788,87,
            319,315,316,317,3017,261,1576,1623,1849,933,
            3017,1970,3017,3017,1504,1343,1874,592,226,231,
            263,411,933,3017,592,226,231,3017,220,783,
            223,225,3017,87,1600,220,783,223,225,3017,
            115,1600,3017,3017,699,2480,87,1164,489,261,
            3017,718,3017,1590,319,315,316,317,1504,1343,
            3017,353,315,316,317,1703,3017,14,19,15,
            1218,42,44,1229,1447,1830,1874,2446,592,226,
            231,134,215,3017,2756,3017,841,3017,201,220,
            783,223,225,3017,3017,2158,318,315,316,317,
            3017,3017,3017,3017,3017,147,133,135,159,261,
            3017,1589,3017,841,2780,3017,3017,1059,1828,1343,
            592,226,231,318,315,316,317,318,315,316,
            317,221,783,223,225,815,3017,3017,3017,3017,
            1443,2780,943,933,629,2789,3017,592,226,1380,
            353,315,316,317,318,315,316,317,221,783,
            223,1379,815,3017,3017,3017,110,86,3017,1093,
            134,215,2780,3017,3017,95,990,933,1109,1082,
            103,94,96,97,98,99,3017,3017,318,315,
            316,317,3017,511,141,133,135,159,1037,933,
            110,86,3017,1093,2426,3017,2809,3017,140,95,
            165,3017,3017,1082,101,94,96,97,98,99,
            3017,3017,110,86,3017,1093,1084,933,3017,3017,
            3017,95,1400,489,3017,1082,102,94,96,97,
            98,99,318,315,316,317,1131,933,3017,3017,
            110,86,1769,1093,14,19,15,1218,32,95,
            2780,1874,3017,1082,118,94,96,97,98,99,
            110,86,3017,1093,1178,933,3017,3017,3017,95,
            3017,511,3017,1082,114,94,96,97,98,99,
            3017,3017,1414,3017,261,3017,3017,3017,110,86,
            3017,1093,3017,1810,1343,1225,933,95,1837,489,
            3017,1082,1637,94,96,97,98,99,318,315,
            316,317,3017,3017,411,933,3017,3017,3017,110,
            86,3017,1093,3017,1272,933,2780,1874,95,3017,
            3017,670,1082,113,94,96,97,98,99,87,
            3017,318,315,316,317,3017,1811,511,110,86,
            3017,1093,1319,933,3017,1849,933,95,1756,2775,
            261,1082,120,94,96,97,98,99,3017,1810,
            1343,781,3017,381,2480,3017,110,86,3017,1093,
            87,353,315,316,317,95,844,115,3017,1082,
            119,94,96,97,98,99,353,315,316,317,
            965,134,215,3017,3017,564,428,592,226,231,
            319,315,316,317,3017,3017,134,215,220,783,
            223,225,1850,1030,913,150,133,135,159,306,
            3017,1569,2288,3017,409,3017,841,3017,3017,3017,
            153,133,135,159,3017,3017,318,315,316,317,
            3017,3017,279,3017,986,3017,1436,3017,305,3017,
            3017,3017,3017,352,2780,3017,318,315,316,317,
            448,226,235,1703,3017,14,19,15,1218,42,
            44,1229,1452,276,2814,815,3017,3017,637,428,
            629,1352,2587,3017,269,1016,1179,274,629,3017,
            318,315,316,317,3017,3017,3017,3017,318,315,
            316,317,306,1788,3017,302,304,409,2780,1299,
            367,3017,3017,388,3017,1546,2780,14,19,15,
            1218,42,35,3017,3017,3017,3017,2478,3017,511,
            3017,305,3017,276,87,3017,352,511,920,3017,
            2066,115,3017,3017,269,1016,1179,274,2093,1703,
            3017,14,19,15,1218,42,44,1464,3017,248,
            3017,3017,1611,268,3017,3017,1703,352,14,19,
            15,1218,42,44,1465,3017,1232,3017,3017,1546,
            629,14,19,15,1218,42,35,629,303,304,
            318,315,316,317,392,3017,3017,318,315,316,
            317,3017,3017,3017,318,315,316,317,2780,3017,
            3017,3017,3017,3017,524,2780,3017,3017,3017,3017,
            1062,3017,2760,249,318,315,316,317,3017,511,
            318,315,316,317,3017,3017,511,3017,3017,3017,
            1414,3017,2760,3017,3017,3017,3017,1756,2794,1703,
            3017,14,19,15,1218,42,38,1703,3017,14,
            19,15,1218,42,37,1703,3017,14,19,15,
            1218,42,36,1703,3017,14,19,15,1218,42,
            34,3017,411,367,3017,1703,812,14,19,15,
            1218,42,35,411,367,1703,3017,14,19,15,
            1218,42,47,3017,918,489,870,87,3017,3017,
            3017,199,3017,3017,1627,3017,3017,3017,87,3017,
            3017,3017,199,3017,1703,1627,14,19,15,1218,
            42,46,1703,920,14,19,15,1218,42,45,
            3017,1182,1615,2481,14,19,15,1218,42,43,
            1887,489,3017,3017,2481,1019,1870,308,3017,3017,
            968,3017,352,3017,3017,1720,318,315,316,317,
            319,315,316,317,3017,919,1782,3017,3017,920,
            1012,3017,1428,312,2818,319,315,316,317,1106,
            319,315,316,317,1153,3017,1019,3017,3017,319,
            315,316,317,309,319,315,316,317,352,1156,
            3017,3017,3017,3017,1895,3017,3017,3017,1903,319,
            315,316,317,1428,319,315,316,317,319,315,
            316,317,3017,3017,3017,3017,3017,2750,3017,3017,
            3017,3017,3017,3017,3017,3017,3017,3017,3017,3017,
            211,3017,3017,3017,3017,3017,3017,3017,3017,3017,
            3017,707,1430,3017,3017,3017,3017,3017,3017,3017,
            3017,3017,3017,3017,3017,3017,3017,3017,3017,3017,
            3017,3017,3017,3017,3017,3017,3017,3017,3017,3017,
            3017,211,3017,3017,3017,3017,3017,3017,3017,3017,
            3017,3017,752,1430,3017,0,1,494,0,1,
            400,0,1,430,0,1,434,0,400,128,
            0,430,128,0,434,128,0,400,129,0,
            430,129,0,434,129,0,400,130,0,430,
            130,0,434,130,0,434,187,0,430,187,
            0,400,187,0,187,191,0,434,186,0,
            430,186,0,400,186,0,186,191,0,400,
            131,0,430,131,0,434,131,0,400,132,
            0,430,132,0,434,132,0,179,228,0,
            3024,1,0,225,237,0,1,3256,0,225,
            238,0,7,9,0,179,17,0,178,18,
            0,1,3245,0,112,2285,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,0,1,35,0,37,38,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,0,1,35,63,
            37,38,39,40,41,42,43,44,45,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,62,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,0,
            1,35,0,37,38,39,40,41,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,0,0,35,63,37,38,39,40,
            41,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,28,
            29,30,31,32,0,0,35,64,37,38,
            39,40,41,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,61,0,1,2,94,4,5,6,
            7,8,9,10,0,12,13,14,15,16,
            17,18,19,20,21,22,23,13,25,26,
            27,28,29,30,31,0,0,1,2,64,
            4,5,6,8,8,71,72,73,74,0,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,0,1,0,3,33,
            0,1,2,8,9,10,0,12,2,14,
            15,0,0,2,2,4,5,6,7,7,
            23,0,1,11,0,4,5,6,33,8,
            0,36,0,1,2,3,0,13,2,7,
            8,9,10,7,12,13,14,15,16,17,
            18,19,20,21,33,76,77,62,26,64,
            65,66,0,68,69,70,71,72,73,74,
            8,76,77,78,79,80,81,82,83,84,
            85,86,87,88,89,90,91,92,93,0,
            1,0,3,0,1,2,3,8,9,10,
            0,12,0,14,15,3,0,75,0,1,
            2,3,4,5,6,0,8,11,0,4,
            5,6,33,0,1,36,33,34,0,36,
            22,23,24,25,26,27,28,29,30,31,
            12,33,34,0,0,2,2,4,5,6,
            7,62,8,64,65,66,33,68,69,70,
            71,72,73,74,62,76,77,78,79,80,
            81,82,83,84,85,86,87,88,89,90,
            91,92,93,0,1,2,3,4,5,6,
            7,8,0,1,0,1,2,3,4,5,
            6,0,8,0,1,22,23,24,25,26,
            27,28,29,30,31,32,22,23,24,25,
            26,27,28,29,30,31,0,33,34,0,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,61,0,0,1,0,4,
            5,6,4,5,6,0,0,1,2,3,
            4,5,6,7,8,36,0,22,23,3,
            25,26,27,28,29,30,31,94,22,23,
            24,25,26,27,28,29,30,31,32,0,
            24,2,0,4,5,6,7,71,72,73,
            74,0,36,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,0,1,
            2,0,4,5,6,0,0,2,2,3,
            4,5,6,7,0,1,2,0,4,5,
            6,4,5,6,0,1,0,22,22,23,
            94,25,26,27,28,29,30,31,32,22,
            23,0,25,26,27,28,29,30,31,0,
            1,2,3,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,61,62,0,
            0,2,3,4,5,6,7,63,0,78,
            0,0,33,34,4,5,6,9,10,8,
            0,22,23,3,25,26,27,28,29,30,
            31,32,22,23,78,25,26,27,28,29,
            30,31,71,72,73,74,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            61,62,0,63,2,3,4,5,6,7,
            0,1,2,0,4,5,6,4,5,6,
            69,70,62,0,22,23,0,25,26,27,
            28,29,30,31,32,22,23,0,25,26,
            27,28,29,30,31,22,23,0,25,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,61,62,0,1,2,3,0,
            33,0,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,0,0,24,
            2,4,4,5,6,7,0,32,2,0,
            35,0,37,38,39,40,41,42,43,44,
            45,46,0,1,2,3,0,1,0,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,0,0,24,0,4,5,
            6,4,5,6,32,0,11,35,79,37,
            38,39,40,41,42,43,44,45,46,0,
            1,2,3,67,65,66,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,0,24,2,4,5,6,0,7,
            2,32,0,11,35,7,37,38,39,40,
            41,42,43,44,45,46,0,1,2,3,
            65,66,0,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,0,0,
            24,0,4,5,6,4,5,6,32,0,
            11,35,0,37,38,39,40,41,42,43,
            44,45,46,0,1,2,3,65,66,0,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,0,0,24,0,4,
            5,6,4,5,6,32,0,0,35,0,
            37,38,39,40,41,42,43,44,45,46,
            0,1,2,3,65,66,64,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,0,24,0,4,5,6,4,
            5,6,32,0,0,35,13,37,38,39,
            40,41,42,43,44,45,46,0,1,2,
            3,0,76,77,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,82,
            83,24,0,22,23,0,25,0,3,32,
            0,1,35,11,37,38,39,40,41,42,
            43,44,45,46,0,1,2,3,0,24,
            67,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,0,0,24,2,
            22,23,0,25,7,3,32,11,0,35,
            0,37,38,39,40,41,42,43,44,45,
            46,0,1,2,3,0,24,2,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,0,24,3,0,0,2,
            0,3,4,32,7,0,35,0,37,38,
            39,40,41,42,43,44,45,46,0,1,
            2,3,24,65,66,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            33,36,24,0,1,2,0,4,5,6,
            32,0,1,35,3,37,38,39,40,41,
            42,43,44,45,46,0,1,2,75,4,
            5,6,7,0,0,68,3,4,5,6,
            0,1,8,0,33,34,3,22,23,0,
            25,26,27,28,29,30,31,24,0,0,
            11,0,0,4,5,6,63,8,0,36,
            9,10,47,48,49,50,51,52,53,54,
            55,56,57,58,59,60,61,0,0,2,
            0,4,5,6,7,0,0,64,0,4,
            5,6,0,69,70,62,4,5,6,22,
            23,0,25,26,27,28,29,30,31,0,
            22,23,11,25,22,23,67,25,26,27,
            28,29,30,31,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,61,47,
            48,49,50,51,52,53,54,55,56,57,
            58,0,1,2,3,0,1,79,7,8,
            9,10,0,12,13,14,15,16,17,18,
            19,20,21,0,1,2,3,26,0,1,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,0,1,2,3,0,
            0,2,7,8,9,10,7,12,13,14,
            15,16,17,18,19,20,21,0,0,1,
            0,3,0,1,0,3,75,0,1,0,
            1,2,33,9,10,62,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,33,34,0,1,0,34,2,3,0,
            33,0,1,63,0,1,2,68,0,0,
            75,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,0,1,2,34,
            0,0,33,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,0,1,
            2,0,95,0,0,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            0,1,2,22,23,67,25,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,0,1,2,0,0,0,0,7,
            8,9,10,0,12,13,14,15,16,17,
            18,19,20,21,0,1,2,22,23,0,
            25,7,8,9,10,0,12,13,14,15,
            16,17,18,19,20,21,0,1,2,36,
            0,0,0,7,8,9,10,0,12,13,
            14,15,16,17,18,19,20,21,0,1,
            2,36,0,0,0,7,8,9,10,0,
            12,13,14,15,16,17,18,19,20,21,
            0,1,2,64,0,0,0,7,8,9,
            10,0,12,13,14,15,16,17,18,19,
            20,21,11,84,85,86,87,88,89,90,
            91,92,93,0,0,1,3,4,5,6,
            0,0,0,3,3,3,0,80,14,15,
            4,5,6,0,8,2,3,24,0,0,
            0,3,3,80,0,0,0,33,8,36,
            0,0,0,3,34,34,34,36,36,0,
            0,0,24,4,5,6,0,34,0,3,
            0,3,34,34,24,36,0,64,0,35,
            4,3,68,63,0,0,36,11,4,5,
            6,0,0,67,3,81,4,5,6,0,
            0,0,34,0,0,0,36,0,63,69,
            70,12,34,0,63,11,11,0,0,0,
            0,36,0,63,63,34,0,0,0,0,
            0,0,0,67,0,0,0,0,0,0,
            0,75,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3017,1,5255,1389,2906,1,1,5254,1,1,
            1,468,1,1,1,1,1,1,1,1,
            1,1,1,1,3025,1,1,1,1,1,
            1,1,3117,3017,733,968,3017,1056,1020,1081,
            985,1706,943,1129,983,425,979,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,3023,7,3002,3002,3002,3002,3002,3002,
            3002,3002,3002,3002,3002,3002,3002,3002,3002,3002,
            3002,3002,3002,3002,3002,3002,3002,3002,3002,3002,
            3002,3002,3002,3002,3002,3002,3017,672,3002,2122,
            3002,3002,3002,3002,3002,3002,3002,3002,3002,3002,
            3002,3002,3002,3002,3002,3002,3002,3002,3002,3002,
            3002,3002,3002,3002,3002,3002,3017,1,5255,1389,
            2906,1,1,5254,1,1,1,468,1,1,
            1,1,1,1,1,1,1,1,1,1,
            3025,1,1,1,1,1,1,1,3117,3017,
            628,968,3017,1056,1020,1081,985,1706,943,1129,
            983,425,979,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3023,3017,
            1,5255,3026,2906,1,1,5254,1,1,1,
            468,1,1,1,1,1,1,1,1,1,
            1,1,1,3025,1,1,1,1,1,1,
            1,3117,3017,156,968,2156,1056,1020,1081,985,
            1706,943,1129,983,425,979,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,3017,1,5255,3026,2906,1,1,5254,1,
            1,1,468,1,1,1,1,1,1,1,
            1,1,1,1,1,3025,1,1,1,1,
            1,1,1,3117,59,213,968,754,1056,1020,
            1081,985,1706,943,1129,983,425,979,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,3017,1904,1417,2905,434,400,430,
            1422,2685,2665,2657,348,2673,3030,2232,1653,922,
            3027,3028,3029,2649,1451,3233,3235,681,3234,3179,
            3180,3178,3236,3181,3177,3017,270,1896,3245,1344,
            434,400,430,828,255,1884,1599,1429,838,62,
            3184,3189,3188,3186,3187,3185,3190,3191,3183,3192,
            3193,3194,2321,2614,2594,1,3035,343,3035,709,
            1,2363,3245,3035,3035,3035,3017,3035,1628,3035,
            3035,187,3017,2954,3197,2945,2951,2948,2954,3198,
            3359,270,2421,603,3017,434,400,430,3035,255,
            1,3035,1,1904,3034,3020,3017,1357,3197,3035,
            2515,2665,2657,3198,2673,3030,2232,1653,922,3027,
            3028,3029,2649,1451,709,734,632,3035,873,3035,
            3035,3035,3017,3035,3035,3035,3035,3035,3035,3035,
            1130,3035,3035,3035,3035,3035,3035,3035,3035,3035,
            3035,3035,3035,3035,3035,3035,3035,3035,3035,1,
            3034,287,3034,1,1896,3245,264,3034,3034,3034,
            3017,3034,1,3034,3034,2990,3017,3019,17,3005,
            179,3005,179,179,179,184,3005,411,3017,434,
            400,430,3034,224,864,3034,709,264,64,264,
            179,179,3005,179,179,179,179,179,179,179,
            472,3005,3005,186,3017,2966,1528,2957,2963,2960,
            2966,3034,1381,3034,3034,3034,709,3034,3034,3034,
            3034,3034,3034,3034,3023,3034,3034,3034,3034,3034,
            3034,3034,3034,3034,3034,3034,3034,3034,3034,3034,
            3034,3034,3034,3017,1,1,3026,2906,1,1,
            1,1,3017,473,18,3008,178,3008,178,178,
            178,3017,3008,179,2987,1,1,3025,1,1,
            1,1,1,1,1,3324,178,178,3008,178,
            178,178,178,178,178,178,61,3008,3008,346,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,129,3017,570,255,2933,
            2927,2930,434,400,430,3017,3017,1,1,3026,
            2906,1,1,1,1,957,3017,3233,3235,3026,
            3234,3179,3180,3178,3236,3181,3177,301,1,1,
            3025,1,1,1,1,1,1,1,3324,208,
            3025,5298,3017,434,400,430,5298,1884,1599,1429,
            838,3017,1867,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2363,
            3245,66,2915,2909,2912,326,3017,3344,1,193,
            1,1,1,1,1,2363,3245,130,2915,2909,
            2912,2942,2936,2939,349,851,67,3345,1,1,
            300,1,1,1,1,1,1,1,3215,3233,
            3235,60,3234,3179,3180,3178,3236,3181,3177,1,
            1896,3011,3022,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,193,3017,
            3017,1,192,1,1,1,1,1467,51,547,
            131,48,709,3021,2975,2969,2972,2566,2549,2732,
            3017,1,1,3024,1,1,1,1,1,1,
            1,3215,3233,3235,547,3234,3179,3180,3178,3236,
            3181,3177,1884,1599,1429,838,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,192,3017,2178,1,193,1,1,1,1,
            255,2363,3245,132,434,400,430,2984,2978,2981,
            2724,2695,3023,251,1,1,3017,1,1,1,
            1,1,1,1,3215,3233,3235,222,3234,3179,
            3180,3178,3236,3181,3177,1,1,3017,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,193,3017,1,5255,3026,68,
            709,3017,5254,1,1,1,468,1,1,1,
            1,1,1,1,1,1,1,1,360,3025,
            5299,2906,434,400,430,5299,1,3117,2996,54,
            968,3017,1056,1020,1081,985,1706,943,1129,983,
            425,979,3017,1,5255,3026,337,1423,3017,5254,
            1,1,1,468,1,1,1,1,1,1,
            1,1,1,1,361,231,3025,364,434,400,
            430,434,400,430,3117,58,234,968,900,1056,
            1020,1081,985,1706,943,1129,983,425,979,3017,
            1,5255,3026,3277,2045,2463,5254,1,1,1,
            468,1,1,1,1,1,1,1,1,1,
            1,363,3017,3025,3197,434,400,430,210,3198,
            3197,3117,57,746,968,3198,1056,1020,1081,985,
            1706,943,1129,983,425,979,3017,1,5255,3026,
            2045,2463,3017,5254,1,1,1,468,1,1,
            1,1,1,1,1,1,1,1,158,3017,
            3025,185,434,400,430,434,400,430,3117,56,
            987,968,3017,1056,1020,1081,985,1706,943,1129,
            983,425,979,3017,1,5255,3026,2045,2463,3017,
            5254,1,1,1,468,1,1,1,1,1,
            1,1,1,1,1,355,63,3025,354,434,
            400,430,434,400,430,3117,3017,72,968,3017,
            1056,1020,1081,985,1706,943,1129,983,425,979,
            3017,1,5255,3026,2045,2463,785,5254,1,1,
            1,468,1,1,1,1,1,1,1,1,
            1,1,362,3017,3025,356,434,400,430,434,
            400,430,3117,1,3017,968,681,1056,1020,1081,
            985,1706,943,1129,983,425,979,3017,1,5255,
            3026,252,734,632,5254,1,1,1,468,1,
            1,1,1,1,1,1,1,1,1,399,
            2001,3025,3017,1,1,1,1,3017,3026,3117,
            3017,2509,968,1205,1056,1020,1081,985,1706,943,
            1129,983,425,979,3017,1,5255,3026,3017,3025,
            3277,5254,1,1,1,468,1,1,1,1,
            1,1,1,1,1,1,3017,3017,3025,3046,
            3233,3235,3017,3234,3047,3026,3117,1254,55,968,
            3017,1056,1020,1081,985,1706,943,1129,983,425,
            979,3017,1,5255,3026,3017,3025,3257,5254,1,
            1,1,468,1,1,1,1,1,1,1,
            1,1,1,3017,3017,3025,3020,209,1,859,
            3017,116,2906,3117,859,258,968,293,1056,1020,
            1081,985,1706,943,1129,983,425,979,3017,1,
            5255,3026,116,2045,2463,5254,1,1,1,468,
            1,1,1,1,1,1,1,1,1,1,
            1539,970,3025,1,2363,3245,3017,2915,2909,2912,
            3117,1,2421,968,267,1056,1020,1081,985,1706,
            943,1129,983,425,979,1,2363,442,3019,2915,
            2909,2912,3195,237,50,1365,225,2993,2993,2993,
            3017,395,2732,286,709,267,1154,3233,3235,231,
            3234,3179,3180,3178,3236,3181,3177,225,3017,1,
            235,53,3017,2915,2909,2912,1467,255,3017,225,
            2566,2549,3184,3189,3188,3186,3187,3185,3190,3191,
            3183,3192,3193,3194,2321,2614,2594,3017,69,3196,
            3017,434,400,430,3195,202,3017,225,253,434,
            400,430,128,2724,2695,1154,2924,2918,2921,3233,
            3235,41,3234,3179,3180,3178,3236,3181,3177,3017,
            3233,3235,1305,3234,3233,3235,3277,3234,3179,3180,
            3178,3236,3181,3177,3184,3189,3188,3186,3187,3185,
            3190,3191,3183,3192,3193,3194,2321,2614,2594,3184,
            3189,3188,3186,3187,3185,3190,3191,3183,3192,3193,
            3194,3017,1904,3034,3020,3017,465,900,3035,2579,
            2665,2657,3017,2673,3030,2232,1653,922,3027,3028,
            3029,2649,1451,1,1904,3853,27,1393,3017,618,
            3759,2685,2665,2657,4767,2673,3030,2232,1653,922,
            3027,3028,3029,2649,1451,3017,1904,3034,3020,3017,
            3017,3197,3035,2685,2665,2657,3198,2673,3030,2232,
            1653,922,3027,3028,3029,2649,1451,112,1,2421,
            3017,3022,3017,1307,52,3022,3019,272,1000,3017,
            1904,3034,1515,2566,2549,27,3035,2685,2665,2657,
            4767,2673,3030,2232,1653,922,3027,3028,3029,2649,
            1451,709,3021,324,651,3017,3021,775,3022,273,
            709,3017,2304,1839,3017,1904,3034,1329,1,3017,
            3019,3035,2685,2665,2657,1305,2673,3030,2232,1653,
            922,3027,3028,3029,2649,1451,1,1904,3853,3021,
            3017,3017,709,3759,2685,2665,2657,4767,2673,3030,
            2232,1653,922,3027,3028,3029,2649,1451,1,1904,
            3853,250,3014,3017,3017,3759,2685,2665,2657,4767,
            2673,3030,2232,1653,922,3027,3028,3029,2649,1451,
            3017,1904,3034,3233,3235,3276,3234,3035,2685,2665,
            2657,4767,2673,3030,2232,1653,922,3027,3028,3029,
            2649,1451,3017,1904,3034,254,3017,3017,3017,3035,
            2685,2665,2657,88,2673,3030,2232,1653,922,3027,
            3028,3029,2649,1451,1,1904,3034,3233,3235,42,
            3234,3035,2685,2665,2657,28,2673,3030,2232,1653,
            922,3027,3028,3029,2649,1451,3017,2682,3034,1319,
            3017,3017,3017,3035,2685,2665,2657,70,2673,3030,
            2232,1653,922,3027,3028,3029,2649,1451,3017,2693,
            3034,3044,3017,71,3017,3035,2685,2665,2657,3017,
            2673,3030,2232,1653,922,3027,3028,3029,2649,1451,
            332,1904,3034,1294,3017,3017,3017,3035,2685,2665,
            2657,3017,2673,3030,2232,1653,922,3027,3028,3029,
            2649,1451,1305,1269,1244,1219,1194,1169,1119,1144,
            1094,1069,1044,238,31,470,225,2999,2999,2999,
            3017,3017,3017,3022,3022,3022,1,523,3041,3042,
            2915,2909,2912,3017,255,1588,3022,225,1,3017,
            49,116,3022,523,3017,203,3017,1954,2732,225,
            3017,3017,3017,3026,3021,3021,3021,606,1445,357,
            1,1,116,434,400,430,3017,3021,3017,3020,
            209,3022,116,3021,3025,989,1,225,1,1440,
            2906,3022,1132,813,358,28,1963,468,434,400,
            430,1,359,3277,90,1045,434,400,430,65,
            3017,3017,3021,3017,191,364,4681,3017,1491,2724,
            2695,472,3021,3017,3382,208,360,3017,3017,3017,
            3017,682,3017,3198,3197,90,3017,3017,3017,3017,
            3017,3017,3017,1563,3017,3017,3017,3017,3017,3017,
            3017,3019
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            581,1,200,307,386,581,547,646,515,547,
            547,547,527,641,527,641,641,527,641,527,
            309,390,388,377,547,388,172,279,545,83,
            473,145,641,336,333,336,145,336,641,388,
            393,390,264,390,13,14,482,309,646,439,
            113,388,116,58,390,87,123,121,262,280,
            267,83,82,264,643,25,646,177,393,535,
            388,482,149,484,309,388,113,113,131,388,
            172,440,614,473,279,456,440,440,336,547,
            547,443,547,547,440,279,217,458,217,386,
            295,263,204,83,646,643,25,177,177,535,
            511,484,183,169,511,229,295,458,458,458,
            458,458,153,458,458,458,219,412,417,415,
            423,419,426,425,428,427,429,264,538,309,
            263,617,113,55,646,458,87,58,337,264,
            277,440,458,440,293,458,339,458,458,280,
            443,217,443,388,260,341,341,267,264,67,
            264,25,55,209,25,177,179,395,179,511,
            535,263,511,169,152,149,458,458,458,458,
            458,458,458,458,458,458,458,264,264,540,
            295,295,336,336,68,458,458,458,458,458,
            458,458,458,458,458,458,458,458,458,458,
            458,458,458,458,458,203,20,479,390,484,
            55,129,264,456,440,264,547,264,264,279,
            443,458,263,25,211,179,55,458,336,535,
            337,458,458,169,153,131,390,479,264,264,
            264,169,415,415,412,412,419,419,417,417,
            417,417,425,423,427,426,217,428,482,264,
            549,538,129,440,456,443,458,443,443,67,
            55,439,458,435,211,436,55,169,169,129,
            540,549,400,646,458,484,264,179,8,68,
            440,264,278,211,458,436,436,129,264,55,
            127,119,217,336,458,273,264,68,440,443,
            436,179,3,131,475,336,458,443,264,55,
            458,169,443,169
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            94,0,3,36,62,24,0,2,7,33,
            68,0,1,63,64,24,5,6,4,3,
            36,34,33,0,27,47,22,48,59,28,
            49,29,50,51,30,25,52,53,26,60,
            31,61,54,55,23,56,57,58,2,7,
            5,6,4,32,3,62,0,11,3,64,
            36,24,5,6,4,0,36,16,17,18,
            19,13,7,14,15,12,8,9,10,20,
            21,1,34,3,2,0,48,59,28,49,
            29,50,51,30,25,52,53,26,60,31,
            61,54,55,23,56,57,58,2,7,22,
            47,27,5,6,4,3,36,24,64,0,
            36,1,34,3,63,0,3,62,33,68,
            1,17,18,19,13,14,15,12,8,9,
            10,20,21,16,2,7,11,0,22,25,
            23,26,14,15,12,8,9,10,20,21,
            16,1,2,7,17,18,19,13,75,3,
            0,3,63,34,13,0,2,7,3,62,
            36,0,22,25,14,15,12,8,9,10,
            20,21,16,2,7,17,18,19,13,1,
            23,0,33,3,36,34,1,0,24,3,
            8,2,1,4,6,5,63,0,67,5,
            6,4,33,1,68,81,14,15,12,8,
            9,10,69,70,65,66,71,72,73,74,
            76,77,78,79,80,82,83,62,64,84,
            85,86,87,88,90,89,91,92,93,75,
            24,63,36,34,3,0,3,36,34,2,
            22,0,64,33,68,0,94,95,62,38,
            40,11,44,46,41,35,42,43,39,37,
            45,32,3,24,17,18,19,13,14,15,
            12,9,10,20,21,16,8,1,59,60,
            61,55,47,52,50,51,49,48,53,54,
            56,57,58,31,28,26,27,30,22,25,
            23,29,5,6,4,7,2,0,35,0,
            68,81,14,15,12,9,10,69,70,65,
            66,71,72,73,74,76,77,78,79,80,
            82,83,64,84,85,86,87,88,89,90,
            91,92,93,36,33,34,27,22,28,29,
            30,25,26,31,23,24,3,1,2,5,
            6,4,8,0,3,36,62,64,0,64,
            84,85,86,87,88,89,90,91,92,93,
            11,8,69,70,9,10,66,65,71,72,
            73,74,76,77,12,78,79,80,67,75,
            34,62,82,83,63,5,6,4,36,24,
            3,0,38,40,11,44,46,41,35,42,
            43,39,37,45,32,24,3,14,15,12,
            8,9,10,20,21,16,1,2,7,17,
            18,19,13,0,75,3,67,0,8,1,
            33,34,3,27,47,48,59,28,49,29,
            50,51,30,52,53,26,60,31,61,54,
            55,56,57,58,2,7,5,6,4,67,
            22,25,23,0,55,47,52,50,51,49,
            48,53,54,56,57,58,63,24,31,28,
            26,27,30,29,22,25,23,36,2,8,
            5,6,4,33,34,3,1,0,8,27,
            47,22,48,59,28,49,29,50,51,30,
            25,52,53,26,60,31,61,54,55,23,
            56,57,58,2,7,67,4,6,5,0,
            94,27,47,22,48,59,28,49,29,50,
            51,30,25,52,53,26,60,31,61,54,
            55,23,56,57,58,7,1,5,6,24,
            3,32,4,2,8,0,27,47,22,48,
            59,28,49,29,50,51,30,25,52,53,
            26,60,31,61,54,55,23,56,57,58,
            2,7,5,6,4,11,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            151,29,39,19,16,164,29,10,96,29,
            29,29,97,74,97,74,74,97,74,97,
            91,148,122,29,29,69,62,12,158,46,
            29,103,144,103,144,103,103,103,144,160,
            29,144,158,148,44,44,157,131,10,17,
            74,141,29,29,148,29,158,29,29,99,
            81,76,29,158,74,131,29,131,29,131,
            72,157,58,109,173,121,144,74,64,70,
            62,17,29,62,105,15,17,17,103,29,
            29,116,29,29,17,12,29,8,29,16,
            1,158,29,158,29,144,30,131,103,131,
            49,137,53,60,49,29,133,8,8,8,
            8,8,59,8,8,8,29,29,29,29,
            29,29,29,29,29,29,29,158,127,22,
            29,177,144,131,29,8,29,29,29,158,
            29,17,8,17,168,134,29,134,134,99,
            116,29,116,121,29,29,29,81,158,8,
            158,131,13,16,112,103,56,29,29,49,
            67,158,49,60,59,67,8,8,8,8,
            8,8,8,8,8,8,8,158,158,129,
            133,133,79,79,34,134,8,8,8,8,
            8,8,8,8,8,8,8,8,8,8,
            8,8,8,134,8,44,44,126,148,109,
            13,131,158,170,17,158,29,158,158,105,
            116,8,158,30,121,56,13,8,103,67,
            29,8,8,60,59,8,148,155,158,158,
            158,60,29,29,29,29,29,29,29,29,
            29,29,29,29,29,29,29,29,157,158,
            146,85,52,17,170,116,134,116,116,8,
            13,17,8,29,141,74,13,60,60,131,
            87,146,29,29,8,109,158,56,41,170,
            17,158,29,121,8,74,144,52,158,13,
            51,29,29,103,8,83,158,170,17,116,
            144,56,37,64,60,103,8,116,158,13,
            8,60,116,60
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            89,88,87,86,80,85,84,5,0,112,
            0,1,50,0,32,1,24,0,34,1,
            108,89,88,87,86,80,85,84,0,104,
            1,61,0,1,119,0,127,0,137,0,
            129,27,0,52,0,136,21,0,81,0,
            96,73,5,1,0,74,0,1,5,44,
            0,97,0,5,73,0,30,0,1,36,
            48,34,46,28,0,21,116,0,98,0,
            114,0,131,0,34,46,65,64,28,0,
            80,76,77,78,79,68,54,0,1,29,
            37,101,27,0,37,27,75,50,1,29,
            0,1,61,93,0,27,37,1,38,0,
            28,46,34,1,0,21,34,46,64,65,
            1,0,61,1,32,0,124,1,29,0,
            46,34,1,10,0,1,29,28,60,0,
            132,29,1,0,64,65,1,21,0,28,
            34,36,0,29,1,110,0,29,53,1,
            67,0,29,1,133,0,1,29,53,33,
            0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            2,85,87,99,97,98,86,9,10,11,
            3,8,84,6,7,68,81,82,83,12,
            13,48,76,92,64,69,44,55,60,63,
            72,100,1,90,77,42,45,46,49,50,
            51,57,58,59,65,71,47,52,56,61,
            62,66,67,74,75,78,79,80,54,70,
            73,91,29,31,16,17,30,4,14,15,
            18,19,20,21,89,22,23,24,25,26,
            5,27,28,32,33,34,35,36,37,38,
            39,40,41,101,53,88,93,94,95,96
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,0,107,111,112,113,114,190,
            0,0,0,115,116,117,118,119,120,121,
            103,122,123,105,0,124,130,191,134,142,
            0,106,129,165,0,168,125,128,0,0,
            0,0,0,102,162,164,0,166,0,104,
            152,167,133,141,0,0,0,0,127,163,
            156,176,179,180,181,0,0,144,151,0,
            169,175,0,0,132,145,146,147,148,153,
            174,178,109,136,137,138,139,140,143,149,
            150,0,155,159,161,182,195,108,110,126,
            131,135,0,154,158,0,160,170,173,187,
            0,189,0,192,0,194,0,0,0,0,
            0,157,0,171,172,177,0,183,184,0,
            185,186,188,0,0,193,0,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            133,191,276,153,84,90,219,47,246,1,
            56,100,118,33,199,27,61,96,170,255,
            272,291,295,259,15,8,8,65,68,73,
            105,128,68,180,185,188,299,41,174,266,
            8,73,209,143,237,143,209,266,20,80,
            166,225,225,225,225,225,20,108,80,108,
            108
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            141,141,141,141,6,6,141,53,252,6,
            31,6,31,38,204,31,31,6,168,141,
            31,31,6,263,18,6,6,31,71,82,
            6,31,131,183,183,183,31,44,177,269,
            11,76,204,160,240,146,212,284,25,82,
            168,227,229,231,233,235,22,115,76,110,
            123
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,76,5,78,52,52,76,69,41,130,
            66,52,36,11,76,113,66,52,93,33,
            6,5,5,23,105,131,130,64,82,60,
            52,34,51,77,77,77,3,96,93,7,
            130,60,76,78,42,78,76,5,105,60,
            93,88,87,86,85,84,105,36,60,48,
            36
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            62,62,62,62,75,75,62,62,95,75,
            34,75,34,34,11,34,34,75,24,62,
            34,34,75,63,5,75,75,34,1,8,
            75,34,2,2,2,2,34,64,2,34,
            67,8,11,11,35,2,2,34,2,8,
            24,7,59,60,60,55,2,1,8,1,
            1
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            120,120,9,120,93,93,120,68,78,3,
            97,93,104,125,120,74,97,93,5,77,
            9,9,9,39,117,1,3,97,99,164,
            93,104,109,120,120,120,9,70,5,12,
            3,164,120,120,78,120,120,9,117,164,
            5,121,121,121,121,121,117,104,164,106,
            104
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            159,67,159,33,0,102,0,159,33,0,
            30,127,102,0,194,128,0,191,0,128,
            0,159,191,0,159,0,235,1,214,0,
            103,0,234,1,1,5,0,103,103,0,
            228,101,0,31,151,0,174,199,101,11,
            173,0,104,0,0,171,101,1,164,0,
            171,101,1,0,182,1,0,160,101,0,
            179,0,149,160,0,9,0,174,0,149,
            0,9,0,126,26,209,101,33,0,126,
            209,101,26,33,0,126,26,33,0,126,
            209,101,33,0,126,33,0,134,0,2,
            0,171,103,0,2,103,0,171,101,1,
            134,0,2,0,169,103,0,151,1,0,
            162,0,174,206,101,11,127,223,59,0,
            104,0,223,59,0,130,3,0,0,0,
            104,0,174,206,101,11,223,59,0,3,
            0,0,0,104,0,161,0,105,0,222,
            101,161,0,101,161,0,157,105,0,192,
            59,0,130,0,192,61,0,192,60,0,
            203,101,11,221,127,220,180,0,221,127,
            220,180,0,3,0,0,104,0,220,180,
            0,130,0,3,0,0,104,0,203,101,
            11,220,180,0,189,0,148,0,147,0,
            146,0,145,0,144,0,138,41,0,77,
            2,106,103,105,0,138,121,132,1,44,
            0,53,128,0,201,101,11,0,132,83,
            122,0,29,123,0,183,1,0,103,112,
            0,183,1,16,0,174,199,101,11,121,
            183,1,0,103,3,0,110,0,104,0,
            219,1,105,0,132,33,105,0,132,1,
            0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1315,0,533,0,721,1681,431,0,2232,1653,
            922,2742,2579,399,900,523,472,547,1884,1599,
            1429,838,734,632,2566,2549,2463,2045,2732,2724,
            2695,2685,2673,2515,2665,2657,2649,1451,1563,1539,
            1515,1491,1839,1467,989,1393,1368,1344,1319,1294,
            1269,1244,1219,1194,1169,1144,1119,1094,1069,1044,
            958,651,933,873,367,1020,709,785,754,682,
            607,579,0,606,1307,0,2750,2342,2314,2285,
            2254,2226,2206,2178,1754,2156,2122,1676,1706,1646,
            1592,0,1179,1016,783,592,1756,1414,2421,1896,
            2481,1874,0,2426,428,1414,2093,2066,1970,1896,
            1725,1874,1867,2024,821,2363,1963,1789,0,1584,
            489,367,428,0,2818,2814,2756,1963,1756,2446,
            1970,1414,1789,1725,2809,489,2794,367,2093,2158,
            2789,1867,2066,2620,2024,2097,2780,2426,2775,2760,
            2390,821,1584,2376,2321,2361,2614,2594,2031,1752,
            806,2120,428,2288,2212,2587,2580,2488,2480,2124,
            0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,218,4,101,129,232,237,208,184,5,
            6,4,185,180,186,61,60,187,59,188,
            189,101,1,2,134,101,1,11,1,1,
            1,220,128,192,128,192,223,192,128,160,
            149,128,151,101,134,146,1,225,208,202,
            151,128,191,136,101,148,238,13,197,101,
            1,236,2,13,127,11,127,11,149,8,
            160,1,33,101,101,36,128,151,64,160,
            63,121,1,36,201,45,37,39,43,42,
            35,41,46,44,137,11,40,38,127,129,
            101,234,214,1,221,128,101,11,101,8,
            101,101,26,126,101,106,1,16,21,20,
            10,9,8,12,15,14,105,108,114,109,
            116,115,118,117,120,119,122,171,129,101,
            172,233,128,11,173,8,148,136,8,2,
            3,132,101,127,1,1,138,1,1,101,
            63,159,63,101,200,2,7,36,121,1,
            2,11,203,161,204,101,206,127,207,101,
            181,224,101,126,209,181,93,92,91,89,
            90,88,87,86,85,84,64,183,132,161,
            1,1,81,68,1,33,70,69,8,65,
            66,10,9,77,76,74,73,72,71,78,
            12,80,79,83,82,164,165,1,101,36,
            101,11,2,153,167,132,35,132,132,201,
            63,36,235,101,101,206,174,64,36,181,
            36,209,26,126,8,121,101,1,183,183,
            219,132,109,109,108,108,115,115,114,114,
            114,114,117,116,119,118,132,120,1,182,
            101,160,101,167,124,121,1,121,121,36,
            203,222,63,151,128,194,174,126,126,11,
            160,101,121,121,63,101,171,199,101,124,
            167,132,138,36,63,194,128,101,171,174,
            36,228,127,68,33,229,167,124,121,95,
            128,199,150,64,159,68,33,121,167,174,
            67,159,121,159
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "MAX",
            "MIN",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "member_name",
            "type_name",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "identifier_token",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "typedef_name_in_declspec",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier",
            "extended_asm_param"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 32,
           SCOPE_UBOUND      = 60,
           SCOPE_SIZE        = 61,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 344,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3383,
           MAX_LA            = 2147483647,
           NUM_RULES         = 366,
           NUM_NONTERMINALS  = 139,
           NUM_SYMBOLS       = 239,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2395,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 94,
           EOLT_SYMBOL       = 94,
           ACCEPT_ACTION     = 2905,
           ERROR_ACTION      = 3017;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
