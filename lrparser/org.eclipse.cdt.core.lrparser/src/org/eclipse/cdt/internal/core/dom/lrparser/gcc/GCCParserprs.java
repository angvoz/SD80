/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.gcc;

public class GCCParserprs implements lpg.lpgjavaruntime.ParseTable, GCCParsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,4,
            4,3,3,2,2,8,1,0,1,1,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,6,8,0,0,1,1,3,3,3,
            0,1,0,1,2,4,2,1,1,1,
            3,1,1,2,3,7,8,0,1,0,
            1,3,1,3,1,1,1,1,1,1,
            3,1,1,1,1,1,3,1,2,2,
            1,5,3,1,3,5,1,3,1,3,
            2,4,3,5,4,6,6,3,5,1,
            2,3,4,5,0,1,2,1,3,1,
            1,3,2,1,1,1,1,2,1,2,
            3,1,1,1,3,1,2,2,2,3,
            4,5,1,7,3,0,0,1,1,3,
            3,4,1,1,2,3,2,3,2,1,
            0,1,2,1,1,1,1,1,2,4,
            3,6,2,4,1,1,1,1,2,6,
            3,1,3,1,4,0,1,1,1,3,
            1,0,4,1,0,1,2,1,3,4,
            4,1,0,1,2,2,3,2,2,3,
            1,1,1,1,1,-92,-29,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-6,-25,
            0,0,-2,-102,0,0,0,-214,-297,0,
            0,0,0,0,0,0,0,-45,0,-8,
            -42,0,0,0,0,0,0,0,-12,0,
            0,0,0,0,0,-3,0,-9,0,0,
            0,0,0,-27,0,0,0,0,0,0,
            0,0,0,0,0,0,-31,-26,0,0,
            0,0,0,0,-10,0,0,-269,0,0,
            0,0,0,0,-58,-131,-105,0,0,0,
            0,0,-22,0,0,0,0,0,0,0,
            0,0,0,-157,0,-109,0,0,0,0,
            0,0,0,-313,0,0,0,-23,0,-106,
            0,0,0,0,0,-33,0,-28,0,0,
            0,0,0,0,0,0,-219,0,0,0,
            0,0,0,0,0,0,-30,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-166,0,0,0,
            0,0,0,0,-271,0,0,0,0,0,
            0,0,0,0,-237,-34,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-46,-306,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-11,0,-114,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -35,0,0,-133,0,-293,0,0,0,0,
            0,0,0,0,0,0,0,-61,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-43,0,0,0,-38,0,0,
            0,0,0,-63,0,-50,-309,0,0,0,
            0,0,0,0,0,0,0,0,-80,0,
            0,0,0,0,0,0,0,0,0,-87,
            0,0,0,-68,0,0,0,0,0,0,
            0,0,0,-65,0,0,0,0,0,0,
            0,0,0,0,0,0,-51,-77,0,0,
            -53,-210,-57,0,0,0,0,0,0,0,
            0,-62,-55,-60,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-40,-74,0,
            0,0,0,0,0,0,0,0,-194,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-56,-159,0,0,0,0,0,0,
            0,0,0,0,-173,-145,0,0,0,0,
            0,0,0,0,0,0,0,-64,-209,0,
            0,0,0,0,0,0,0,0,-4,0,
            0,-81,0,0,0,0,0,0,-59,-321,
            0,0,0,0,0,0,0,0,0,-99,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-101,0,-24,0,
            -243,0,0,0,0,0,0,0,0,0,
            0,0,-211,0,0,0,0,0,0,0,
            0,0,-82,-172,0,0,0,0,0,0,
            0,0,0,0,0,-234,0,0,-84,-164,
            0,0,0,0,0,0,-91,0,0,0,
            -21,0,-162,0,0,0,-104,0,0,0,
            0,0,0,0,0,0,-135,0,0,0,
            0,0,0,0,0,0,0,0,0,-14,
            -85,-93,0,-88,0,0,0,0,0,0,
            0,0,0,-95,0,0,0,0,0,0,
            -90,0,0,0,0,0,0,-142,0,0,
            0,0,0,0,0,0,0,0,-44,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-174,0,0,0,0,0,0,0,
            0,0,0,-67,0,-94,0,0,0,0,
            0,0,0,0,0,-161,0,-278,0,0,
            0,0,0,0,0,0,0,0,-267,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-96,-89,0,0,0,0,0,0,0,
            0,0,0,-163,0,-47,0,0,0,0,
            0,0,0,0,0,0,-176,-78,0,0,
            0,0,0,0,0,0,0,-107,0,-79,
            0,0,0,0,0,0,0,0,0,-215,
            0,-177,0,0,0,0,0,0,0,0,
            0,0,0,-118,-129,0,0,0,0,0,
            0,0,0,0,-216,-221,0,0,-178,-86,
            0,0,0,0,0,0,0,0,0,-158,
            0,-141,0,0,0,0,0,0,0,0,
            0,0,0,-179,0,0,0,0,0,0,
            0,0,0,0,0,-143,-160,0,0,0,
            0,0,0,0,0,0,0,-171,-180,0,
            0,0,0,0,0,0,0,0,0,-187,
            0,-188,0,0,0,0,0,0,0,0,
            0,0,-220,-181,0,0,0,0,0,0,
            0,0,0,0,-224,0,-223,0,0,0,
            0,0,0,0,0,0,-235,-226,-182,0,
            0,0,0,0,0,0,0,0,0,0,
            -227,-231,0,0,0,0,0,0,0,0,
            0,0,0,-183,0,0,0,0,0,0,
            0,0,0,-119,0,0,-242,0,0,0,
            0,0,0,0,0,0,0,-247,-184,0,
            0,0,0,0,0,0,0,0,-120,-248,
            -250,-279,0,0,0,0,0,0,0,0,
            0,0,-249,-185,0,0,0,0,0,0,
            0,0,0,0,0,-192,-193,0,0,0,
            0,0,0,0,0,0,0,-268,-186,0,
            0,0,0,0,0,0,0,0,0,-285,
            -272,0,0,0,0,0,0,0,0,0,
            0,0,-296,-230,0,0,0,0,0,0,
            0,0,0,0,-121,-280,-286,0,0,0,
            0,0,0,0,0,0,-287,-122,-236,0,
            0,0,0,0,0,0,0,0,0,0,
            -288,0,0,0,0,0,0,0,0,0,
            0,-240,-123,0,0,0,0,0,0,0,
            0,0,0,-299,0,0,0,0,0,0,
            0,0,0,0,0,0,-241,0,0,0,
            0,0,0,0,0,0,0,0,-320,-124,
            0,0,0,0,0,0,0,0,0,-270,
            -295,-110,0,0,0,0,0,0,0,0,
            0,0,0,-212,-316,0,0,0,0,0,
            0,0,0,-125,0,-300,0,0,0,0,
            0,0,-311,0,0,0,-116,0,0,0,
            0,0,0,0,0,0,0,-170,0,0,
            -199,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-281,-126,0,0,0,
            0,0,0,0,0,-307,-314,0,0,0,
            0,0,0,0,0,0,0,0,-303,-127,
            0,0,0,0,0,0,0,0,-326,0,
            0,-128,0,0,0,0,0,0,0,0,
            0,-312,0,0,0,0,0,0,0,0,
            0,-132,0,-136,0,0,0,0,0,0,
            0,0,0,0,-324,-319,0,0,0,0,
            0,0,0,0,-138,-139,-308,0,0,0,
            0,0,0,0,0,0,0,-140,-146,-175,
            -200,-19,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-153,0,-111,-151,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-7,-117,0,0,0,0,
            0,0,0,-323,0,0,0,0,0,0,
            0,0,-154,-155,-322,0,0,0,0,0,
            0,0,0,-238,0,0,0,-156,0,-167,
            0,0,-233,0,-327,-168,0,0,0,0,
            0,-328,0,0,0,0,-225,-239,0,0,
            0,0,-251,0,0,-252,-253,-54,0,0,
            -48,0,0,0,0,0,0,0,0,-254,
            0,0,0,0,-255,0,0,0,0,0,
            0,-256,0,0,0,0,0,0,-257,0,
            0,-258,-71,0,0,0,0,0,0,0,
            0,-259,0,0,0,0,-260,-261,-262,-203,
            0,0,0,0,0,0,0,0,0,0,
            -263,-76,0,0,0,0,0,0,0,-264,
            -265,0,-266,-282,-291,0,0,0,0,0,
            -292,-130,0,0,0,-301,0,-147,0,0,
            0,0,-310,0,0,0,0,-17,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-169,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-149,0,0,0,
            -13,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-217,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-73,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-228,0,0,0,-112,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-70,0,-100,0,0,0,
            0,0,0,0,0,0,0,0,0,-302,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-148,0,0,-283,
            0,0,0,-246,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-15,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-98,0,0,
            0,-49,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-66,-195,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-75,0,-165,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-83,0,0,-20,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-150,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-32,0,-152,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-229,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-36,0,-274,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-276,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -39,0,-277,0,0,0,0,0,0,0,
            0,0,0,0,0,-189,0,0,0,0,
            0,0,0,0,0,0,0,0,-213,0,
            0,-317,0,0,0,0,-290,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-325,0,0,0,0,
            0,0,0,0,-201,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-329,0,0,0,0,0,0,0,-289,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-5,0,0,
            0,0,0,0,0,-16,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-275,0,0,-222,0,0,-18,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-1,0,0,0,0,0,0,0,0,
            0,0,0,-204,0,0,0,0,0,0,
            0,0,0,0,0,-37,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-205,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-206,0,0,0,0,0,0,0,
            0,0,0,0,0,-207,0,0,0,0,
            0,0,0,0,0,0,0,0,-208,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-41,0,0,0,0,0,-52,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-103,0,0,0,0,0,0,0,
            0,0,0,-202,0,0,0,0,0,0,
            0,0,-218,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-108,0,0,
            -245,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-113,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-144,0,-190,0,0,-115,
            0,0,0,0,0,0,0,0,-137,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-191,
            0,-196,0,0,0,0,0,0,0,0,
            0,-232,0,0,-69,0,-197,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-198,0,0,0,0,0,0,0,
            0,0,0,0,0,-284,0,-244,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -294,0,0,-273,0,0,-304,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-72,0,0,0,
            -298,0,0,0,-97,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-134,0,-315,0,0,0,
            0,0,0,-305,0,0,0,0,0,0,
            0,0,-318,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            115,1,48,48,24,24,50,50,23,23,
            2,2,2,2,3,3,3,4,4,5,
            5,5,5,5,5,5,5,73,73,96,
            96,6,6,6,6,6,6,6,6,6,
            6,6,7,7,8,8,8,8,9,9,
            9,14,14,14,15,15,15,15,15,16,
            16,16,17,17,18,18,19,19,20,20,
            21,21,22,22,26,26,26,26,26,26,
            26,26,26,26,26,26,37,32,25,116,
            116,98,98,59,38,38,38,38,38,38,
            38,39,39,39,33,33,99,99,74,74,
            40,40,41,41,41,66,66,42,42,42,
            42,43,43,43,43,43,53,53,29,29,
            29,29,29,54,54,54,88,88,83,83,
            83,83,84,84,84,85,85,85,86,86,
            86,87,87,87,100,100,89,89,90,55,
            57,57,57,57,57,67,69,69,69,69,
            69,69,69,69,69,69,69,69,78,78,
            28,28,75,75,117,118,79,79,76,76,
            76,91,101,101,102,102,92,92,92,60,
            119,119,103,93,93,93,77,77,120,104,
            104,105,105,94,94,30,31,31,31,56,
            51,51,44,44,44,44,34,34,35,45,
            45,46,36,36,106,106,47,122,122,121,
            121,52,52,52,52,52,52,52,52,52,
            107,58,58,58,58,49,80,80,70,70,
            70,71,71,61,61,123,123,82,82,81,
            81,81,62,62,62,63,64,64,64,65,
            65,65,65,68,68,68,72,124,97,97,
            97,97,95,125,126,126,127,127,128,128,
            115,115,129,129,108,108,108,108,130,130,
            109,109,109,110,110,10,10,10,27,27,
            11,11,131,131,111,111,111,112,112,132,
            132,113,113,12,133,133,134,134,114,114,
            114,13,136,136,54,90,90,90,103,103,
            103,120,117,118,49,91,312,385,14,19,
            15,1084,1058,44,1234,1335,344,315,316,317,
            1259,1373,1348,1444,1410,1510,1487,1522,74,409,
            505,1678,91,444,1062,724,134,215,1552,821,
            14,19,15,1084,42,44,1234,1335,171,1905,
            713,688,1259,1373,1348,1444,1410,1510,1753,1241,
            136,133,135,159,256,215,1102,2075,845,318,
            315,316,317,138,45,165,344,315,316,317,
            313,142,145,148,151,409,517,447,1489,1615,
            596,1821,2346,2368,1582,952,134,215,1300,456,
            488,226,234,229,1633,234,1163,1602,318,315,
            316,317,321,996,1468,189,344,315,316,317,
            136,133,135,159,1041,2211,1596,1762,14,19,
            15,1084,40,138,866,165,134,215,1203,311,
            1062,142,145,148,151,409,447,648,337,1615,
            596,1821,2346,2368,1582,243,1420,1513,456,261,
            136,133,135,159,1773,484,294,1435,1421,1542,
            256,215,379,138,188,165,357,319,315,316,
            317,142,145,148,151,409,1762,1134,336,1615,
            596,1821,2346,2368,1582,1486,389,14,19,15,
            1084,1058,44,1234,1335,447,1665,763,455,1259,
            1373,1348,1444,1410,1510,1487,1522,74,262,337,
            1580,283,409,1508,389,14,19,15,1084,1058,
            44,1234,1335,1650,722,323,986,1259,1373,1348,
            1444,1410,1510,1487,1522,74,384,973,1402,283,
            14,19,15,1084,42,35,344,315,316,317,
            1197,447,295,288,1166,456,1552,1544,14,19,
            15,1084,42,44,1234,1335,134,215,171,1988,
            1259,1373,1348,1444,1410,1510,1487,1522,73,190,
            289,288,1323,887,539,1544,248,312,471,212,
            144,133,135,159,171,1907,108,1380,389,14,
            19,15,1084,1058,44,1234,1335,309,289,447,
            1556,1259,1373,1348,1444,1410,1510,1487,1522,74,
            505,1817,310,283,1260,490,14,19,15,1084,
            1058,44,1234,1335,642,384,230,1136,1259,1373,
            1348,1444,1410,1510,1487,1522,74,637,503,948,
            457,1140,1552,1283,14,19,15,1084,42,44,
            1234,1335,970,1041,1686,290,1259,1373,1729,1544,
            104,124,241,87,318,315,316,317,1759,1436,
            1112,14,19,15,1084,1058,44,1234,1335,1768,
            948,2715,291,1259,1373,1348,1444,1410,1510,1487,
            1522,74,227,1759,1640,283,14,19,15,1084,
            1058,44,1234,1335,89,1602,171,948,1259,1373,
            1348,1444,1410,1510,1487,1522,74,333,623,1552,
            331,14,19,15,1084,42,44,1234,1335,503,
            839,87,1351,1259,1373,1348,1728,157,1185,1759,
            1530,1544,14,19,15,1084,1058,44,1234,1335,
            171,2049,126,245,1259,1373,1348,1444,1410,1510,
            1487,1522,74,341,322,986,283,754,1799,838,
            2498,1402,1022,14,19,15,1084,42,35,318,
            315,316,317,1552,922,14,19,15,1084,42,
            44,1234,1335,1458,1062,1273,1992,1259,1373,1348,
            1444,1410,1741,401,226,707,1134,329,292,1459,
            558,456,1544,220,644,223,711,503,1596,249,
            1681,570,2492,1764,256,215,1212,1574,864,14,
            19,15,1084,1058,44,1234,1335,171,1173,199,
            126,1259,1373,1348,1444,1410,1510,1487,1522,74,
            629,1735,1704,775,62,401,226,231,154,656,
            318,315,316,317,1511,220,644,223,225,1036,
            1034,497,738,182,1580,572,1110,2117,1552,1310,
            14,19,15,1084,1058,44,1234,1335,339,1763,
            2635,398,1259,1373,1348,1444,1410,1510,1487,1522,
            74,1372,195,1358,91,14,19,15,1084,1058,
            44,1234,1335,233,1763,2513,1773,1259,1373,1348,
            1444,1410,1510,1487,1522,74,171,2632,1640,1237,
            14,19,15,1084,1058,44,1234,1335,233,1763,
            2681,437,1259,1373,1348,1444,1410,1510,1487,1522,
            74,242,1058,1552,331,14,19,15,1084,42,
            44,1234,1335,280,503,1653,1621,1259,1373,1348,
            1444,1410,1510,1487,1522,93,1633,1552,1171,14,
            19,15,1084,1058,44,1234,1335,197,568,127,
            1171,1259,1373,1348,1444,1410,1510,1487,1522,74,
            820,123,1552,85,14,19,15,1084,1058,44,
            1234,1335,1599,122,1662,1759,1259,1373,1348,1444,
            1410,1510,1487,1522,74,689,171,545,84,1552,
            1171,14,19,15,1084,1058,44,1234,1335,232,
            1759,330,1171,1259,1373,1348,1444,1410,1510,1487,
            1522,74,278,111,1552,83,14,19,15,1084,
            1058,44,1234,1335,320,125,1171,1759,1259,1373,
            1348,1444,1410,1510,1487,1522,74,277,1715,1552,
            82,14,19,15,1084,1058,44,1234,1335,121,
            1759,340,1759,1259,1373,1348,1444,1410,1510,1487,
            1522,74,236,1764,1552,81,14,19,15,1084,
            1058,44,1234,1335,2668,1759,16,1171,1259,1373,
            1348,1444,1410,1510,1487,1522,74,1764,1759,1552,
            80,14,19,15,1084,1058,44,1234,1335,2166,
            2684,1759,1716,1259,1373,1348,1444,1410,1510,1487,
            1522,74,2192,285,1552,79,14,19,15,1084,
            1058,44,1234,1335,346,2213,325,1602,1259,1373,
            1348,1444,1410,1510,1487,1522,74,206,1759,1552,
            78,14,19,15,1084,1058,44,1234,1335,1557,
            1759,1602,1764,1259,1373,1348,1444,1410,1510,1487,
            1522,74,1755,1759,1552,77,14,19,15,1084,
            1058,44,1234,1335,1761,244,1014,1014,1259,1373,
            1348,1444,1410,1510,1487,1522,74,21,1759,1552,
            76,14,19,15,1084,1058,44,1234,1335,20,
            1764,1171,183,1259,1373,1348,1444,1410,1510,1487,
            1522,74,275,1748,1552,75,14,19,15,1084,
            1058,44,1234,1335,2711,1172,1721,1602,1259,1373,
            1348,1444,1410,1510,1487,1522,74,1602,1330,1552,
            92,14,19,15,1084,42,44,1234,1335,196,
            207,171,573,1259,1373,1348,1444,1410,1510,1487,
            1522,93,1552,504,14,19,15,1084,1058,44,
            1234,1335,23,22,1171,246,1259,1373,1348,1444,
            1410,1510,1487,1522,74,247,1567,1552,1337,14,
            19,15,1084,1058,44,1234,1335,2737,214,295,
            109,1259,1373,1348,1444,1410,1510,1487,1522,74,
            347,1759,1552,1347,14,19,15,1084,42,39,
            318,315,316,317,1552,1171,14,19,15,1084,
            42,44,1234,1335,344,281,1759,2211,1259,1373,
            1348,1444,1750,447,401,226,231,1618,117,14,
            19,15,1084,33,221,644,223,225,1577,788,
            1435,1552,276,14,19,15,1084,42,44,1234,
            1673,297,271,1070,1095,274,1552,601,14,19,
            15,1084,42,44,1234,1335,1759,1759,257,215,
            1259,1373,1348,1444,1410,1510,1487,1522,93,1552,
            387,14,19,15,1084,42,44,1234,1335,1759,
            282,2286,1340,1259,1373,1348,1444,1410,1510,1487,
            1522,93,1552,284,14,19,15,1084,42,44,
            1234,1335,296,2312,1227,204,1259,1373,1348,1444,
            1410,1510,1487,1522,93,1552,1748,14,19,15,
            1084,42,44,1234,1335,1173,1298,1764,205,1259,
            1373,1348,1444,1410,1510,1487,1522,93,64,1269,
            1703,1552,1163,14,19,15,1084,42,44,1234,
            1676,1635,344,315,316,317,838,2492,1552,556,
            14,19,15,1084,42,38,318,315,316,317,
            257,215,134,215,1662,1202,1618,1409,14,19,
            15,1084,32,1992,447,344,315,316,317,1655,
            401,226,231,1127,1287,1602,137,133,135,159,
            220,644,223,225,1717,134,215,1681,1319,139,
            933,165,299,1238,2492,1764,1736,143,146,149,
            152,409,1602,318,315,316,317,1778,802,141,
            133,135,159,1326,257,215,1684,445,190,356,
            1940,1683,140,296,165,154,656,401,226,231,
            532,318,315,316,317,566,1036,220,644,223,
            225,110,1282,86,1754,26,941,887,2707,1579,
            298,95,1720,838,2492,1100,108,94,96,97,
            98,99,1722,318,315,316,317,1729,443,1723,
            1552,109,14,19,15,1084,42,44,1234,1335,
            1992,514,1,356,1259,1695,2666,401,226,231,
            1678,846,106,1184,953,1770,200,220,644,223,
            225,1774,1136,2533,1681,110,1303,86,171,948,
            941,887,1336,1235,2914,95,2914,1742,794,1100,
            108,94,96,97,98,99,2914,2914,318,315,
            316,317,314,87,2914,109,401,226,231,1062,
            1198,2914,155,656,2914,2164,220,644,223,225,
            2914,2914,2914,265,276,2914,107,251,356,2914,
            2914,446,2914,2914,269,1070,1095,274,2914,256,
            215,344,315,316,317,2914,2914,974,448,2914,
            110,2914,86,266,2914,941,887,2914,2914,2914,
            95,134,215,1696,1100,108,94,96,97,98,
            99,279,2914,318,315,316,317,2914,2914,611,
            109,401,226,231,2914,147,133,135,159,1644,
            2735,220,644,223,225,263,127,356,738,276,
            1552,106,14,19,15,1084,42,37,556,269,
            1070,1095,274,2914,2914,171,456,971,2914,110,
            2914,86,2914,2914,941,887,1886,2914,1298,95,
            1427,2492,2914,1100,108,94,96,97,98,99,
            318,315,316,317,887,1650,105,171,948,109,
            1238,2492,2914,2914,1294,2247,2914,1940,2914,2914,
            319,315,316,317,401,226,231,2914,308,2914,
            107,2914,87,2914,220,644,223,225,279,1211,
            751,1754,2914,2914,401,226,231,2914,2914,2914,
            318,315,316,317,220,644,223,225,495,456,
            2914,1754,838,2492,2914,2914,276,2117,2914,2914,
            2914,211,319,315,316,317,269,1070,1095,274,
            2914,537,1656,2666,2914,2914,2914,199,2914,926,
            171,948,2914,201,2914,1298,401,226,231,318,
            315,316,317,2687,2914,614,220,644,223,225,
            2914,2914,2914,1853,2914,87,2211,926,1034,971,
            2914,2914,1261,401,226,231,2914,318,315,316,
            317,496,2914,221,644,223,225,2914,788,2914,
            2914,2914,684,948,2211,1329,2914,1650,2914,2914,
            194,401,226,1566,2914,318,315,316,317,893,
            880,221,644,223,1565,110,788,86,728,948,
            941,2914,2211,2914,2914,95,2914,2914,2914,1100,
            1579,94,96,97,98,99,2914,1463,2914,772,
            948,110,2914,86,648,2914,941,319,315,316,
            317,95,2914,2416,2914,1100,103,94,96,97,
            98,99,110,211,86,816,948,941,2914,2914,
            2914,2914,95,876,1656,2914,1100,101,94,96,
            97,98,99,2914,882,2914,860,948,110,2914,
            86,2914,2914,941,319,315,316,317,95,2914,
            2914,2914,1100,102,94,96,97,98,99,110,
            2914,86,904,948,941,2914,2914,2914,2914,95,
            2914,2914,2914,1100,118,94,96,97,98,99,
            2914,1675,2914,948,948,110,2914,86,2914,2914,
            941,319,315,316,317,95,1020,2551,2914,1100,
            114,94,96,97,98,99,110,2914,86,171,
            948,941,992,948,2914,2914,95,1663,456,2914,
            1100,1766,94,96,97,98,99,318,315,316,
            317,2914,2914,2914,87,110,2914,86,2914,2914,
            941,1751,2914,2914,2211,95,1762,2914,276,1100,
            113,94,96,97,98,99,1036,948,269,1070,
            1095,274,2914,2914,2914,1552,648,14,19,15,
            1084,42,44,1677,2914,2320,2914,268,261,110,
            2914,86,1080,948,941,2914,2914,1421,1542,95,
            706,2914,2914,1100,120,94,96,97,98,99,
            318,315,316,317,2914,110,2914,86,434,416,
            941,2914,2914,2914,2914,95,507,2211,2914,1100,
            119,94,96,97,98,99,344,315,316,317,
            2914,306,171,948,2914,1533,948,799,569,788,
            2914,2914,276,2914,2914,2914,134,215,344,315,
            316,317,271,1070,1095,274,2914,87,2914,2914,
            87,305,373,416,1446,2914,2914,115,134,215,
            150,133,135,159,1552,2914,14,19,15,1084,
            42,44,1234,1335,2914,306,926,2914,1259,1702,
            2914,799,153,133,135,159,318,315,316,317,
            1552,1311,14,19,15,1084,42,44,1234,1335,
            2914,2914,2914,2211,1709,305,303,304,2914,2914,
            488,226,235,1552,2914,14,19,15,1084,42,
            44,1234,1335,2914,2914,788,1552,1712,14,19,
            15,1084,42,44,1234,1335,2914,2914,2914,1552,
            1722,14,19,15,1084,42,44,1234,1335,2914,
            2914,2914,1329,1727,2914,2914,2914,2914,1329,2914,
            302,304,318,315,316,317,2914,383,318,315,
            316,317,2914,1199,456,2914,2914,2914,2914,2211,
            2914,2338,2914,2914,1552,2211,14,19,15,1084,
            42,44,1690,1329,2914,2914,2914,2914,2914,2914,
            2914,648,1762,318,315,316,317,648,171,356,
            2019,1329,2914,2914,2914,2914,2047,2914,2914,2914,
            2211,318,315,316,317,1552,2914,14,19,15,
            1084,42,36,87,261,2914,2914,199,2211,2914,
            1162,2914,648,1085,1542,1533,356,171,356,2914,
            1552,1420,14,19,15,1084,42,34,2914,1552,
            648,14,19,15,1084,42,35,2914,2226,2320,
            87,2914,87,2914,887,2914,199,115,2914,1162,
            171,356,1552,2914,14,19,15,1084,42,47,
            1160,2914,621,456,1148,315,456,1552,2365,14,
            19,15,1084,42,46,87,2914,2226,2914,199,
            2914,1187,1162,1552,2914,14,19,15,1084,42,
            45,199,2914,2914,1762,2914,1728,2914,1464,1248,
            14,19,15,1084,42,43,318,315,316,317,
            2226,315,456,2914,1533,948,2914,1738,2914,2914,
            2914,2914,1034,2744,2914,2914,261,318,315,316,
            317,2914,1260,2914,2914,1085,1542,1693,2914,87,
            1762,1533,948,2914,2753,1705,115,319,315,316,
            317,2914,2914,2914,194,319,315,316,317,2914,
            2914,2914,2914,1262,880,1708,87,1533,948,2914,
            2914,2914,261,115,1747,319,315,316,317,2914,
            1384,1496,1542,1750,319,315,316,317,2914,2914,
            2914,2914,87,319,315,316,317,2914,2914,115,
            2914,2914,2914,2914,2914,2914,2914,1497,2914,2914,
            2914,2914,2914,2914,2914,2914,2914,2914,2914,2914,
            2914,2914,2914,2914,2914,2914,2914,2914,2914,2914,
            2914,2914,2914,1519,2914,0,1,400,0,1,
            418,0,1,445,0,400,128,0,418,128,
            0,445,128,0,400,129,0,418,129,0,
            445,129,0,400,130,0,418,130,0,445,
            130,0,445,187,0,418,187,0,400,187,
            0,187,191,0,445,186,0,418,186,0,
            400,186,0,186,191,0,400,131,0,418,
            131,0,445,131,0,400,132,0,418,132,
            0,445,132,0,179,228,0,2921,1,0,
            225,237,0,1,3153,0,225,238,0,7,
            9,0,179,17,0,178,18,0,1,3142,
            0,112,2242,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,0,1,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,0,62,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,38,39,40,41,42,43,0,0,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,63,62,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            0,64,46,47,48,49,50,51,52,53,
            54,55,56,57,58,59,60,79,62,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,0,1,46,47,48,49,50,
            51,52,53,54,55,56,57,58,59,60,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,0,0,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,0,1,2,0,4,5,6,7,8,
            0,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,0,26,27,28,
            29,30,31,0,0,0,0,1,2,13,
            4,5,6,8,8,12,61,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,0,1,2,3,4,5,6,7,
            8,67,0,0,0,1,0,4,5,6,
            44,7,0,9,22,23,24,25,26,27,
            28,29,30,31,32,22,23,24,0,26,
            27,28,29,30,31,70,71,9,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,0,1,2,3,4,5,6,
            7,8,0,0,0,0,0,1,76,4,
            5,6,8,7,12,22,23,24,25,26,
            27,28,29,30,31,32,80,22,23,24,
            0,26,27,28,29,30,31,0,8,46,
            47,48,49,50,51,52,53,54,55,56,
            57,58,59,60,0,1,0,3,4,5,
            6,7,0,0,0,3,0,3,0,76,
            4,5,6,0,70,71,22,23,24,76,
            26,27,28,29,30,31,32,25,22,23,
            24,0,26,27,28,29,30,31,0,8,
            46,47,48,49,50,51,52,53,54,55,
            56,57,58,59,60,0,62,0,1,63,
            3,4,5,6,7,0,62,0,0,0,
            1,2,4,5,6,72,73,74,75,22,
            23,24,44,26,27,28,29,30,31,32,
            22,23,24,80,26,27,28,29,30,31,
            0,70,71,46,47,48,49,50,51,52,
            53,54,55,56,57,58,59,60,63,62,
            0,1,0,3,4,5,6,7,0,1,
            8,64,4,5,6,7,0,72,73,74,
            75,0,22,23,24,9,26,27,28,29,
            30,31,32,86,87,88,89,90,91,92,
            93,94,95,22,23,24,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,81,62,0,1,2,3,0,0,2,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,0,0,2,25,4,
            5,6,0,8,2,32,33,34,35,36,
            37,38,39,40,41,42,43,0,1,2,
            3,44,44,0,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,44,
            0,1,25,0,4,5,6,7,0,32,
            33,34,35,36,37,38,39,40,41,42,
            43,0,1,2,3,22,23,24,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,1,0,25,4,5,6,
            7,0,1,32,33,34,35,36,37,38,
            39,40,41,42,43,0,1,2,3,0,
            0,2,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,0,1,2,
            25,4,5,6,0,0,2,32,33,34,
            35,36,37,38,39,40,41,42,43,0,
            1,2,3,44,44,0,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,1,0,25,4,5,6,7,69,
            0,32,33,34,35,36,37,38,39,40,
            41,42,43,0,1,2,3,0,63,44,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,0,1,2,25,4,
            5,6,0,0,69,32,33,34,35,36,
            37,38,39,40,41,42,43,0,1,2,
            3,0,0,2,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,0,
            0,1,25,0,1,2,3,7,9,32,
            33,34,35,36,37,38,39,40,41,42,
            43,0,1,2,3,0,64,2,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,1,63,25,44,45,0,
            7,2,3,32,33,34,35,36,37,38,
            39,40,41,42,43,0,1,2,3,0,
            0,1,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,0,0,1,
            25,0,22,44,45,7,9,32,33,34,
            35,36,37,38,39,40,41,42,43,0,
            1,2,3,22,23,24,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,1,2,25,4,5,6,7,0,
            0,32,33,34,35,36,37,38,39,40,
            41,42,43,22,23,24,0,26,27,28,
            29,30,31,0,0,0,1,2,3,0,
            0,0,3,4,5,6,0,46,47,48,
            49,50,51,52,53,54,55,56,57,58,
            59,60,0,1,25,0,4,5,6,7,
            0,0,0,3,9,3,4,5,6,44,
            45,10,11,0,22,23,24,61,26,27,
            28,29,30,31,61,25,61,25,0,1,
            61,0,0,64,2,4,5,6,46,47,
            48,49,50,51,52,53,54,55,56,57,
            58,59,60,22,23,24,0,26,27,28,
            29,30,31,61,0,9,64,0,1,2,
            0,4,5,6,4,5,6,46,47,48,
            49,50,51,52,53,54,55,56,57,0,
            1,2,3,0,81,67,7,8,0,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,0,0,2,26,0,1,2,3,
            4,5,6,0,8,2,3,0,64,0,
            63,33,0,4,5,6,9,8,22,23,
            24,25,26,27,28,29,30,31,0,1,
            2,3,4,5,6,0,8,68,0,0,
            44,45,4,5,6,10,11,44,45,0,
            22,23,24,25,26,27,28,29,30,31,
            0,0,2,72,73,74,75,0,1,2,
            3,0,44,45,7,8,67,10,11,12,
            13,14,15,16,17,18,19,20,21,0,
            1,2,3,26,82,0,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,1,2,3,0,77,78,7,8,
            0,10,11,12,13,14,15,16,17,18,
            19,20,21,84,85,68,0,1,2,0,
            4,5,6,0,0,0,1,2,4,5,
            6,62,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,0,0,2,
            2,0,0,0,1,2,4,5,6,68,
            7,8,9,10,11,12,13,14,15,16,
            17,18,19,20,21,0,1,2,0,63,
            2,3,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,0,1,2,
            0,1,0,3,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,0,
            1,2,0,45,0,3,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,1,2,0,45,0,25,7,8,
            0,10,11,12,13,14,15,16,17,18,
            19,20,21,0,1,2,0,45,0,67,
            7,8,0,10,11,12,13,14,15,16,
            17,18,19,20,21,0,1,2,22,23,
            24,0,7,8,3,10,11,12,13,14,
            15,16,17,18,19,20,21,0,1,2,
            0,65,66,3,7,8,0,10,11,12,
            13,14,15,16,17,18,19,20,21,0,
            1,2,0,65,66,25,7,8,0,10,
            11,12,13,14,15,16,17,18,19,20,
            21,0,0,2,0,1,4,5,6,68,
            8,7,0,9,0,14,15,0,4,5,
            6,61,0,0,0,0,4,5,6,4,
            5,6,0,10,11,0,4,5,6,4,
            5,6,0,0,0,44,3,0,4,5,
            6,4,5,6,0,0,0,3,3,0,
            0,0,0,3,22,23,24,0,0,67,
            69,4,5,6,0,0,2,0,22,23,
            24,4,5,6,83,25,0,0,45,0,
            4,5,6,4,5,6,79,0,0,45,
            45,3,0,0,61,3,3,0,0,0,
            3,3,0,0,2,61,61,0,9,2,
            0,61,9,0,65,66,65,66,0,9,
            0,0,9,65,66,0,61,0,0,77,
            78,0,0,45,0,0,0,45,61,0,
            0,0,45,0,0,0,0,0,0,0,
            63,0,0,0,0,62,0,0,0,0,
            62,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,63,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2914,5058,1,1578,1,1,1,5027,1,680,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2922,1,1,1,1,
            1,1,3014,863,1048,1023,1060,924,2072,802,
            669,921,708,879,335,713,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2914,2920,7,2899,2899,2899,2899,2899,2899,
            2899,2899,2899,2899,2899,2899,2899,2899,2899,2899,
            2899,2899,2899,2899,2899,2899,2899,2899,2899,2899,
            2899,2899,2899,2899,2899,2899,2899,2899,2899,2899,
            2899,2899,2899,2899,2899,2899,2899,156,66,2899,
            2899,2899,2899,2899,2899,2899,2899,2899,2899,2899,
            2899,2899,2899,2899,2098,2899,2914,5058,1,1578,
            1,1,1,5027,1,680,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2922,1,1,1,1,1,1,3014,863,
            1048,1023,1060,924,2072,802,669,921,708,879,
            1,739,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,789,2920,2914,
            5058,1,2923,1,1,1,5027,1,680,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2922,1,1,1,1,1,
            1,3014,863,1048,1023,1060,924,2072,802,669,
            921,708,879,334,713,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2914,5058,1,2923,1,1,1,5027,1,680,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2922,1,1,1,1,
            1,1,3014,863,1048,1023,1060,924,2072,802,
            669,921,708,879,287,258,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2914,1634,2548,1,400,418,445,1648,2599,
            2914,2565,1890,2590,2927,1616,1457,476,2924,2925,
            2926,1598,1422,3130,3131,3132,2914,3076,3077,3075,
            3133,3078,3074,64,2914,48,270,3142,1837,809,
            400,418,445,2653,255,712,507,3081,3086,3085,
            3083,3084,3082,3087,3088,3080,3089,3090,3091,1778,
            1970,920,2914,1,1,2923,1,1,1,1,
            1,3174,2914,129,2914,3094,68,2824,2827,2830,
            684,3095,2914,628,1,1,1,2922,1,1,
            1,1,1,1,3221,3130,3131,3132,2914,3076,
            3077,3075,3133,3078,3074,2637,2622,380,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2914,1,1,2923,1,1,1,
            1,1,65,2914,50,130,2914,3094,301,2833,
            2836,2839,2653,3095,712,1,1,1,2922,1,
            1,1,1,1,1,3221,1434,3130,3131,3132,
            2914,3076,3077,3075,3133,3078,3074,2914,694,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2914,1,2914,193,1,1,
            1,1,1,59,1,2923,131,2887,2914,300,
            2866,2869,2872,69,2637,2622,1,1,1,2805,
            1,1,1,1,1,1,3112,2922,3130,3131,
            3132,49,3076,3077,3075,3133,3078,3074,222,2653,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2914,193,2914,1,2119,
            192,1,1,1,1,61,2920,42,132,1,
            3142,891,2875,2878,2881,2479,2466,2453,2430,1,
            1,1,684,1,1,1,1,1,1,3112,
            3130,3131,3132,1434,3076,3077,3075,3133,3078,3074,
            70,2637,2622,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,2145,192,
            2914,1,2914,193,1,1,1,1,187,2851,
            837,1299,2848,2845,2842,2851,231,2479,2466,2453,
            2430,251,1,1,1,234,1,1,1,1,
            1,1,3112,1274,1249,1224,1199,1174,1124,1149,
            1099,1072,1047,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,853,193,2914,5058,1,2923,224,273,984,
            5027,1,680,1,1,1,1,1,1,1,
            1,1,1,1,1,270,2914,1944,2922,400,
            418,445,2914,255,438,3014,863,1048,1023,1060,
            924,2072,802,669,921,708,879,2914,5058,1,
            2923,684,684,2914,5027,1,680,1,1,1,
            1,1,1,1,1,1,1,1,1,684,
            186,2863,2922,252,2860,2857,2854,2863,2914,3014,
            863,1048,1023,1060,924,2072,802,669,921,708,
            879,2914,5058,1,2923,1,1,1,5027,1,
            680,1,1,1,1,1,1,1,1,1,
            1,1,1,208,5050,2914,2922,400,418,445,
            5050,2914,3154,3014,863,1048,1023,1060,924,2072,
            802,669,921,708,879,2914,5058,1,2923,272,
            2914,1009,5027,1,680,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3142,891,
            2922,2806,2809,2812,2914,2914,424,3014,863,1048,
            1023,1060,924,2072,802,669,921,708,879,2914,
            5058,1,2923,684,1532,293,5027,1,680,1,
            1,1,1,1,1,1,1,1,1,1,
            1,351,5053,2914,2922,400,418,445,5053,1453,
            2914,3014,863,1048,1023,1060,924,2072,802,669,
            921,708,879,2914,5058,1,2923,2914,616,1555,
            5027,1,680,1,1,1,1,1,1,1,
            1,1,1,1,1,255,3142,891,2922,400,
            418,445,213,2914,1624,3014,863,1048,1023,1060,
            924,2072,802,669,921,708,879,2914,5058,1,
            2923,2914,203,498,5027,1,680,1,1,1,
            1,1,1,1,1,1,1,1,1,2914,
            210,3094,2922,1,2908,1837,2919,3095,820,3014,
            863,1048,1023,1060,924,2072,802,669,921,708,
            879,2914,5058,1,2923,179,1349,2884,5027,1,
            680,1,1,1,1,1,1,1,1,1,
            1,1,1,2914,2943,1509,2922,684,2918,1,
            2944,1944,267,3014,863,1048,1023,1060,924,2072,
            802,669,921,708,879,2914,5058,1,2923,2914,
            326,3241,5027,1,680,1,1,1,1,1,
            1,1,1,1,1,1,1,2914,209,555,
            2922,2914,3242,684,267,555,996,3014,863,1048,
            1023,1060,924,2072,802,669,921,708,879,2914,
            5058,1,2923,3130,3131,3132,5027,1,680,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,463,891,2922,2806,2809,2812,3092,2914,
            2914,3014,863,1048,1023,1060,924,2072,802,669,
            921,708,879,3130,3131,3132,88,3076,3077,3075,
            3133,3078,3074,28,2914,1,3142,1837,264,237,
            2914,2914,225,2890,2890,2890,2914,3081,3086,3085,
            3083,3084,3082,3087,3088,3080,3089,3090,3091,1778,
            1970,920,2914,3093,225,1,400,418,445,3092,
            2914,51,238,2923,680,225,2896,2896,2896,684,
            264,2524,2295,71,3130,3131,3132,1324,3076,3077,
            3075,3133,3078,3074,2941,2922,264,225,1,2893,
            225,128,2914,225,959,2815,2818,2821,3081,3086,
            3085,3083,3084,3082,3087,3088,3080,3089,3090,3091,
            1778,1970,920,3130,3131,3132,2914,3076,3077,3075,
            3133,3078,3074,225,2914,1096,225,1,3142,891,
            184,2806,2809,2812,400,418,445,3081,3086,3085,
            3083,3084,3082,3087,3088,3080,3089,3090,3091,1,
            2931,2548,2917,2914,853,3174,2932,598,2914,2565,
            1890,2590,2927,1616,1457,476,2924,2925,2926,1598,
            1422,60,338,2914,934,897,17,179,2902,2902,
            179,179,179,1,2902,1944,2919,231,810,1,
            1486,1667,112,2806,2809,2812,235,255,179,179,
            179,2902,179,179,179,179,179,179,18,178,
            2905,2905,178,178,178,53,2905,2916,255,62,
            2902,2902,400,418,445,2524,2295,684,2918,72,
            178,178,178,2905,178,178,178,178,178,178,
            2914,2914,2585,2479,2466,2453,2430,2914,2931,2548,
            2917,2914,2905,2905,2932,841,3174,2565,1890,2590,
            2927,1616,1457,476,2924,2925,2926,1598,1422,1,
            2931,2548,27,1397,2911,2914,2932,2599,5038,2565,
            1890,2590,2927,1616,1457,476,2924,2925,2926,1598,
            1422,2914,2931,2548,2917,2914,2404,1730,2932,2599,
            2914,2565,1890,2590,2927,1616,1457,476,2924,2925,
            2926,1598,1422,388,2239,2916,1,3142,891,2914,
            2806,2809,2812,2914,352,2914,2931,2548,400,418,
            445,27,2932,2599,5038,2565,1890,2590,2927,1616,
            1457,476,2924,2925,2926,1598,1422,2914,2914,776,
            1768,2914,355,2914,2931,2548,400,418,445,2916,
            2932,2599,1361,2565,1890,2590,2927,1616,1457,476,
            2924,2925,2926,1598,1422,1,2931,2548,2914,1486,
            723,2919,2932,2599,5038,2565,1890,2590,2927,1616,
            1457,476,2924,2925,2926,1598,1422,1,2931,2548,
            2914,1137,1,2919,2932,2599,5038,2565,1890,2590,
            2927,1616,1457,476,2924,2925,2926,1598,1422,2914,
            2931,2548,1,2918,2914,116,2932,2599,5038,2565,
            1890,2590,2927,1616,1457,476,2924,2925,2926,1598,
            1422,2914,2931,2548,2914,2918,54,116,2932,2599,
            2914,2565,1890,2590,2927,1616,1457,476,2924,2925,
            2926,1598,1422,1,2931,2548,253,116,58,3173,
            2932,2599,2914,2565,1890,2590,2927,1616,1457,476,
            2924,2925,2926,1598,1422,2914,2931,2587,3130,3131,
            3132,2914,2932,2599,2917,2565,1890,2590,2927,1616,
            1457,476,2924,2925,2926,1598,1422,2914,2931,2620,
            2914,1471,1581,2923,2932,2599,2914,2565,1890,2590,
            2927,1616,1457,476,2924,2925,2926,1598,1422,332,
            2931,2548,2914,1471,1581,2922,2932,2599,2914,2565,
            1890,2590,2927,1616,1457,476,2924,2925,2926,1598,
            1422,31,1,749,2914,3094,2806,2809,2812,2916,
            255,3095,2914,654,354,2938,2939,67,400,418,
            445,1713,158,52,2914,185,400,418,445,400,
            418,445,346,2524,2295,345,400,418,445,400,
            418,445,250,2914,353,2020,2919,347,400,418,
            445,400,418,445,2914,2914,254,2919,2919,57,
            2914,56,63,2923,3130,3131,3132,202,55,3174,
            1287,400,418,445,2914,209,1937,348,3130,3131,
            3132,400,418,445,1286,2922,349,28,2918,350,
            400,418,445,400,418,445,789,1,2914,2918,
            2918,2919,1,2914,474,2919,2921,1,286,41,
            90,907,324,2914,764,1668,998,2914,1361,2362,
            191,1920,1361,355,1471,1581,1471,1581,1,208,
            2914,2914,351,1471,1581,2914,4328,2914,2914,2404,
            1730,2914,2914,2918,2914,2914,2914,2918,657,2914,
            2914,2914,90,2914,2914,2914,2914,2914,2914,2914,
            3095,2914,2914,2914,2914,2920,2914,2914,2914,2914,
            907,2914,2914,2914,2914,2914,2914,2914,2914,2914,
            2914,2914,2914,2914,2914,2914,2914,2914,2914,2914,
            2914,3094
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            590,1,353,466,590,80,387,624,624,624,
            399,75,399,75,75,399,75,399,355,470,
            468,457,624,468,325,417,231,588,139,75,
            382,379,382,139,382,75,468,473,470,315,
            470,3,4,525,355,80,518,201,468,204,
            166,470,175,326,209,315,230,231,315,77,
            82,80,115,473,407,468,525,143,527,355,
            468,201,201,125,468,325,571,519,519,382,
            624,624,558,624,624,519,325,263,573,263,
            466,341,314,266,231,80,77,82,115,115,
            407,554,527,235,163,554,280,341,573,573,
            573,573,573,147,573,573,573,271,492,497,
            495,503,499,506,505,508,507,509,315,410,
            355,314,51,201,112,80,573,175,166,323,
            519,573,519,339,573,385,573,573,326,558,
            263,558,468,311,421,421,209,315,215,315,
            82,112,255,82,115,117,475,117,554,407,
            314,554,163,146,143,573,573,573,573,573,
            573,573,573,573,573,573,315,315,412,341,
            341,382,382,216,573,573,573,573,573,573,
            573,573,573,573,573,573,573,573,573,573,
            573,573,573,573,265,10,522,470,527,112,
            123,571,519,315,624,315,315,325,558,573,
            314,82,257,117,112,573,382,407,383,573,
            573,163,147,125,470,522,315,315,315,163,
            495,495,492,492,499,499,497,497,497,497,
            505,503,507,506,263,508,525,315,15,410,
            123,519,571,558,573,558,558,215,112,518,
            573,514,257,515,112,163,163,123,412,15,
            480,80,573,527,315,117,48,216,519,315,
            324,257,573,515,515,123,315,112,121,207,
            382,573,47,315,216,519,558,515,117,318,
            125,163,382,573,558,315,112,163,558
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            76,0,2,63,64,25,4,5,6,3,
            61,45,44,0,8,27,46,22,47,58,
            28,48,29,49,50,30,23,51,52,26,
            59,31,60,53,54,24,55,56,57,1,
            7,67,6,5,4,0,64,44,69,0,
            27,46,22,47,58,28,48,29,49,50,
            30,23,51,52,26,59,31,60,53,54,
            24,55,56,57,1,7,4,5,6,9,
            0,27,46,22,47,58,28,48,29,49,
            50,30,23,51,52,26,59,31,60,53,
            54,24,55,56,57,1,7,4,5,6,
            32,3,62,0,1,7,3,62,61,0,
            3,62,44,69,2,17,18,19,13,14,
            15,12,8,10,11,20,21,16,1,7,
            9,0,22,23,24,26,14,15,12,8,
            10,11,20,21,16,2,1,7,17,18,
            19,13,68,3,0,9,3,64,61,25,
            4,5,6,0,47,58,28,48,29,49,
            50,30,23,51,52,26,59,31,60,53,
            54,24,55,56,57,1,7,22,46,27,
            4,5,6,3,61,25,64,0,3,61,
            45,1,22,0,61,16,17,18,19,13,
            7,14,15,12,8,10,11,20,21,2,
            3,45,1,0,22,23,24,14,15,12,
            8,10,11,20,21,16,2,1,7,17,
            18,19,13,0,25,3,8,1,2,6,
            5,4,63,0,44,3,61,45,2,0,
            4,5,6,44,2,69,83,14,15,12,
            8,10,11,70,71,65,66,72,73,74,
            75,77,78,79,80,81,84,85,62,64,
            86,87,88,89,90,92,91,93,94,95,
            63,68,25,61,45,3,0,3,61,62,
            25,0,76,82,62,35,37,9,41,43,
            38,33,39,40,36,34,42,32,3,25,
            17,18,19,13,14,15,12,10,11,20,
            21,16,8,2,58,59,60,54,46,51,
            49,50,48,47,52,53,55,56,57,31,
            28,26,27,30,22,23,24,29,4,5,
            6,7,1,0,33,0,54,46,51,49,
            50,48,47,52,53,55,56,57,63,25,
            31,28,26,27,30,29,22,23,24,61,
            1,8,4,5,6,44,45,3,2,0,
            69,83,14,15,12,10,11,70,71,65,
            66,72,73,74,75,77,78,79,80,81,
            84,85,64,86,87,88,89,90,91,92,
            93,94,95,61,44,45,27,22,28,29,
            30,23,26,31,24,25,3,2,1,4,
            5,6,8,0,3,61,62,64,0,64,
            86,87,88,89,90,91,92,93,94,95,
            9,8,70,71,10,11,66,65,72,73,
            74,75,77,78,12,79,80,81,68,45,
            62,84,85,63,4,5,6,61,25,3,
            0,8,2,44,45,3,27,46,47,58,
            28,48,29,49,50,30,51,52,26,59,
            31,60,53,54,55,56,57,1,7,4,
            5,6,67,22,23,24,0,35,37,9,
            41,43,38,33,39,40,36,34,42,32,
            25,3,14,15,12,8,10,11,20,21,
            16,2,1,7,17,18,19,13,0,76,
            27,46,22,47,58,28,48,29,49,50,
            30,23,51,52,26,59,31,60,53,54,
            24,55,56,57,1,7,8,4,5,6,
            25,3,32,2,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            154,31,21,60,150,10,99,31,31,31,
            100,76,100,76,76,100,76,100,94,36,
            109,31,31,71,12,134,32,31,106,143,
            106,143,106,106,106,143,158,31,143,134,
            36,19,19,133,125,10,61,76,140,31,
            31,36,31,102,63,134,31,39,134,76,
            125,31,125,31,125,74,133,55,117,127,
            108,143,76,65,72,113,59,61,61,106,
            31,31,145,31,31,61,12,31,8,31,
            60,1,134,31,134,31,143,136,125,106,
            125,15,162,52,57,15,31,166,8,8,
            8,8,8,56,8,8,8,31,31,31,
            31,31,31,31,31,31,31,31,134,121,
            24,31,45,143,125,31,8,31,31,31,
            61,8,61,170,167,31,167,167,102,145,
            31,145,108,31,31,31,63,134,8,134,
            125,13,60,78,106,43,31,31,15,92,
            134,15,57,56,92,8,8,8,8,8,
            8,8,8,8,8,8,134,134,123,166,
            166,82,82,68,167,8,8,8,8,8,
            8,8,8,8,8,8,8,8,8,8,
            8,8,167,8,19,19,120,36,117,13,
            125,172,61,134,31,134,134,113,145,8,
            134,136,108,43,13,8,106,92,31,8,
            8,57,56,8,36,131,134,134,134,57,
            31,31,31,31,31,31,31,31,31,31,
            31,31,31,31,31,31,133,134,34,86,
            51,61,172,145,167,145,145,8,13,61,
            8,31,140,76,13,57,57,125,88,34,
            31,31,8,117,134,43,17,172,61,134,
            31,108,8,76,143,51,134,13,50,31,
            106,8,41,134,172,61,145,143,43,84,
            65,57,106,8,145,134,13,57,145
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            88,87,86,85,79,84,83,5,0,110,
            0,1,50,0,80,0,126,0,52,0,
            34,1,106,88,87,86,85,79,84,83,
            0,134,0,1,29,27,58,0,114,0,
            128,0,73,0,1,29,53,33,0,95,
            72,5,1,0,1,5,48,0,32,1,
            23,0,112,0,5,72,0,1,116,0,
            1,36,47,34,45,27,0,1,60,92,
            0,96,0,124,0,34,45,64,63,27,
            0,30,0,79,75,76,77,78,67,54,
            0,1,29,37,99,28,0,27,45,34,
            1,0,37,28,74,50,1,29,0,24,
            34,45,63,64,1,0,29,1,130,0,
            63,64,1,24,0,102,1,60,0,45,
            34,1,10,0,28,37,1,38,0,29,
            1,108,0,129,29,1,0,27,34,36,
            0,121,1,29,0,60,1,32,0,29,
            53,1,66,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,87,97,98,99,86,9,3,10,
            11,8,84,6,7,68,81,82,83,12,
            13,48,64,76,92,69,44,55,60,63,
            72,100,77,45,46,49,50,51,57,58,
            59,65,71,1,90,47,52,56,61,62,
            66,67,74,75,78,79,80,54,70,73,
            42,91,29,31,16,17,30,89,4,14,
            15,18,19,20,21,101,22,23,24,25,
            26,53,5,27,28,32,33,34,35,36,
            37,38,39,40,41,88,93,94,95,96
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,0,107,111,112,113,114,190,
            0,0,0,115,116,117,118,119,120,121,
            122,123,105,103,0,124,191,130,134,142,
            0,106,129,165,0,168,125,128,0,0,
            0,0,0,162,164,0,166,102,0,104,
            152,167,133,141,0,0,0,163,127,156,
            176,179,180,181,0,0,144,151,0,169,
            175,0,0,132,145,146,147,148,153,174,
            178,109,136,137,138,139,140,143,149,150,
            0,155,159,161,182,108,110,126,131,135,
            0,154,158,0,160,170,173,187,0,189,
            0,192,0,194,0,0,0,0,157,0,
            171,172,177,0,183,184,0,185,186,188,
            0,0,0,193,0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            124,182,267,144,75,81,210,38,237,47,
            91,109,19,190,13,52,87,161,246,263,
            282,286,250,1,27,27,56,59,64,96,
            119,59,171,176,179,290,32,165,257,64,
            200,134,228,134,200,257,6,71,157,216,
            216,216,216,216,6,99,71,99,99
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            132,132,132,132,30,30,132,44,243,17,
            30,17,24,195,17,17,30,159,132,17,
            17,30,254,4,30,30,17,62,73,30,
            17,122,174,174,174,17,35,168,260,67,
            195,151,231,137,203,275,11,73,159,218,
            220,222,224,226,8,106,67,101,114
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            77,75,5,77,52,52,75,68,41,65,
            52,36,11,75,111,65,52,92,33,6,
            5,5,22,103,128,127,63,81,58,52,
            34,51,76,76,76,3,95,92,7,58,
            75,77,42,77,75,5,103,58,92,87,
            86,85,84,83,103,36,58,47,36
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            62,62,62,62,68,68,62,62,82,45,
            68,45,45,9,45,45,68,25,62,45,
            45,68,63,4,68,68,45,2,8,68,
            45,1,1,1,1,45,64,1,45,8,
            9,9,33,1,1,45,1,8,25,7,
            58,59,59,54,1,2,8,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            119,119,9,119,92,92,119,67,77,96,
            92,103,124,119,73,96,92,5,76,9,
            9,9,39,116,1,3,96,98,163,92,
            103,108,119,119,119,9,69,5,12,163,
            119,119,77,119,119,9,116,163,5,120,
            120,120,120,120,116,103,163,105,103
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            193,127,0,191,0,127,0,159,191,0,
            159,0,232,2,212,0,103,0,231,2,
            2,4,0,103,103,0,159,44,0,102,
            0,225,101,0,31,151,0,173,197,101,
            9,172,0,104,0,0,170,101,2,163,
            0,170,101,2,0,181,2,0,158,101,
            0,179,0,149,158,0,9,0,174,0,
            149,0,9,0,126,26,207,101,44,0,
            126,207,101,26,44,0,126,26,44,0,
            126,207,101,44,0,126,44,0,134,0,
            2,0,171,103,0,2,103,0,170,101,
            2,134,0,2,0,169,103,0,151,2,
            0,162,0,173,204,101,9,128,220,58,
            0,104,0,220,58,0,130,3,0,0,
            0,104,0,173,204,101,9,220,58,0,
            3,0,0,0,104,0,160,0,105,0,
            219,101,160,0,101,160,0,157,105,0,
            191,58,0,130,0,191,60,0,191,59,
            0,201,101,9,218,128,217,179,0,218,
            128,217,179,0,3,0,0,104,0,217,
            179,0,130,0,3,0,0,104,0,201,
            101,9,217,179,0,188,0,148,0,147,
            0,146,0,145,0,144,0,138,38,0,
            77,2,106,103,105,0,138,124,132,2,
            41,0,53,128,0,199,101,9,0,132,
            85,121,0,29,123,0,182,2,0,103,
            112,0,182,2,16,0,173,197,101,9,
            124,182,2,0,103,3,0,110,0,104,
            0,216,2,105,0,132,44,105,0,132,
            2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            484,0,389,0,2632,880,1988,0,1616,1457,
            476,2668,841,388,1434,853,712,789,2479,2466,
            2453,2430,2404,1730,2524,2295,1581,1471,2653,2637,
            2622,2599,2590,598,2565,1890,1598,1422,1555,1532,
            1509,616,1486,998,1397,1372,1349,1324,1299,1274,
            1249,1224,1199,1174,1149,1124,1099,1072,1047,973,
            764,948,897,356,1023,684,810,739,657,573,
            545,0,474,723,0,614,2312,2286,2242,2213,
            2192,2166,2145,1886,2119,2098,1817,2072,1742,1678,
            0,1095,1070,644,401,2320,1420,1944,1837,2226,
            1762,0,2416,416,1420,2047,2019,1940,1837,1596,
            1762,1713,1992,839,891,1920,1653,0,1582,456,
            356,416,0,2753,2744,2687,1920,2320,2666,1940,
            1420,1653,1596,2735,456,2715,356,2047,1853,2707,
            1713,2019,724,1992,1681,2211,2416,2164,2117,517,
            839,1582,2368,1778,2346,1970,920,1821,409,596,
            1615,416,2247,448,2551,2533,2498,2492,2075,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,215,101,129,229,206,183,4,5,6,
            184,179,185,60,59,186,58,187,188,101,
            2,1,134,101,9,2,2,2,217,127,
            191,127,191,220,191,127,158,149,127,151,
            101,134,145,2,222,206,200,151,127,190,
            136,101,147,101,2,233,1,234,13,128,
            9,128,9,149,8,158,2,44,101,101,
            61,127,151,64,158,199,42,34,36,40,
            39,33,38,43,41,137,9,37,35,128,
            129,101,231,212,2,218,127,101,9,101,
            8,101,101,26,126,101,106,2,16,21,
            20,11,10,8,12,15,14,105,108,114,
            109,116,115,118,117,120,119,121,170,129,
            101,171,230,127,9,172,8,147,136,3,
            132,101,128,2,2,138,2,2,101,63,
            159,63,101,198,1,7,61,124,2,1,
            9,201,160,202,101,204,128,205,101,180,
            221,101,126,207,180,95,94,93,91,92,
            90,89,88,87,86,64,182,132,160,2,
            2,83,69,2,44,71,70,8,65,66,
            11,10,78,77,75,74,73,72,79,12,
            81,80,85,84,163,164,2,101,61,101,
            9,153,166,132,33,132,132,199,63,61,
            232,101,101,204,173,64,61,180,61,207,
            26,126,8,124,101,2,182,182,216,132,
            109,109,108,108,115,115,114,114,114,114,
            117,116,119,118,132,120,2,181,101,158,
            101,166,123,124,2,124,124,61,201,219,
            63,151,127,193,173,126,126,9,158,101,
            124,124,63,101,170,197,101,123,166,132,
            138,61,63,193,127,101,170,173,61,225,
            69,44,226,166,123,124,82,127,197,150,
            64,159,69,44,124,166,173,159,124
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "typeof",
            "__alignof__",
            "MAX",
            "MIN",
            "__attribute__",
            "__declspec",
            "asm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "member_name",
            "type_name",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "identifier_token",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "typedef_name_in_declspec",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body",
            "attribute_or_decl_specifier",
            "attribute_or_decl_specifier_se" +
            "q",
            "word",
            "extended_decl_modifier_seq",
            "extended_decl_modifier"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 32,
           SCOPE_UBOUND      = 58,
           SCOPE_SIZE        = 59,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 329,
           NT_OFFSET         = 100,
           LA_STATE_OFFSET   = 3269,
           MAX_LA            = 2147483647,
           NUM_RULES         = 355,
           NUM_NONTERMINALS  = 136,
           NUM_SYMBOLS       = 236,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2392,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 76,
           EOLT_SYMBOL       = 76,
           ACCEPT_ACTION     = 2805,
           ERROR_ACTION      = 2914;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
