//!Generate Getters and Setters One Getter Selection
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=name
inHeader=true
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};

int gooo = 1;

#endif /*C_H_*/
//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();
    char *getName() const
    {
        return name;
    }

    int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};

int gooo = 1;

#endif /*C_H_*/
//!Generate Getters and Setters One Getter Selection with Namespace
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=name
inHeader=true
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
//@C.h
#ifndef C_H_
#define C_H_

namespace Personal {
	class Person {
	
	private:
	
	  int systemId;
	
	protected:
	
	  char *name;
	
	public:
	
	  const int socSecNo;
	  
	  Person myFriend;
	
	
	  Person(int socSecNo); // contructor
	
	  ~Person(); // destructor
	
	
		char*   Name();
		
		void    Print();
		
		int     /*$*/SocSecNo/*$$*/();
		
		int     GetUniqueId();
		
		int getSystemId(){
			return systemId;
		}
		
		void setSystemId(int systemId){
			this->systemId = systemId;
		}
	};
}

int gooo = 1;

#endif /*C_H_*/

//=
#ifndef C_H_
#define C_H_

namespace Personal {
	class Person {
	
	private:
	
	  int systemId;
	
	protected:
	
	  char *name;
	
	public:
	
	  const int socSecNo;
	  
	  Person myFriend;
	
	
	  Person(int socSecNo); // contructor
	
	  ~Person(); // destructor
	
	
		char*   Name();
		
		void    Print();
		
		int     SocSecNo();
		
		int     GetUniqueId();
	    char *getName() const
	    {
	        return name;
	    }

	    int getSystemId(){
			return systemId;
		}
		
		void setSystemId(int systemId){
			this->systemId = systemId;
		}
	};
}

int gooo = 1;

#endif /*C_H_*/

//!Generate Getters and Setters One Setter Selection
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
setters=name
inHeader=true
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/
//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();
    void setName(char *name)
    {
        this->name = name;
    }

    int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/
//!Generate Getters and Setters Getter and Setter Selection
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
setters=name
getters=name
inHeader=true
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/
//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();
    char *getName() const
    {
        return name;
    }

    void setName(char *name)
    {
        this->name = name;
    }

    int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/
//!Generate Getters and Setters Multiple Selection
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=name,systemId
setters=name,systemId
inHeader=true
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();

};

int gooo = 1;

#endif /*C_H_*/

//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;
    char *getName() const
    {
        return name;
    }

    int getSystemId() const
    {
        return systemId;
    }

    void setName(char *name)
    {
        this->name = name;
    }

    void setSystemId(int systemId)
    {
        this->systemId = systemId;
    }

    Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();

};

int gooo = 1;

#endif /*C_H_*/

//!Generate Getters and Setters Visibility order 1
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=GaS.h
getters=i,isOk
setters=i,isOk
inHeader=true
//@GaS.cpp
#include "Getters.h"

GaS::Getters() {
}

GaS::~Getters() {
}

//@GaS.h
#ifndef GAS_H_
#define GAS_H_

class GaS {
public:
	GaS();
	virtual ~GaS();
	bool /*$*/isOk/*$$*/;
	void methode2();

private:
	int i;
};

#endif

//=
#ifndef GAS_H_
#define GAS_H_

class GaS {
public:
	GaS();
	virtual ~GaS();
	bool isOk;
	void methode2();
    int getI() const
    {
        return i;
    }

    bool getIsOk() const
    {
        return isOk;
    }

    void setI(int i)
    {
        this->i = i;
    }

    void setIsOk(bool isOk)
    {
        this->isOk = isOk;
    }

private:
	int i;
};

#endif

//!Generate Getters and Setters no Methods
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=id
setters=id
inHeader=true
//@C.h
#ifndef C_H_
#define C_H_

class Person {
private:
  int /*$*/id/*$$*/;
};

#endif /*C_H_*/

//=
#ifndef C_H_
#define C_H_

class Person {
private:
  int id;
public:
    int getId() const
    {
        return id;
    }

    void setId(int id)
    {
        this->id = id;
    }

};

#endif /*C_H_*/

//!Generate Getters and Setters no Methods
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=i
setters=i
inHeader=true
//@C.h
/*
 * test.h
 */

#ifndef TEST_H_
#define TEST_H_

//comment1
class test
{
	int /*$*/i/*$$*/; //comment2
	char* b;
	//comment3
};

#endif /* TEST_H_ */

//=
/*
 * test.h
 */

#ifndef TEST_H_
#define TEST_H_

//comment1
class test
{
	int i; //comment2
	char* b;
public:
    int getI() const
    {
        return i;
    }

    void setI(int i)
    {
        this->i = i;
    }

    //comment3
};

#endif /* TEST_H_ */

//!Generate Getters and Setters no Fields
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
fatalerror=true
//@C.h
/*
 * test.h
 */

#ifndef TEST_H_
#define TEST_H_

//comment1
class test
{
	void /*$*/test/*$$*/();
	//comment3
};

#endif /* TEST_H_ */

//=
/*
 * test.h
 */

#ifndef TEST_H_
#define TEST_H_

//comment1
class test
{
	void test();
	//comment3
};

#endif /* TEST_H_ */

//!Generate Getters and Setters One Getter Selection Implementation in CPP
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=name
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
#include "C.h"

char *Person::getName() const
{
    return name;
}

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();
	
	int getSystemId();
	
	void setSystemId(int systemId);
};

int gooo = 1;

#endif /*C_H_*/
//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;
    char *getName() const;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();
	
	int getSystemId();
	
	void setSystemId(int systemId);
};

int gooo = 1;

#endif /*C_H_*/
//!Generate Getters and Setters One Getter Selection with Namespace Implementation in CPP
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=name
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

char *Person::getName() const
{
    return name;
}



//@C.h
#ifndef C_H_
#define C_H_

namespace Personal {
	class Person {
	
	private:
	
	  int systemId;
	
	protected:
	
	  char *name;
	
	public:
	
	  const int socSecNo;
	  
	  Person myFriend;
	
	
	  Person(int socSecNo); // contructor
	
	  ~Person(); // destructor
	
	
		char*   Name();
		
		void    Print();
		
		int     /*$*/SocSecNo/*$$*/();
		
		int     GetUniqueId();
		
		int getSystemId(){
			return systemId;
		}
		
		void setSystemId(int systemId){
			this->systemId = systemId;
		}
	};
}

int gooo = 1;

#endif /*C_H_*/

//=
#ifndef C_H_
#define C_H_

namespace Personal {
	class Person {
	
	private:
	
	  int systemId;
	
	protected:
	
	  char *name;
	
	public:
	
	  const int socSecNo;
	  
	  Person myFriend;
	
	
	  Person(int socSecNo); // contructor
	
	  ~Person(); // destructor
	
	
		char*   Name();
		
		void    Print();
		
		int     SocSecNo();
		
		int     GetUniqueId();
	    char *getName() const;
		
		int getSystemId(){
			return systemId;
		}
		
		void setSystemId(int systemId){
			this->systemId = systemId;
		}
	};
}

int gooo = 1;

#endif /*C_H_*/

//!Generate Getters and Setters One Setter Selection Implementation in CPP
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
setters=name
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}


//=
#include "C.h"

void Person::setName(char *name)
{
    this->name = name;
}

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}


//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/
//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();
    void setName(char *name);
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/
//!Getter and Setter Selection Implementation in CPP
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
setters=name
getters=name
//@C.cpp
#include "C.h"

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//=
#include "C.h"

char *Person::getName() const
{
    return name;
}

void Person::setName(char *name)
{
    this->name = name;
}

int Person::SocSecNo(){
	return socSecNo;
}

int main(int argc, char **argv) {
	
}

//@C.h
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     /*$*/SocSecNo/*$$*/();
	
	int     GetUniqueId();
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/

//=
#ifndef C_H_
#define C_H_

class Person {

private:

  int systemId;

protected:

  char *name;

public:

  const int socSecNo;
  
  Person myFriend;


  Person(int socSecNo); // contructor

  ~Person(); // destructor


	char*   Name();
	
	void    Print();
	
	int     SocSecNo();
	
	int     GetUniqueId();
    char *getName() const;
    void setName(char *name);
	
	int getSystemId(){
		return systemId;
	}
	
	void setSystemId(int systemId){
		this->systemId = systemId;
	}
};


int gooo = 1;

#endif /*C_H_*/

//!Generate Getters and Setters no Methods Implementation in CPP
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=id
setters=id
infos=1
//@C.h
#ifndef C_H_
#define C_H_

class Person {
private:
  int /*$*/id/*$$*/;
};

#endif /*C_H_*/

//=
#ifndef C_H_
#define C_H_

class Person {
private:
  int id;
public:
    int getId() const;
    void setId(int id);
};

int Person::getId() const
{
    return id;
}

void Person::setId(int id)
{
    this->id = id;
}



#endif /*C_H_*/

//!No Methods Implementation in CPP
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=C.h
getters=i
setters=i
infos=1
//@C.h
/*
 * test.h
 */

#ifndef TEST_H_
#define TEST_H_

//comment1
class test
{
	int /*$*/i/*$$*/; //comment2
	char* b;
	//comment3
};

#endif /* TEST_H_ */

//=
/*
 * test.h
 */

#ifndef TEST_H_
#define TEST_H_

//comment1
class test
{
	int i; //comment2
	char* b;
public:
    int getI() const;
    void setI(int i);
	//comment3
};

int test::getI() const
{
    return i;
}

void test::setI(int i)
{
    this->i = i;
}



#endif /* TEST_H_ */

//!Bug 323780 "Generate Getters and Setters..." crashes
//#org.eclipse.cdt.ui.tests.refactoring.gettersandsetters.GenerateGettersAndSettersTest
//@.config
filename=Test.h
getters=testField
setters=testField

//@Test.h
#ifndef TEST_H_
#define TEST_H_

namespace foo
{
	class Test
	{
		int /*$*/testField/*$$*/;
		void foo();
	};
}

#endif
//=
#ifndef TEST_H_
#define TEST_H_

namespace foo
{
	class Test
	{
		int testField;
		void foo();
	public:
	    int getTestField() const;
	    void setTestField(int testField);
	};
}

#endif
//@Test.cpp
#include "Test.h"

namespace foo
{
    
	void Test::foo()
	{
	
	}
}
//=
#include "Test.h"

namespace foo
{
    int Test::getTestField() const
    {
        return testField;
    }

    void Test::setTestField(int testField)
    {
        this->testField = testField;
    }

    void Test::foo()
	{
	
	}
}
