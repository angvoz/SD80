<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html lang="en">

<head>
	<meta http-equiv="Content-Language" content="en-us">
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>What's new</title>
	<link rel="stylesheet" type="text/css" href="../help.css">
</head>
<body>

<p style="margin-bottom: 0in;">&nbsp; </p>
<table width="100%" border="0" cellpadding="2" cellspacing="2">
  <tbody>

    <tr>
      <td width="60%">
      <p><h1>What's new in the CDT?</h1></p>
      </td>
      <td width="40%">
      <p><img src="http://dev.eclipse.org/images/Idea.jpg"
 name="Graphic1" align="middle" hspace="50" width="120" height="86"
 border="0"></p>
      </td>

    </tr>
  </tbody>
</table>

<table width="100%" border="0" cellpadding="2" cellspacing="2">
  <tbody>
    <tr>
      <td colspan="2" valign="top" bgcolor="#0080c0">
      <p align="left"><b><font color="#ffffff">What's New in 2.0</font></b></p>
      </td>

    </tr>
  </tbody>
</table>

<h3>Enhanced Performance</h3>

<p>Builds can now be performed in the background.</p>

<p>Searches can now be performed in the background.</p>
	
<h3>Automatic Project Settings Discovery</h3>
<p>Automatically generate project defines and include paths settings from the <b>C/C++ &gt; New Make Projects &gt; Discovery Options</b> project settings.

<h3>C/C++ File Types</h3>
<p>Define specific files, especially C++ headers without extensions, using the <b>C/C++ File Types </b>global preferences or project property.</p>

<h3>Multiple Architecture Project Support</h3>
<p>Building from multiple binary formats? Choose the appropriate formats using the <b>Binary Parser</b> project option.</p>

<h3>Editor Hyperlink Naviagation</h3>
<p>Enable the editor hyperlink navigation and then you can use <b>Ctrl+click</b> to jump to the declaration of an item on the C/C++ editor.</p>

<h3>Indexer Error Markers</h3>
<p>Enable C/C++ indexing and indexer error reporting in the C/C++ Indexer properties.  This helps identify projects missing path configuration information.</p>

<h3>Rename Refactoring Support</h3>
<p>Use the Outline or the C/C++ Editor <b>Refactor &gt; Rename</b> context menu to refactor class &amp; type names, methods, function &amp; member names.</p>

<h3>Open Type</h3>
<p>Use Open Type to open up the declaration of C/C++ classes, structures, unions, typedefs, enumerations and namespaces.</p>

<h3>Automatic Refresh</h3>
<p>Configure the default behavior of the automatic retrieval of shared library and register information in the C/C++ debugger.</p>


<h3>Improved Managed Make</h3>
<p>You can now set the compiler command for managed projects.</p>

<h3>Improved Standard Make</h3>
<p>Standard Make now parses response from Make command to populate paths and symbols.</p>

<h3>Support for GNU</h3>
<p>Now supports some of the GNU extensions to the ANSI specification.</p>

<h3>Improved View and Browsing Features</h3>
<p>You can now open Include files from the Outline View.</p>
<p>You can now perform selection searches from the C/C++ Editor</p>

<h3>Improved Search</h3>
<p>Search now supports external files referenced using <tt>#include</tt>.</p>

<h3>Makefile Outline View</h3>
<p>You can now browse the structure of your Makefile in Outline View.</p>

<h3>Content Assist Enhancements</h3>
<p>Content Assist now produces proposals from classes and structure members, local &amp; global variables, pre-processor defines, pre-processor commands.</p>
<p>Content Assist now supports C++.</p>


<table width="100%" border="0" cellpadding="2" cellspacing="2">
  <tbody>
    <tr>
      <td colspan="2" valign="top" bgcolor="#0080c0">
      <p align="left"><b><font color="#ffffff">What's New in 1.2</font></b></p>
      </td>

    </tr>
  </tbody>
</table>
<p>Find out what's new in CDT 1.2.</p>

<h2>C/C++ Search</h2>
<p>You can search the projects in your workspace for references to, declarations 
or definitions of, particular elements. Only header files referenced by a source 
file in your workspace are included in a search.</p>
<h2>Build</h2>
<h3>Managed build</h3>
<p>You can now create a Managed build and have makefiles generated for you.</p>
<h3>Error parser</h3>
<p>The error parsers are now extension-points that can contributed by other 
plug-ins. The error parsers are used to detect errors or warnings or 
informational messages from compilers, linkers, etc... during a build.</p>
<h3>New Global preferences for all Standard Make Project properties</h3>
<h4>Make builder options</h4>
<p>Support changing/enabling default make targets for each workbench build type. 
New default build location setting.</p>
<h4>Make project options</h4>
<p>You can now make changes the Error Parser Configuration.  You can change the order in which error parsers are applied or disable  them entirely.</p>
<p>You can also specify which paths to include during a Make and customize preprocessor symbols to ensure proper indexing and search capabilities.</p>
<p>Notes:<br>
There are a number of "build error parsers"  (the things that turn compiler error messages into objects that we can put into the error lists).   If one parser cannot figure out what the message means, then the system moves to the next one in the list.</p>
<h4>Make target</h4>
<p>Make targets now support Stop on error build option and ability to change the 
default build command.</p>
<h4>New Standard Make projects</h4>
<p>Old Standard Make projects will be automatically updated to support the new 
options. If update is declined, then selecting Update Old Make project... from 
the context menu of the project will update the project to a new Standard Make 
project.</p>
<h2>Debug</h2>
<h3>Formatting of variables and expressions</h3>
<p>You can now select the number system (natural, decimal, hexadecimal) used to display 
variables and expressions.</p>
<h3>Variable view, detail pane</h3>
<p>In the Variable view, a detail pane has been 
added to let you see the value of a selected variable. This is practical when 
looking at a string (char *).</p>
<h3>Casting of variables, expressions and registers</h3>
<p>In the Variable view, a variable can be cast to a different type or be restored to 
its original type. Also, a pointer can be cast to an array type.</p>
<h3>Debug disable variable query</h3>
<p>The value of variables are queried at every step.</p>
<p>This can be time-consuming on certain embedded targets. The automatic 
query of variables can be disabled. Manual queries are now an option.</p>
<h2>Source location</h2>
<p>A new source locator in the Run/Debug dialog box makes it possible to add directories 
to search, mapping, and the order of the search.</p>
<h3>GDB/MI new shared library launch pane</h3>
<p>For GDB/MI code, two new actions are added in the launch view, stop-on-solib 
and auto-load-symbols. Stop-on-solib will force the debugger to stop on any 
shared library events. Auto load will load the symbols for any shared library.</p>
<h3>GDB/MI improvements in display of arrays</h3>
<p>Arrays are now separated into ranges, to limit the possibility of a timeout
on large arrays.</p>
<h2>What's new for previous releases</h2>

<p>You can keep track of previous release-specific developments in the CDT.</p>

<p>For more information, see <b> <a href="http://www.eclipse.org/cdt/">http://www.eclipse.org/cdt/</a> 
&gt; CDT Project Management/Plans</b>. The <b>Official CDT Plans</b> section lists 
previous releases.</p>


<p><img src="../images/ng00_04a.gif" ALT="IBM Copyright Statement" > </p>

</body>

</html>