/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl_v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.cpp;

public interface CPPExpressionStatementParsersym {
    public final static int
      TK_asm = 61,
      TK_auto = 51,
      TK_bool = 13,
      TK_break = 76,
      TK_case = 77,
      TK_catch = 119,
      TK_char = 14,
      TK_class = 62,
      TK_const = 46,
      TK_const_cast = 30,
      TK_continue = 78,
      TK_default = 79,
      TK_delete = 63,
      TK_do = 80,
      TK_double = 15,
      TK_dynamic_cast = 31,
      TK_else = 121,
      TK_enum = 68,
      TK_explicit = 52,
      TK_export = 81,
      TK_extern = 27,
      TK_false = 32,
      TK_float = 16,
      TK_for = 82,
      TK_friend = 53,
      TK_goto = 83,
      TK_if = 84,
      TK_inline = 54,
      TK_int = 17,
      TK_long = 18,
      TK_mutable = 55,
      TK_namespace = 56,
      TK_new = 64,
      TK_operator = 7,
      TK_private = 114,
      TK_protected = 115,
      TK_public = 116,
      TK_register = 57,
      TK_reinterpret_cast = 33,
      TK_return = 85,
      TK_short = 19,
      TK_signed = 20,
      TK_sizeof = 34,
      TK_static = 58,
      TK_static_cast = 35,
      TK_struct = 69,
      TK_switch = 86,
      TK_template = 36,
      TK_this = 37,
      TK_throw = 47,
      TK_try = 74,
      TK_true = 38,
      TK_typedef = 59,
      TK_typeid = 39,
      TK_typename = 10,
      TK_union = 70,
      TK_unsigned = 21,
      TK_using = 48,
      TK_virtual = 45,
      TK_void = 22,
      TK_volatile = 49,
      TK_wchar_t = 23,
      TK_while = 75,
      TK_integer = 40,
      TK_floating = 41,
      TK_charconst = 42,
      TK_stringlit = 28,
      TK_identifier = 1,
      TK_Completion = 2,
      TK_EndOfCompletion = 9,
      TK_Invalid = 124,
      TK_LeftBracket = 60,
      TK_LeftParen = 3,
      TK_LeftBrace = 50,
      TK_Dot = 120,
      TK_DotStar = 96,
      TK_Arrow = 103,
      TK_ArrowStar = 90,
      TK_PlusPlus = 24,
      TK_MinusMinus = 25,
      TK_And = 8,
      TK_Star = 6,
      TK_Plus = 11,
      TK_Minus = 12,
      TK_Tilde = 5,
      TK_Bang = 29,
      TK_Slash = 91,
      TK_Percent = 92,
      TK_RightShift = 88,
      TK_LeftShift = 89,
      TK_LT = 44,
      TK_GT = 65,
      TK_LE = 93,
      TK_GE = 94,
      TK_EQ = 97,
      TK_NE = 98,
      TK_Caret = 99,
      TK_Or = 100,
      TK_AndAnd = 101,
      TK_OrOr = 102,
      TK_Question = 117,
      TK_Colon = 72,
      TK_ColonColon = 4,
      TK_DotDotDot = 95,
      TK_Assign = 67,
      TK_StarAssign = 104,
      TK_SlashAssign = 105,
      TK_PercentAssign = 106,
      TK_PlusAssign = 107,
      TK_MinusAssign = 108,
      TK_RightShiftAssign = 109,
      TK_LeftShiftAssign = 110,
      TK_AndAssign = 111,
      TK_CaretAssign = 112,
      TK_OrAssign = 113,
      TK_Comma = 66,
      TK_zero = 43,
      TK_RightBracket = 118,
      TK_RightParen = 87,
      TK_RightBrace = 71,
      TK_SemiColon = 26,
      TK_ERROR_TOKEN = 73,
      TK_original_namespace_name = 122,
      TK_EOF_TOKEN = 123;

      public final static String orderedTerminalSymbols[] = {
                 "",
                 "identifier",
                 "Completion",
                 "LeftParen",
                 "ColonColon",
                 "Tilde",
                 "Star",
                 "operator",
                 "And",
                 "EndOfCompletion",
                 "typename",
                 "Plus",
                 "Minus",
                 "bool",
                 "char",
                 "double",
                 "float",
                 "int",
                 "long",
                 "short",
                 "signed",
                 "unsigned",
                 "void",
                 "wchar_t",
                 "PlusPlus",
                 "MinusMinus",
                 "SemiColon",
                 "extern",
                 "stringlit",
                 "Bang",
                 "const_cast",
                 "dynamic_cast",
                 "false",
                 "reinterpret_cast",
                 "sizeof",
                 "static_cast",
                 "template",
                 "this",
                 "true",
                 "typeid",
                 "integer",
                 "floating",
                 "charconst",
                 "zero",
                 "LT",
                 "virtual",
                 "const",
                 "throw",
                 "using",
                 "volatile",
                 "LeftBrace",
                 "auto",
                 "explicit",
                 "friend",
                 "inline",
                 "mutable",
                 "namespace",
                 "register",
                 "static",
                 "typedef",
                 "LeftBracket",
                 "asm",
                 "class",
                 "delete",
                 "new",
                 "GT",
                 "Comma",
                 "Assign",
                 "enum",
                 "struct",
                 "union",
                 "RightBrace",
                 "Colon",
                 "ERROR_TOKEN",
                 "try",
                 "while",
                 "break",
                 "case",
                 "continue",
                 "default",
                 "do",
                 "export",
                 "for",
                 "goto",
                 "if",
                 "return",
                 "switch",
                 "RightParen",
                 "RightShift",
                 "LeftShift",
                 "ArrowStar",
                 "Slash",
                 "Percent",
                 "LE",
                 "GE",
                 "DotDotDot",
                 "DotStar",
                 "EQ",
                 "NE",
                 "Caret",
                 "Or",
                 "AndAnd",
                 "OrOr",
                 "Arrow",
                 "StarAssign",
                 "SlashAssign",
                 "PercentAssign",
                 "PlusAssign",
                 "MinusAssign",
                 "RightShiftAssign",
                 "LeftShiftAssign",
                 "AndAssign",
                 "CaretAssign",
                 "OrAssign",
                 "private",
                 "protected",
                 "public",
                 "Question",
                 "RightBracket",
                 "catch",
                 "Dot",
                 "else",
                 "original_namespace_name",
                 "EOF_TOKEN",
                 "Invalid"
             };

    public final static boolean isValidForParser = true;
}
