/*******************************************************************************
* Copyright (c) 2006, 2008 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.lrparser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,4,
            4,3,3,2,2,8,1,0,1,1,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,2,1,0,
            1,3,1,1,1,1,1,1,1,1,
            3,4,3,2,4,1,2,1,1,1,
            2,5,7,5,1,0,7,5,9,8,
            3,2,2,2,3,2,4,2,2,2,
            2,2,1,1,1,1,2,1,2,2,
            2,1,2,2,1,2,2,1,2,2,
            1,2,2,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,6,8,0,0,1,1,3,3,3,
            0,1,0,1,2,4,2,1,1,1,
            3,1,1,2,3,7,8,0,1,0,
            1,3,1,3,1,1,1,1,1,1,
            3,1,1,1,1,1,3,1,2,2,
            1,5,3,1,3,5,1,3,1,3,
            2,4,3,5,4,6,6,3,5,1,
            2,3,4,5,0,1,2,1,3,1,
            1,3,2,1,1,1,1,2,1,2,
            3,1,1,1,3,1,2,2,2,3,
            4,5,1,7,3,0,0,1,1,3,
            3,4,1,1,2,3,2,3,2,1,
            0,1,2,1,1,1,1,1,2,4,
            3,6,2,4,-73,-30,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-6,0,0,-22,0,0,-23,0,0,
            0,-261,-9,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-32,0,0,0,0,-86,-2,0,0,
            0,0,0,-3,0,0,0,-19,0,-34,
            0,-120,0,-37,0,0,0,0,0,-18,
            0,-20,0,0,0,0,0,0,0,0,
            0,0,0,-33,-142,0,0,0,0,0,
            0,0,-173,-147,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -36,0,0,0,0,0,0,0,-29,0,
            0,0,0,0,0,0,0,-242,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-50,0,0,
            -272,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-43,0,0,
            0,-38,0,-275,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-11,0,0,-186,-39,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-14,0,0,0,0,-70,
            -82,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-51,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-171,0,0,0,0,0,0,
            0,0,0,0,-238,0,0,-68,0,0,
            -55,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-286,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-35,0,0,-108,0,-81,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-24,0,0,0,
            0,-182,-41,0,0,0,0,0,0,0,
            0,0,0,0,0,-44,0,0,0,-46,
            0,-45,0,0,0,0,-172,-47,0,0,
            0,0,0,0,0,0,0,-93,0,0,
            0,0,0,0,0,0,0,0,0,-48,
            0,-12,0,0,0,0,0,0,-118,-62,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-25,0,0,-208,-146,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -183,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-63,-148,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-65,0,0,0,-177,0,
            0,0,0,0,0,0,0,0,0,-149,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-26,
            -150,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-27,0,0,
            0,-151,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-61,-152,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-277,
            0,0,0,-153,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-145,-154,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-66,0,0,-213,-155,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-221,-156,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-254,-157,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-288,-158,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-202,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-134,0,0,-69,
            -207,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-106,0,0,
            -211,-164,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-175,0,0,0,0,0,0,0,0,
            0,0,0,-212,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -71,0,0,-74,-251,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-84,0,0,-271,-95,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-176,-96,0,0,0,0,
            0,0,0,0,0,0,-279,-278,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-97,0,0,-289,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-98,0,0,-94,-99,0,
            0,0,0,0,-42,0,-59,-166,0,-60,
            -178,0,0,0,0,0,0,0,0,0,
            0,0,-209,0,0,0,0,0,0,-57,
            0,0,0,0,0,0,0,0,0,0,
            -76,0,-107,0,-78,0,0,0,0,0,
            0,0,-67,0,-58,0,-17,0,0,0,
            0,0,0,0,0,-117,-5,0,-255,0,
            0,0,-119,0,0,0,0,-100,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-125,0,-138,0,-165,0,0,0,0,
            0,0,0,-111,0,-189,0,0,0,0,
            -101,0,0,0,0,0,-191,0,0,0,
            0,0,0,0,0,0,0,-179,0,0,
            0,0,0,0,0,0,0,0,0,-205,
            0,0,0,0,-285,-265,-102,0,0,0,
            0,0,-103,-121,0,-257,0,0,-200,0,
            0,0,0,0,0,0,-21,0,-104,0,
            0,-16,0,0,-105,0,-133,0,0,0,
            0,0,0,-143,0,0,0,0,0,0,
            0,0,0,0,-49,0,0,0,-8,0,
            -109,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-28,-159,0,0,
            0,0,0,0,0,-193,0,0,-256,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-112,0,-241,-114,0,
            0,0,0,0,-115,-116,-180,0,0,0,
            0,0,0,0,0,0,0,-187,-184,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-160,0,-188,0,
            0,0,0,0,-64,0,-91,-196,0,0,
            0,0,0,0,0,0,0,0,-198,0,
            -122,0,-192,0,0,0,-126,0,-53,0,
            0,-31,0,0,0,0,0,0,0,0,
            -127,0,-130,0,0,0,0,0,-128,0,
            -129,0,0,-195,0,0,0,0,0,0,
            0,0,-131,0,-79,0,-132,-139,0,0,
            0,0,-140,-197,-243,0,0,0,0,0,
            0,0,0,0,0,-40,0,0,0,0,
            0,0,0,0,0,0,-75,0,-201,0,
            -210,-181,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-204,0,0,0,
            0,-123,0,-194,0,0,0,0,0,0,
            0,0,0,0,0,0,-161,0,0,0,
            -199,0,-287,0,0,-245,0,-206,0,0,
            0,0,0,0,0,-4,0,-264,0,0,
            0,0,0,0,-218,0,0,-222,0,-247,
            0,-223,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-284,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-224,-249,-248,0,-225,
            -136,0,0,0,0,-174,-226,0,0,0,
            0,0,0,0,0,0,0,0,0,-283,
            0,-1,0,-219,0,0,0,0,0,0,
            0,0,0,-220,-239,-227,0,0,0,0,
            0,-290,0,0,-263,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-124,
            0,0,0,-294,0,-54,0,0,0,0,
            0,0,0,0,0,0,0,-270,0,0,
            0,-268,-250,0,0,-77,0,0,-228,-273,
            -137,0,0,0,0,0,0,0,0,0,
            -56,0,0,0,0,-7,0,0,0,0,
            0,0,0,0,0,0,-280,0,-229,0,
            0,0,0,-230,0,0,-190,0,-231,0,
            0,0,-167,0,-217,0,0,0,0,0,
            0,0,0,0,0,0,-240,0,-291,0,
            0,-267,0,0,0,0,0,0,-214,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-232,0,0,0,-258,0,0,0,
            0,-141,-233,-234,0,0,0,-235,-10,0,
            0,0,0,0,0,-13,-236,0,-237,0,
            0,-15,0,-252,-80,0,0,0,-72,0,
            0,0,0,0,0,-216,0,-259,-253,-260,
            0,0,-83,-135,0,0,0,0,0,0,
            -269,-274,0,-276,-85,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-282,-292,-293,0,0,0,0,
            0,-87,0,0,0,0,0,0,0,-88,
            0,0,0,0,0,0,0,0,-89,0,
            0,0,0,0,0,0,-90,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-162,0,0,-92,0,0,0,0,
            0,0,0,-113,0,0,0,0,0,0,
            0,0,0,-163,0,0,0,0,-168,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-203,0,0,0,0,-169,
            0,0,0,0,0,0,0,0,-170,0,
            0,0,0,0,0,0,-144,-215,0,0,
            0,0,0,0,0,0,-244,0,0,0,
            -52,0,-262,0,0,-110,0,0,-266,0,
            0,0,0,0,-281,0,0,-185,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-246,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            106,1,39,39,23,23,41,41,17,17,
            2,2,2,2,3,3,3,4,4,5,
            5,5,5,5,5,5,5,68,68,90,
            90,6,6,6,6,6,6,6,6,6,
            6,6,7,7,8,8,8,8,9,9,
            9,10,10,10,11,11,11,11,11,12,
            12,12,13,13,14,14,15,15,16,16,
            18,18,19,19,22,22,22,22,22,22,
            22,22,22,22,22,22,29,27,20,107,
            107,92,92,54,30,30,30,30,30,30,
            30,31,31,31,28,28,93,93,69,69,
            32,32,33,33,33,61,61,34,34,34,
            34,35,35,35,35,35,47,47,24,24,
            24,24,24,48,48,48,83,83,78,78,
            78,78,79,79,79,80,80,80,81,81,
            81,82,82,82,94,94,84,84,85,49,
            51,51,51,51,51,62,64,64,64,64,
            64,64,64,64,64,64,64,64,73,73,
            21,21,70,70,108,109,74,74,71,71,
            71,86,95,95,96,96,87,87,87,55,
            110,110,97,98,98,98,72,72,111,99,
            99,100,100,88,88,25,26,26,26,50,
            52,52,42,42,42,42,36,36,37,43,
            43,44,38,38,101,101,45,113,113,112,
            112,46,46,46,46,46,46,46,46,46,
            102,53,53,53,53,40,75,75,65,65,
            65,66,66,56,56,114,114,77,77,76,
            76,76,57,57,57,58,59,59,59,60,
            60,60,60,63,63,63,67,115,91,91,
            91,91,89,116,117,117,118,118,119,119,
            106,106,120,120,103,103,103,103,121,121,
            104,104,104,105,105,292,870,14,19,15,
            1156,1152,44,1176,1225,1205,1308,1229,1377,1341,
            1399,1383,827,1405,74,941,1235,91,324,227,
            134,215,1387,42,14,19,15,1156,42,44,
            1176,1225,1205,1308,1229,1377,1341,1399,1383,498,
            1405,73,663,136,133,135,159,1425,713,14,
            19,15,1156,40,1049,1287,313,138,709,165,
            988,2131,949,315,890,142,145,148,151,343,
            476,1562,749,1846,1429,1929,1936,1942,1402,134,
            215,127,87,233,750,1509,1949,1573,229,115,
            392,226,234,1387,1517,14,19,15,1156,42,
            44,1736,136,133,135,159,362,226,231,1654,
            257,215,220,404,223,225,138,311,165,257,
            215,827,316,1584,142,145,148,151,343,414,
            230,338,1846,1429,1929,1936,1942,1402,1330,1376,
            14,19,15,1156,1152,44,1176,1225,1205,1308,
            1229,1377,1341,1399,1383,332,1405,74,988,1945,
            283,1349,1376,14,19,15,1156,1152,44,1176,
            1225,1205,1308,1229,1377,1341,1399,1383,117,1405,
            74,233,936,283,1245,1376,14,19,15,1156,
            1152,44,1176,1225,1205,1308,1229,1377,1341,1399,
            1383,288,1405,74,328,1486,283,1387,828,14,
            19,15,1156,42,44,1176,1225,1205,1308,1229,
            1377,1341,1399,1939,288,420,310,289,1486,1688,
            1387,1053,14,19,15,1156,42,44,1176,1225,
            1205,1308,1229,1377,1341,1399,1383,290,1405,93,
            289,1486,1716,1179,1963,14,19,15,1156,1152,
            44,1176,1225,1205,1308,1229,1377,1341,1399,1383,
            243,1405,74,291,1387,551,14,19,15,1156,
            42,44,1176,1698,1571,988,2133,1134,941,1322,
            677,1222,241,14,19,15,1156,1152,44,1176,
            1225,1205,1308,1229,1377,1341,1399,1383,280,1405,
            74,868,1368,283,14,19,15,1156,1152,44,
            1176,1225,1205,1308,1229,1377,1341,1399,1383,104,
            1405,74,101,1559,283,1087,850,1406,2117,14,
            19,15,1156,1152,44,1176,1225,1205,1308,1229,
            1377,1341,1399,1383,157,1405,74,505,1486,934,
            134,215,1387,1059,14,19,15,1156,42,44,
            1176,1225,1205,1308,1923,292,101,1627,189,1486,
            101,1826,829,136,133,135,159,1387,1078,14,
            19,15,1156,42,44,1176,1702,138,1444,165,
            14,19,15,1156,33,142,145,148,151,343,
            1065,1595,412,1846,1429,1929,1936,1942,1402,1387,
            792,14,19,15,1156,1152,44,1176,1225,1205,
            1308,1229,1377,1341,1399,1383,505,1405,74,505,
            1203,91,14,19,15,1156,1152,44,1176,1225,
            1205,1308,1229,1377,1341,1399,1383,188,1405,74,
            1598,1387,955,14,19,15,1156,42,44,1176,
            1225,1205,1308,1229,1377,1341,1924,793,1387,242,
            14,19,15,1156,1152,44,1176,1225,1205,1308,
            1229,1377,1341,1399,1383,1126,1405,74,756,1387,
            85,14,19,15,1156,42,44,1176,1225,1829,
            1387,1573,14,19,15,1156,1152,44,1176,1225,
            1205,1308,1229,1377,1341,1399,1383,212,1405,74,
            355,1387,84,14,19,15,1156,1152,44,1176,
            1225,1205,1308,1229,1377,1341,1399,1383,505,1405,
            74,702,1387,83,14,19,15,1156,1152,44,
            1176,1225,1205,1308,1229,1377,1341,1399,1383,190,
            1405,74,505,1387,82,14,19,15,1156,1152,
            44,1176,1225,1205,1308,1229,1377,1341,1399,1383,
            505,1405,74,1303,1387,81,14,19,15,1156,
            1152,44,1176,1225,1205,1308,1229,1377,1341,1399,
            1383,297,1405,74,1053,1387,80,14,19,15,
            1156,1152,44,1176,1225,1205,1308,1229,1377,1341,
            1399,1383,1154,1405,74,1053,1387,79,14,19,
            15,1156,1152,44,1176,1225,1205,1308,1229,1377,
            1341,1399,1383,245,1405,74,1053,1387,78,14,
            19,15,1156,1152,44,1176,1225,1205,1308,1229,
            1377,1341,1399,1383,244,1405,74,1053,1387,77,
            14,19,15,1156,1152,44,1176,1225,1205,1308,
            1229,1377,1341,1399,1383,20,1405,74,505,1387,
            76,14,19,15,1156,1152,44,1176,1225,1205,
            1308,1229,1377,1341,1399,1383,246,1405,74,299,
            1387,75,14,19,15,1156,1152,44,1176,1225,
            1205,1308,1229,1377,1341,1399,1383,996,1405,74,
            995,1387,92,14,19,15,1156,42,44,1176,
            1225,1205,1308,1229,1377,1341,1399,1383,870,1405,
            93,1387,705,14,19,15,1156,1152,44,1176,
            1225,1205,1308,1229,1377,1341,1399,1383,182,1405,
            74,232,1387,997,14,19,15,1156,42,44,
            1176,1225,1205,1747,1387,214,14,19,15,1156,
            1152,44,1176,1225,1205,1308,1229,1377,1341,1399,
            1383,1006,1405,74,904,1387,1299,14,19,15,
            1156,42,44,1176,1225,1205,1308,1229,1377,1341,
            1399,1383,296,1405,93,1387,1469,14,19,15,
            1156,42,44,1176,1225,1205,1308,1229,1377,1341,
            1399,1383,23,1405,93,1387,1056,14,19,15,
            1156,42,44,1176,1225,1205,1776,1119,1387,204,
            14,19,15,1156,42,44,1176,1225,1205,1308,
            1229,1377,1341,1399,1383,1264,1405,93,1387,205,
            14,19,15,1156,42,44,1176,1225,1205,1308,
            1229,1377,1341,1399,1383,541,1405,93,1444,389,
            14,19,15,1156,32,178,315,1067,1472,739,
            1067,1387,1673,14,19,15,1156,42,44,1176,
            1225,1859,110,1520,123,86,1131,122,89,1949,
            1,315,2006,95,1283,108,94,96,97,98,
            99,101,1831,321,1867,1275,1922,110,257,215,
            86,1131,109,1067,1949,1058,739,58,95,1283,
            108,94,96,97,98,99,1067,406,374,1053,
            111,314,124,1067,106,87,295,109,475,362,
            226,231,1296,125,306,220,404,223,225,276,
            121,1686,235,315,1267,265,705,449,1260,107,
            269,1508,1529,274,101,1553,905,1887,247,110,
            1447,314,86,1131,305,1774,1949,948,655,266,
            95,1283,108,94,96,97,98,99,1387,279,
            14,19,15,1156,42,44,1176,1225,1864,109,
            1267,1273,362,226,231,160,836,1155,220,404,
            223,225,276,754,101,739,585,263,316,119,
            315,106,1678,269,1508,1529,274,476,1616,1122,
            303,304,1087,262,87,507,110,101,2095,86,
            1131,1538,1775,1949,359,1389,22,95,1283,108,
            94,96,97,98,99,627,708,134,215,417,
            105,219,276,362,226,528,109,236,1959,220,
            404,223,683,271,1508,1529,274,627,870,158,
            137,133,135,159,134,215,101,458,107,101,
            481,362,226,231,139,708,165,221,404,223,
            225,2118,143,146,149,152,343,144,133,135,
            159,154,502,392,226,235,1159,708,499,1060,
            284,384,1974,1187,294,1291,60,1387,441,14,
            19,15,1156,42,44,1176,1225,1869,669,1387,
            652,14,19,15,1156,42,44,1176,1225,1205,
            1308,1229,1377,1928,362,226,231,870,708,1201,
            221,404,223,225,276,480,739,1269,870,14,
            19,15,1156,42,35,271,1508,1529,274,870,
            16,1079,110,996,278,86,1131,521,739,101,
            655,1676,58,95,1283,1551,94,96,97,98,
            99,1265,1700,1241,110,277,248,86,1131,562,
            739,476,1562,1949,1067,95,1283,103,94,96,
            97,98,99,1463,285,1506,110,1473,1292,86,
            1131,2127,449,1372,1198,1067,308,95,1283,101,
            94,96,97,98,99,1425,58,362,226,231,
            256,215,2139,220,404,223,225,872,655,603,
            739,332,1387,158,14,19,15,1156,42,44,
            1176,1225,1205,1308,1229,1913,110,364,1562,86,
            1131,199,101,739,949,739,449,95,1283,102,
            94,96,97,98,99,154,502,581,1956,1841,
            405,870,87,1053,87,384,644,739,996,1549,
            2136,115,1964,362,226,231,1058,1397,1391,220,
            404,223,225,110,1738,870,86,1131,623,1944,
            685,739,745,126,95,1283,118,94,96,97,
            98,99,296,276,194,1605,1391,110,1958,206,
            86,1131,1057,1741,269,1508,1529,274,95,1283,
            114,94,96,97,98,99,1508,996,726,739,
            1511,931,655,268,200,202,1387,868,14,19,
            15,1156,42,44,1740,110,1972,1823,86,1131,
            767,739,349,374,870,199,95,1283,1971,94,
            96,97,98,99,870,870,933,110,183,306,
            86,1131,808,739,2005,870,1686,1960,95,1283,
            113,94,96,97,98,99,1964,21,275,110,
            101,739,86,1131,849,739,476,1562,281,305,
            95,1283,120,94,96,97,98,99,364,1562,
            87,110,870,1542,86,1131,667,1671,195,1266,
            870,667,95,1283,119,94,96,97,98,99,
            196,627,362,226,231,2004,1125,1598,220,404,
            223,225,1598,282,362,226,231,870,158,1518,
            220,404,223,225,1521,302,304,58,368,1523,
            1944,134,215,101,739,1503,1917,362,226,1495,
            1782,708,1297,221,404,223,1489,908,655,870,
            155,502,1067,87,141,133,135,159,279,1269,
            976,14,19,15,1156,42,35,449,140,2145,
            165,1273,1804,1534,211,201,202,908,655,211,
            1488,276,1506,672,1166,1324,1603,449,1481,446,
            1370,1603,269,1508,1529,274,942,1512,249,1515,
            1488,1273,1001,261,1545,943,655,256,215,1058,
            1581,1775,1785,1431,134,215,58,449,1547,996,
            1548,134,215,1506,1058,1647,126,134,215,1273,
            1386,1209,996,261,1502,101,315,147,133,135,
            159,197,1785,1431,150,133,135,159,256,215,
            153,133,135,159,2246,87,449,1253,2246,199,
            207,261,1527,2246,1067,996,1053,2246,2246,1386,
            1078,1431,1387,1375,14,19,15,1156,42,39,
            1387,117,14,19,15,1156,42,38,2246,1387,
            1667,14,19,15,1156,42,37,1387,414,14,
            19,15,1156,42,36,298,26,2246,2246,2246,
            2246,2246,1448,101,315,2246,1387,1414,14,19,
            15,1156,42,34,1387,760,14,19,15,1156,
            42,35,2246,87,101,315,2246,199,2246,1387,
            1527,14,19,15,1156,42,47,2246,2246,2246,
            2246,2246,2246,2246,87,990,655,2246,199,2246,
            1387,1527,14,19,15,1156,42,46,1667,1387,
            2246,14,19,15,1156,42,45,1506,1299,199,
            14,19,15,1156,42,43,2246,949,739,1667,
            1695,439,655,439,655,2246,1157,655,2246,949,
            739,2246,256,215,2246,949,739,87,101,739,
            1964,1764,2246,2246,115,1273,2246,1273,2246,87,
            1949,2246,2246,2246,312,87,115,2246,87,2246,
            2246,2246,115,2246,2246,1937,2246,2246,2246,2246,
            2246,2246,194,309,101,739,2246,261,1892,261,
            1737,1741,414,2246,2246,2246,1078,1431,1830,1431,
            1857,2246,2246,2246,87,2246,1889,2246,2246,2246,
            2246,1822,2246,2246,2246,2246,2246,2246,2246,1081,
            2246,0,179,228,0,2253,1,0,1,2485,
            0,7,9,0,179,17,0,178,18,0,
            1,2474,0,112,1760,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,0,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,0,58,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            0,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,0,58,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,0,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,0,58,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,0,42,
            43,44,45,46,47,48,49,50,51,52,
            53,54,55,56,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,57,42,43,44,45,
            46,47,48,49,50,51,52,53,54,55,
            56,0,1,2,3,0,5,0,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,0,23,24,25,26,27,28,
            0,1,2,0,1,5,3,0,1,6,
            3,0,1,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,0,1,
            2,3,4,5,0,1,61,3,0,0,
            6,41,4,0,1,2,0,19,20,21,
            22,23,24,25,26,27,28,29,83,84,
            85,86,87,88,89,90,91,92,0,76,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,0,1,2,3,4,
            5,0,1,0,3,57,0,59,5,0,
            1,73,3,60,19,20,21,22,23,24,
            25,26,27,28,29,19,20,21,0,23,
            24,25,26,27,28,0,0,42,43,44,
            45,46,47,48,49,50,51,52,53,54,
            55,56,74,75,19,20,21,0,23,24,
            25,26,27,28,0,0,1,2,73,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,0,1,
            2,22,64,5,0,1,0,3,29,30,
            31,32,33,34,35,36,37,38,39,40,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,41,
            0,0,22,69,70,71,72,7,8,29,
            30,31,32,33,34,35,36,37,38,39,
            40,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            0,0,2,22,0,5,2,81,82,5,
            29,30,31,32,33,34,35,36,37,38,
            39,40,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,41,0,0,22,41,0,1,2,7,
            8,29,30,31,32,33,34,35,36,37,
            38,39,40,0,1,2,3,4,5,6,
            7,8,9,10,11,12,13,14,15,16,
            17,18,0,0,2,22,0,1,0,3,
            2,0,29,30,31,32,33,34,35,36,
            37,38,39,40,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,41,0,1,22,3,0,41,
            2,0,0,29,30,31,32,33,34,35,
            36,37,38,39,40,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,0,74,75,22,0,0,
            2,7,8,0,29,30,31,32,33,34,
            35,36,37,38,39,40,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,73,0,1,22,3,
            41,0,0,2,2,29,30,31,32,33,
            34,35,36,37,38,39,40,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,0,0,0,22,
            0,78,6,6,6,0,29,30,31,32,
            33,34,35,36,37,38,39,40,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,0,0,0,
            22,0,1,4,3,4,41,29,30,31,
            32,33,34,35,36,37,38,39,40,0,
            19,20,21,4,23,24,25,26,27,28,
            29,66,0,0,0,1,2,0,4,6,
            0,22,5,42,43,44,45,46,47,48,
            49,50,51,52,53,54,55,56,59,58,
            0,1,0,3,4,0,69,70,71,72,
            0,0,0,1,4,41,57,0,0,19,
            20,21,4,23,24,25,26,27,28,29,
            19,20,21,59,23,24,25,26,27,28,
            22,64,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,0,58,0,
            1,4,3,4,0,0,61,0,58,4,
            0,69,70,71,72,0,64,59,19,20,
            21,64,23,24,25,26,27,28,29,19,
            20,21,0,23,24,25,26,27,28,0,
            0,42,43,44,45,46,47,48,49,50,
            51,52,53,54,55,56,59,58,0,1,
            2,3,0,58,60,0,4,0,0,0,
            5,4,4,4,0,60,0,19,20,21,
            4,23,24,25,26,27,28,0,0,22,
            22,22,5,19,20,21,0,1,22,3,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,19,20,21,30,23,
            24,25,26,27,28,57,57,65,0,61,
            61,0,67,68,0,0,0,2,42,43,
            44,45,46,47,48,49,50,51,52,53,
            54,55,56,19,20,21,0,23,24,25,
            26,27,28,0,0,2,0,0,0,41,
            0,0,6,9,6,0,42,43,44,45,
            46,47,48,49,50,51,52,53,0,1,
            2,3,4,5,66,7,8,9,10,11,
            12,13,14,15,16,17,18,0,77,2,
            0,23,0,1,2,3,4,5,0,7,
            8,9,10,11,12,13,14,15,16,17,
            18,0,1,2,3,23,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            0,41,77,65,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,0,0,0,0,65,0,1,
            2,3,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,79,0,0,
            0,0,0,19,20,21,6,57,0,1,
            2,3,58,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,0,0,0,
            0,0,0,57,60,62,63,62,63,0,
            1,2,3,65,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,0,1,
            2,3,61,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,0,1,2,
            3,0,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,0,1,2,3,
            0,5,0,7,8,9,10,11,12,13,
            14,15,16,17,18,0,1,2,3,0,
            5,0,7,8,9,10,11,12,13,14,
            15,16,17,18,0,1,2,3,57,5,
            0,7,8,9,10,11,12,13,14,15,
            16,17,18,0,1,2,3,57,5,0,
            7,8,9,10,11,12,13,14,15,16,
            17,18,0,1,2,0,4,5,0,4,
            2,0,0,1,2,4,4,5,10,11,
            0,19,20,21,22,23,24,25,26,27,
            28,19,20,21,22,23,24,25,26,27,
            28,0,0,41,2,0,4,0,0,41,
            0,0,5,41,0,5,0,0,0,0,
            0,59,0,58,19,20,21,19,20,21,
            59,59,0,0,66,19,20,21,19,20,
            21,0,9,41,0,4,0,0,80,0,
            0,0,6,6,0,6,76,6,0,0,
            6,59,61,22,0,0,0,0,0,0,
            0,60,0,0,67,68,0,67,68,62,
            63,0,62,63,62,63,0,0,0,0,
            0,0,78,0,0,0,0,0,57,0,
            0,0,0,0,60,0,0,0,0,0,
            60,0,0,0,0,0,0,0,60,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2246,4119,1,4111,1496,1,608,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2254,1,1,1,1,1,1,2346,
            797,1237,550,1240,1060,1535,740,892,952,1285,
            815,184,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,255,2252,7,
            2231,2231,2231,2231,2231,2231,2231,2231,2231,2231,
            2231,2231,2231,2231,2231,2231,2231,2231,2231,2231,
            2231,2231,2231,2231,2231,2231,2231,2231,2231,2231,
            2231,2231,2231,2231,2231,2231,2231,2231,2231,2231,
            1,2231,2231,2231,2231,2231,2231,2231,2231,2231,
            2231,2231,2231,2231,2231,2231,185,2231,2246,4119,
            1,4111,1496,1,608,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2254,1,1,1,1,1,1,2346,797,1237,
            550,1240,1060,1535,740,892,952,1285,815,287,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2246,2252,2246,4119,1,
            4111,2255,1,608,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2254,
            1,1,1,1,1,1,2346,797,1237,550,
            1240,1060,1535,740,892,952,1285,815,258,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2246,4119,1,4111,2255,1,
            608,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2254,1,1,1,
            1,1,1,2346,797,1237,550,1240,1060,1535,
            740,892,952,1285,815,1347,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2246,1593,1975,1597,42,2064,2246,2037,2029,
            2056,1228,718,367,2256,2257,2258,2259,2020,2012,
            2462,2463,2464,66,2408,2409,2407,2465,2410,2406,
            264,2474,1336,2246,2426,1,2427,187,4110,696,
            4110,2246,2486,2413,2418,2417,2415,2416,2414,2419,
            2420,2412,2421,2422,2423,545,732,524,2246,1,
            1,1,2255,1,2246,2426,1019,2427,2246,2246,
            700,573,2251,1,2474,390,2246,1,1,1,
            2254,1,1,1,1,1,1,2553,998,977,
            956,935,914,872,893,851,830,798,62,1632,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,2246,1,1,1,2255,
            1,186,4112,2246,4112,1631,129,2250,730,208,
            4115,301,4115,1135,1,1,1,2254,1,1,
            1,1,1,1,2553,2462,2463,2464,1,2408,
            2409,2407,2465,2410,2406,130,2246,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1175,1102,2462,2463,2464,2246,2408,2409,
            2407,2465,2410,2406,59,1,2474,390,300,2246,
            4119,1,4111,2255,1,608,1,1,1,1,
            1,1,1,1,1,1,1,1,270,2474,
            1336,2254,2506,255,2246,2426,72,2427,2346,797,
            1237,550,1240,1060,1535,740,892,952,1285,815,
            2246,4119,1,4111,2255,1,608,1,1,1,
            1,1,1,1,1,1,1,1,1,573,
            51,2246,2254,1497,1358,1241,819,1746,413,2346,
            797,1237,550,1240,1060,1535,740,892,952,1285,
            815,2246,4119,1,4111,2255,1,608,1,1,
            1,1,1,1,1,1,1,1,1,1,
            267,2246,1875,2254,270,1,1875,527,2148,255,
            2346,797,1237,550,1240,1060,1535,740,892,952,
            1285,815,2246,4119,1,4111,2255,1,608,1,
            1,1,1,1,1,1,1,1,1,1,
            1,573,53,2246,2254,573,255,2474,390,1746,
            413,2346,797,1237,550,1240,1060,1535,740,892,
            952,1285,815,2246,4119,1,4111,2255,1,608,
            1,1,1,1,1,1,1,1,1,1,
            1,1,224,2246,478,2254,210,2426,272,2427,
            605,63,2346,797,1237,550,1240,1060,1535,740,
            892,952,1285,815,2246,4119,1,4111,2255,1,
            608,1,1,1,1,1,1,1,1,1,
            1,1,1,573,2246,2275,2254,2276,179,573,
            2222,2246,2246,2346,797,1237,550,1240,1060,1535,
            740,892,952,1285,815,2246,4119,1,4111,2255,
            1,608,1,1,1,1,1,1,1,1,
            1,1,1,1,52,1175,1102,2254,2246,222,
            380,1746,413,70,2346,797,1237,550,1240,1060,
            1535,740,892,952,1285,815,2246,4119,1,4111,
            2255,1,608,1,1,1,1,1,1,1,
            1,1,1,1,1,2221,209,759,2254,759,
            573,2246,2246,382,1384,2346,797,1237,550,1240,
            1060,1535,740,892,952,1285,815,2246,4119,1,
            4111,2255,1,608,1,1,1,1,1,1,
            1,1,1,1,1,1,2246,231,2246,2254,
            2246,781,335,234,1271,2246,2346,797,1237,550,
            1240,1060,1535,740,892,952,1285,815,2246,4119,
            1,4111,2255,1,608,1,1,1,1,1,
            1,1,1,1,1,1,1,61,2246,2246,
            2254,2246,1,2251,1,193,1188,2346,797,1237,
            550,1240,1060,1535,740,892,952,1285,815,2246,
            1,1,1,2255,1,1,1,1,1,1,
            2444,910,2246,2246,1,2240,1336,1,2251,1407,
            2246,2254,255,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,2250,193,
            2246,1,60,1,192,156,1497,1358,1241,819,
            1,131,1,2228,2225,573,1806,1,1,1,
            1,1,116,1,1,1,1,1,1,2444,
            2462,2463,2464,2250,2408,2409,2407,2465,2410,2406,
            116,2506,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,192,2246,
            1,2251,1,193,2246,2246,611,2246,2252,2253,
            132,1497,1358,1241,819,2246,2506,116,1,1,
            1,2505,1,1,1,1,1,1,2444,2462,
            2463,2464,2246,2408,2409,2407,2465,2410,2406,2246,
            2246,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2250,193,1,378,
            390,2424,2246,2252,1557,48,2249,1,237,238,
            2109,2255,225,225,251,1579,2246,2462,2463,2464,
            2255,2408,2409,2407,2465,2410,2406,2246,2246,2254,
            225,225,1275,1,1,1,2246,2425,2254,2424,
            2413,2418,2417,2415,2416,2414,2419,2420,2412,2421,
            2422,2423,545,732,524,2462,2463,2464,1604,2408,
            2409,2407,2465,2410,2406,225,225,2248,293,225,
            225,68,2100,2079,128,2246,2246,1652,2413,2418,
            2417,2415,2416,2414,2419,2420,2412,2421,2422,2423,
            545,732,524,2462,2463,2464,2246,2408,2409,2407,
            2465,2410,2406,2246,64,1800,1,2246,2246,1208,
            2246,2246,608,682,1456,69,2413,2418,2417,2415,
            2416,2414,2419,2420,2412,2421,2422,2423,1,2263,
            1975,2264,2249,1537,1018,2037,2029,2056,1228,718,
            367,2256,2257,2258,2259,2020,2012,2246,1509,2184,
            273,657,2246,2263,1975,2264,2249,1899,112,2037,
            2029,2056,1228,718,367,2256,2257,2258,2259,2020,
            2012,2246,2263,1975,2264,1114,2064,4026,2037,2029,
            2056,1228,718,367,2256,2257,2258,2259,2020,2012,
            88,573,1509,2248,1,2263,1975,2264,27,2064,
            4026,2037,2029,2056,1228,718,367,2256,2257,2258,
            2259,2020,2012,54,2246,58,28,2248,2246,2263,
            1975,2264,2249,2064,252,2037,2029,2056,1228,718,
            367,2256,2257,2258,2259,2020,2012,2243,2246,2246,
            231,213,2246,1,1,1,235,1040,2246,2263,
            1975,2264,27,2064,1459,2037,2029,2056,1228,718,
            367,2256,2257,2258,2259,2020,2012,2246,2246,2246,
            2246,2246,2246,2273,1629,594,707,594,707,1,
            2263,1975,2264,2248,2064,4026,2037,2029,2056,1228,
            718,367,2256,2257,2258,2259,2020,2012,1,2263,
            1975,2264,1061,2064,4026,2037,2029,2056,1228,718,
            367,2256,2257,2258,2259,2020,2012,2246,2263,1975,
            2264,209,2064,4026,2037,2029,2056,1228,718,367,
            2256,2257,2258,2259,2020,2012,2246,2263,1975,2264,
            28,2064,2246,2037,2029,2056,1228,718,367,2256,
            2257,2258,2259,2020,2012,1,2263,1975,2264,2246,
            2064,2246,2037,2029,2056,1228,718,367,2256,2257,
            2258,2259,2020,2012,2246,2263,2053,2264,3347,2064,
            2246,2037,2029,2056,1228,718,367,2256,2257,2258,
            2259,2020,2012,2246,2263,2074,2264,504,2064,2246,
            2037,2029,2056,1228,718,367,2256,2257,2258,2259,
            2020,2012,17,179,2234,286,2234,2234,31,1334,
            1238,1,18,178,2237,90,2237,2237,2270,2271,
            67,179,179,179,2234,179,179,179,179,179,
            179,178,178,178,2237,178,178,178,178,178,
            178,2246,1,2234,1875,2246,2251,50,253,1873,
            49,2246,2109,2237,71,2109,250,57,2246,254,
            56,2234,55,1334,2462,2463,2464,2462,2463,2464,
            90,2237,2246,65,1326,2462,2463,2464,2462,2463,
            2464,2246,682,573,203,2255,41,2246,1082,191,
            1,191,1459,1459,191,187,1632,186,1,2246,
            208,2250,632,2254,2246,2246,2246,2246,2246,2246,
            2246,342,2246,2246,2100,2079,2246,2100,2079,594,
            707,2246,594,707,594,707,2246,2246,2246,2246,
            2246,2246,781,2246,2246,2246,2246,2246,1818,2246,
            2246,2246,2246,2246,1155,2246,2246,2246,2246,2246,
            2427,2246,2246,2246,2246,2246,2246,2246,2426
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            404,10,279,387,404,569,437,449,567,449,
            567,567,449,567,449,281,338,389,378,435,
            389,251,567,241,241,567,241,389,338,465,
            338,1,2,214,281,569,184,531,530,338,
            77,252,569,108,569,138,338,457,389,214,
            34,216,281,389,16,389,251,321,185,185,
            241,435,435,308,435,435,185,251,8,323,
            8,387,267,569,108,138,138,457,304,216,
            57,54,304,150,267,323,323,323,323,323,
            38,323,323,323,144,161,166,164,172,168,
            175,174,177,176,178,465,460,281,464,543,
            135,569,323,77,530,249,185,323,185,265,
            323,340,323,323,252,308,8,308,389,181,
            342,342,108,135,536,108,138,140,393,140,
            304,457,464,304,54,37,34,323,323,323,
            323,323,323,323,323,323,323,323,465,465,
            398,267,267,241,241,192,323,323,323,323,
            323,323,323,323,323,323,323,323,323,323,
            323,323,323,323,323,323,462,463,211,338,
            216,135,14,321,185,465,435,465,465,251,
            308,323,108,538,140,135,323,241,457,391,
            323,323,54,38,16,338,211,465,465,465,
            54,164,164,161,161,168,168,166,166,166,
            166,174,172,176,175,8,177,214,465,468,
            460,14,185,321,308,323,308,308,135,184,
            323,183,135,54,54,14,398,468,497,569,
            323,216,465,140,189,192,185,465,250,538,
            323,14,465,135,12,534,241,323,188,465,
            192,185,308,140,244,16,54,241,323,308,
            465,135,54,308
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            2,4,61,57,59,22,41,60,0,73,
            0,4,58,41,66,2,13,14,15,16,
            1,3,10,11,9,5,7,8,17,18,
            12,6,0,19,20,21,23,10,11,9,
            5,7,8,17,18,12,2,1,3,13,
            14,15,16,65,4,0,19,20,21,10,
            11,9,5,7,8,17,18,12,2,1,
            3,13,14,15,16,0,24,42,19,43,
            54,25,44,26,45,46,27,20,47,48,
            23,55,28,56,49,50,21,51,52,53,
            1,3,4,61,57,22,0,24,42,19,
            43,54,25,44,26,45,46,27,20,47,
            48,23,55,28,56,49,50,21,51,52,
            53,1,3,29,4,58,0,1,3,4,
            58,57,0,41,2,66,80,10,11,61,
            83,84,85,86,87,89,88,90,91,92,
            5,67,68,7,8,63,62,69,70,71,
            72,74,75,9,76,77,78,58,81,82,
            65,59,60,57,22,4,0,61,41,66,
            0,4,59,12,13,14,15,16,1,3,
            2,10,11,9,5,7,8,17,18,0,
            5,2,41,59,4,24,42,19,43,54,
            25,44,26,45,46,27,20,47,48,23,
            55,28,56,49,50,21,51,52,53,64,
            1,3,0,4,57,58,22,0,73,79,
            58,32,34,6,38,40,35,30,36,37,
            33,31,39,29,4,22,13,14,15,16,
            10,11,9,7,8,17,18,12,5,2,
            3,1,54,55,56,50,42,47,45,46,
            44,43,48,49,51,52,53,28,25,23,
            24,27,26,19,20,21,0,32,34,6,
            38,40,35,30,36,37,33,31,39,29,
            22,4,10,11,9,7,8,17,18,12,
            2,1,3,13,14,15,16,5,0,30,
            0,66,80,10,11,9,7,8,67,68,
            62,63,69,70,71,72,74,75,76,77,
            78,81,82,61,83,84,85,86,87,88,
            89,90,91,92,57,41,59,24,19,25,
            26,27,20,23,28,21,22,4,5,2,
            1,0,4,57,58,61,0,4,59,5,
            2,41,0,73,24,42,19,43,54,25,
            44,26,45,46,27,20,47,48,23,55,
            28,56,49,50,21,51,52,53,1,3,
            5,22,4,29,2,0,50,42,47,45,
            46,44,43,48,49,51,52,53,60,22,
            28,25,23,24,27,26,19,20,21,5,
            1,2,41,57,59,4,0,5,24,42,
            19,43,54,25,44,26,45,46,27,20,
            47,48,23,55,28,56,49,50,21,51,
            52,53,1,3,64,0,9,5,7,8,
            67,68,62,63,69,70,71,72,74,75,
            76,77,78,81,82,60,83,84,85,86,
            87,88,89,90,91,92,65,59,58,6,
            4,57,22,61,0,22,4,5,1,2,
            60,0,24,42,19,43,54,25,44,26,
            45,46,27,20,47,48,23,55,28,56,
            49,50,21,51,52,53,1,3,6,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            138,29,19,75,78,10,106,107,15,107,
            45,45,107,44,107,101,155,97,29,29,
            95,12,62,62,62,62,62,109,29,151,
            155,17,17,150,89,10,76,29,29,155,
            29,58,37,89,29,89,29,89,144,150,
            47,71,124,97,51,142,67,74,76,76,
            62,29,29,119,29,29,76,12,29,8,
            29,75,1,29,130,89,62,89,128,158,
            41,49,128,29,162,8,8,8,8,8,
            48,8,8,8,29,29,29,29,29,29,
            29,29,29,29,29,151,85,22,29,166,
            89,29,8,29,29,29,76,8,76,30,
            163,29,163,163,58,119,29,119,97,29,
            29,29,89,13,75,134,62,82,29,29,
            128,35,151,128,49,48,35,8,8,8,
            8,8,8,8,8,8,8,8,151,151,
            87,162,162,54,54,64,163,8,8,8,
            8,8,8,8,8,8,8,8,8,8,
            8,8,8,8,163,8,17,17,84,155,
            71,13,89,32,76,151,29,151,151,67,
            119,8,130,97,82,13,8,62,35,29,
            8,8,49,48,8,155,148,151,151,151,
            49,29,29,29,29,29,29,29,29,29,
            29,29,29,29,29,29,29,150,151,153,
            113,40,76,32,119,163,119,119,13,76,
            8,29,13,49,49,89,115,153,29,29,
            8,71,151,82,93,32,76,151,29,97,
            8,40,151,13,39,29,62,8,56,151,
            32,76,119,82,91,51,49,62,8,119,
            151,13,49,119
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            83,82,81,80,74,79,78,5,0,105,
            0,1,41,0,108,0,46,0,36,1,
            101,83,82,81,80,74,79,78,0,24,
            47,1,61,0,25,0,109,0,89,67,
            5,1,0,111,86,0,1,5,39,0,
            5,67,0,90,0,119,0,1,24,29,
            93,21,0,1,107,0,29,21,69,41,
            1,24,0,27,1,17,0,24,1,103,
            0,68,0,23,36,43,58,59,1,0,
            115,0,117,0,45,38,43,36,1,0,
            74,70,71,72,73,62,48,0,36,38,
            40,0,36,43,59,58,40,0,21,29,
            1,30,0,24,1,121,0,75,0,96,
            1,55,0,1,55,87,0,120,24,1,
            0,38,45,36,43,40,0,58,59,1,
            23,0,1,24,40,53,0,112,1,24,
            0,55,1,27,0,1,24,47,28,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,86,87,9,3,10,11,8,6,
            7,68,81,82,83,84,12,13,48,64,
            76,92,69,44,55,60,63,72,93,77,
            45,46,49,50,51,57,58,59,65,71,
            1,47,52,56,61,62,66,67,74,75,
            78,79,80,54,70,73,42,91,90,29,
            31,16,17,30,89,4,14,15,18,19,
            20,21,94,22,23,24,25,26,53,5,
            27,28,32,33,34,35,36,37,38,39,
            40,41,88
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            0,0,0,0,100,104,105,106,107,108,
            109,110,111,112,113,114,98,115,116,0,
            123,117,96,127,135,0,99,122,118,121,
            0,0,0,0,0,157,0,160,95,0,
            97,154,156,0,158,159,126,134,0,0,
            0,145,155,120,149,168,171,172,173,0,
            0,137,144,0,161,167,0,0,125,138,
            139,140,141,146,166,170,102,129,130,131,
            132,133,136,142,143,0,148,153,174,101,
            103,119,124,128,0,147,151,0,0,152,
            162,165,179,0,181,0,0,0,0,150,
            0,163,164,169,0,175,176,0,177,178,
            180,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            82,113,166,92,35,41,121,12,136,21,
            51,69,28,47,103,145,162,181,185,149,
            1,1,32,56,79,189,6,107,156,127,
            156,99,59,59,59
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            90,90,90,90,4,4,90,18,142,26,
            4,26,26,4,101,90,26,26,4,153,
            4,4,26,4,26,26,9,110,159,130,
            174,101,66,61,74
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            72,70,5,72,46,46,70,63,33,60,
            46,38,60,46,87,28,6,5,5,19,
            119,118,58,46,36,3,89,87,7,34,
            5,87,38,45,38
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            58,58,58,58,65,65,58,58,79,59,
            65,59,59,65,22,58,59,59,65,60,
            65,65,59,65,59,59,61,1,59,30,
            59,22,2,2,2
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            112,112,9,112,87,87,112,65,72,91,
            87,98,91,87,5,71,9,9,9,39,
            1,3,91,87,98,9,67,5,12,72,
            9,5,98,100,98
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            147,41,0,95,0,209,94,0,31,144,
            0,161,184,94,6,160,0,97,0,0,
            158,94,2,151,0,96,0,158,94,2,
            0,169,2,0,115,23,195,94,41,0,
            115,195,94,23,41,0,115,23,41,0,
            115,195,94,41,0,115,41,0,129,0,
            2,0,163,96,0,2,96,0,158,94,
            2,129,0,2,0,161,96,0,145,2,
            0,161,192,94,6,114,204,54,0,97,
            0,161,192,94,6,204,54,0,148,0,
            98,0,203,94,148,0,94,148,0,150,
            98,0,188,94,6,202,114,201,167,0,
            188,94,6,201,167,0,123,35,0,77,
            2,99,96,98,0,123,116,120,2,38,
            0,53,121,0,186,94,6,0,120,82,
            111,0,29,116,0,170,2,0,96,105,
            0,170,2,12,0,161,184,94,6,116,
            170,2,0,96,3,0,103,0,97,0,
            200,2,98,0,120,41,98,0,120,2,
            0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1187,0,1376,0,2095,1741,1627,0,1228,718,
            367,2118,1899,527,1509,781,682,1632,1497,1358,
            1241,819,1175,1102,1746,413,707,594,2109,2100,
            2079,2064,2056,1537,2037,2029,2020,2012,1208,1188,
            1155,342,1135,1114,1081,1061,1040,1019,998,977,
            956,935,914,893,872,851,830,798,760,739,
            657,315,550,573,632,611,504,481,458,0,
            2136,1804,1782,1760,1738,1700,1676,1629,1389,1579,
            1557,1322,1535,1260,1235,0,1529,1508,404,362,
            1386,1488,1875,1336,1667,1273,0,1447,374,1818,
            1488,1647,1336,1581,1273,1841,1806,1425,1397,390,
            0,655,315,1402,374,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,199,94,117,213,194,171,172,167,173,
            56,55,174,54,175,176,94,2,1,129,
            94,6,201,179,179,204,179,146,133,145,
            94,129,136,2,206,194,187,178,131,94,
            138,94,114,6,114,6,133,5,146,2,
            41,94,94,57,61,146,186,39,31,33,
            37,36,30,35,40,38,122,6,34,32,
            114,117,94,202,94,6,94,5,94,94,
            23,115,94,99,2,12,18,17,8,7,
            5,9,11,10,98,101,103,102,105,104,
            107,106,109,108,111,158,117,94,159,214,
            6,160,5,138,131,4,120,94,114,2,
            2,123,2,2,94,60,147,60,94,185,
            1,3,6,188,148,189,94,192,114,193,
            94,168,205,94,115,195,168,92,91,90,
            88,89,87,86,85,84,83,61,170,120,
            148,2,2,80,66,2,41,68,67,5,
            62,63,8,7,75,74,72,71,70,69,
            76,9,78,77,82,81,151,152,2,94,
            57,94,6,140,154,120,30,120,120,186,
            60,57,94,94,192,161,61,57,168,57,
            195,23,115,5,116,94,2,170,170,200,
            120,102,102,101,101,104,104,103,103,103,
            103,106,105,108,107,120,109,2,169,94,
            146,94,154,110,116,2,116,116,188,203,
            60,145,161,115,115,6,146,94,116,116,
            60,94,158,184,94,110,154,120,123,57,
            60,94,158,161,57,209,66,41,210,154,
            110,116,79,184,134,61,147,66,41,116,
            154,161,147,116
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "identifier_token",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "typedef_name_in_declspec",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 29,
           SCOPE_UBOUND      = 34,
           SCOPE_SIZE        = 35,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 294,
           NT_OFFSET         = 93,
           LA_STATE_OFFSET   = 2560,
           MAX_LA            = 2147483647,
           NUM_RULES         = 314,
           NUM_NONTERMINALS  = 122,
           NUM_SYMBOLS       = 215,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 1762,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 2221,
           ERROR_ACTION      = 2246;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
