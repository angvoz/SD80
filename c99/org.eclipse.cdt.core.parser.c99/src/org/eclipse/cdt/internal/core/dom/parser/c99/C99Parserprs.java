/*******************************************************************************
* Copyright (c) 2006, 2007 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package org.eclipse.cdt.internal.core.dom.parser.c99;

public class C99Parserprs implements lpg.lpgjavaruntime.ParseTable, C99Parsersym {

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,3,1,4,
            3,4,3,3,2,2,7,8,1,3,
            1,2,2,2,2,2,2,2,2,2,
            4,1,4,1,3,3,3,1,3,3,
            1,3,3,1,3,3,3,3,1,3,
            3,1,3,1,3,1,3,1,3,1,
            3,1,5,1,3,3,3,3,3,3,
            3,3,3,3,3,1,1,1,3,1,
            1,1,1,3,4,3,3,4,3,1,
            2,4,1,2,1,2,1,1,5,5,
            5,7,1,1,1,7,1,1,1,1,
            1,1,5,9,8,8,7,8,7,7,
            6,8,7,7,6,7,5,9,8,8,
            7,8,7,7,6,8,7,7,6,3,
            2,2,2,3,2,4,2,2,2,2,
            1,2,1,2,1,2,3,2,1,1,
            2,3,2,2,1,3,2,2,1,3,
            2,2,1,1,3,1,3,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,5,5,6,6,2,
            2,1,1,0,1,2,4,2,1,1,
            3,1,2,3,1,5,6,6,7,2,
            1,0,1,3,1,3,1,1,1,1,
            1,3,1,3,1,1,2,5,3,1,
            3,5,1,3,2,4,3,5,4,6,
            6,3,5,1,2,3,4,1,2,1,
            3,1,1,3,2,1,2,1,3,1,
            2,2,1,3,3,1,2,2,3,4,
            5,1,4,5,1,1,3,3,3,2,
            1,2,3,2,1,0,1,2,1,1,
            1,1,4,6,1,2,-70,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-135,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-154,0,0,0,0,0,
            0,0,0,0,0,0,0,-152,0,0,
            0,0,0,0,0,0,0,-137,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-136,0,0,
            -74,0,0,0,0,0,0,-114,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-2,
            -17,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-19,-22,-33,0,-143,
            0,0,0,0,0,0,0,0,-144,0,
            0,0,0,0,0,0,0,0,-157,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-121,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-34,-47,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -269,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-66,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-187,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-67,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-189,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-83,-85,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-235,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-86,-87,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-261,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -88,-89,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-267,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-90,-91,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-275,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-92,-93,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-278,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-94,-95,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-287,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-97,-115,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-288,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-117,-118,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -290,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-119,-120,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-291,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-125,
            -127,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-293,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-128,-129,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-297,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-141,-177,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-299,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -184,-186,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-300,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-188,-193,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-301,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-208,-209,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-302,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-210,-211,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-304,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-212,-213,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-84,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-214,0,-158,0,0,0,0,
            0,0,0,0,0,0,0,0,-215,-216,
            0,0,-148,0,0,0,0,0,0,0,
            0,0,0,-110,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-48,0,0,
            0,0,0,-133,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-18,0,-155,0,0,0,0,
            0,0,0,0,0,0,-217,0,0,0,
            0,0,-149,0,0,0,0,0,0,0,
            0,0,0,-116,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-59,0,0,
            0,0,0,-134,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-20,0,-156,0,0,0,0,
            0,0,0,0,0,0,-218,0,0,0,
            0,0,-150,0,0,0,0,0,0,0,
            0,0,0,-183,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-219,0,0,
            0,0,0,-191,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-151,0,0,0,0,
            0,0,0,0,0,-220,-221,-11,-23,0,
            0,0,-153,0,0,0,0,0,0,0,
            0,-35,0,0,-132,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-243,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-104,0,0,0,0,0,
            0,-16,0,-222,0,-50,0,-75,0,0,
            0,0,0,0,-8,0,-81,0,0,0,
            0,0,0,-9,0,-29,0,0,0,-76,
            0,0,0,0,0,0,-223,0,-51,0,
            0,0,0,-271,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-298,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-232,0,0,0,0,0,0,
            -21,0,-31,-174,0,0,-77,0,0,0,
            0,0,0,0,0,-82,0,0,0,0,
            0,0,0,0,-37,0,0,0,-78,0,
            0,0,0,0,0,-205,0,-228,0,0,
            0,0,-122,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-241,0,0,0,
            0,0,0,0,-245,-248,-237,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-249,
            -238,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-139,-284,-262,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-264,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-266,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-140,0,-277,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -280,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-281,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-295,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-225,0,
            0,-79,0,0,0,0,0,0,-80,0,
            0,0,0,0,0,-36,0,-57,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-138,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-175,
            0,-159,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-178,-200,-181,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-201,0,-190,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-202,-224,-192,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-197,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-236,0,-268,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -53,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -101,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -145,0,0,0,0,0,0,-123,0,-52,
            0,-240,0,-229,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-244,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-162,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-39,0,0,0,0,0,-146,0,0,
            0,0,0,0,-124,0,0,0,0,0,
            -163,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -164,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-126,0,0,0,0,0,
            -165,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -166,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-182,0,0,0,0,0,
            -167,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -168,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-194,0,0,0,0,0,
            -169,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -170,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-195,0,0,0,0,0,
            -171,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -172,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-239,0,0,0,0,0,
            -196,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -230,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-71,0,0,0,0,0,
            -234,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-246,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-63,0,0,0,0,0,0,
            0,0,-250,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-147,0,0,0,0,0,0,0,
            -263,0,0,0,0,0,-256,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-160,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-161,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-7,0,-3,0,
            -4,-112,0,-204,0,0,0,0,0,0,
            -65,-60,-14,-1,0,-30,-41,0,0,0,
            0,0,-98,-199,0,0,0,0,-100,0,
            0,0,-56,0,0,0,0,0,0,0,
            0,0,0,0,-242,0,0,-176,0,0,
            0,0,0,-105,0,-102,0,0,0,0,
            0,0,0,0,0,0,0,-106,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-226,-13,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-55,0,0,0,0,0,0,
            0,0,0,0,0,0,-113,0,0,0,
            -5,0,-38,0,0,0,-6,0,0,0,
            0,0,-69,-73,0,0,0,-96,0,-40,
            0,-247,0,-265,-28,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-49,0,
            0,0,0,0,-99,-233,0,0,0,0,
            -58,0,0,0,0,0,0,0,0,0,
            -62,0,0,-107,0,0,0,0,-282,0,
            -108,-131,0,0,0,0,0,0,-255,-130,
            -72,-258,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-32,0,
            0,-111,0,0,0,-207,-257,0,0,0,
            0,0,0,0,0,0,-180,0,0,0,
            -252,0,-206,0,0,0,0,0,-272,0,
            0,0,0,-203,0,0,0,0,-109,0,
            0,-273,0,0,0,-10,0,0,0,0,
            0,0,0,-42,-12,0,-64,-15,-103,0,
            0,0,0,-25,0,-26,0,-27,0,-253,
            0,-54,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-185,0,0,
            0,0,0,0,0,0,0,0,-254,0,
            0,0,0,0,0,0,0,0,0,-46,
            0,-61,0,-68,0,0,0,0,0,-142,
            0,0,0,0,0,0,0,0,0,0,
            -24,-251,-198,0,-173,0,0,0,0,0,
            -227,-43,-179,-44,-231,0,0,-259,0,-45,
            0,-285,-260,0,0,0,-270,0,-296,0,
            0,0,-274,0,0,0,0,0,0,0,
            0,-276,0,0,0,-279,-283,0,0,-286,
            0,0,0,0,0,0,0,0,0,0,
            0,-289,0,0,0,0,-292,0,0,0,
            0,0,-294,-303,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            88,14,1,1,43,43,22,22,41,41,
            20,20,2,2,2,2,3,3,3,4,
            4,4,4,4,4,4,4,4,4,89,
            89,5,5,5,5,5,5,5,5,5,
            5,5,6,6,7,7,7,7,8,8,
            8,9,9,9,10,10,10,10,10,11,
            11,11,12,12,13,13,15,15,16,16,
            17,17,18,18,19,19,19,19,19,19,
            19,19,19,19,19,19,25,38,21,21,
            56,60,60,60,28,28,28,30,30,30,
            29,24,24,90,90,31,31,75,75,32,
            33,27,27,27,27,27,26,26,26,26,
            26,26,26,34,34,34,34,34,34,34,
            34,34,34,34,34,34,35,35,35,35,
            35,35,35,35,35,35,35,35,35,35,
            36,36,36,36,36,50,50,37,37,37,
            37,47,47,47,47,47,47,61,61,61,
            61,61,77,77,77,77,78,78,78,78,
            79,79,79,79,76,76,62,62,39,39,
            39,39,39,51,51,51,51,51,51,51,
            51,51,51,51,51,72,70,70,70,70,
            70,70,80,63,63,64,64,57,57,49,
            91,91,81,81,81,65,71,71,71,71,
            71,82,82,83,83,73,73,23,23,23,
            40,48,48,44,44,44,44,45,46,46,
            92,92,84,94,94,42,42,42,42,42,
            42,42,42,42,53,53,53,53,66,66,
            58,58,58,59,59,54,54,54,93,93,
            69,69,67,67,67,55,55,55,55,55,
            55,55,52,52,52,74,74,74,74,68,
            95,96,96,85,85,88,88,97,97,86,
            86,86,86,87,87,98,98,123,17,16,
            19,617,803,44,654,618,691,655,728,692,
            765,2612,729,802,766,74,88,105,987,788,
            24,120,2275,91,92,113,876,117,122,114,
            118,115,119,121,2743,1148,17,16,19,617,
            42,44,654,618,691,655,1260,108,1148,17,
            16,19,617,42,44,654,1244,107,976,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,103,729,802,766,74,29,788,23,
            21,1120,17,16,19,617,40,408,1,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,2612,729,802,766,74,88,105,987,
            280,49,120,2275,91,92,113,876,117,122,
            114,118,115,119,121,2743,110,171,151,102,
            1148,17,16,19,617,42,44,1135,108,1148,
            17,16,19,617,42,44,1136,2037,107,1148,
            17,16,19,617,42,44,654,618,691,655,
            728,692,1428,104,184,17,16,19,617,803,
            44,654,618,691,655,728,692,765,507,729,
            802,766,74,88,105,987,496,588,120,2275,
            91,92,113,876,117,122,114,118,115,119,
            121,245,17,16,19,617,803,44,654,618,
            691,655,728,692,765,507,729,802,766,74,
            88,105,987,349,1099,120,2275,1734,92,113,
            876,117,122,114,118,115,119,121,407,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,507,729,802,766,74,88,105,987,
            243,111,120,2275,99,96,113,876,117,122,
            114,118,115,119,121,407,17,16,19,617,
            803,44,654,618,691,655,728,692,765,507,
            729,802,766,74,88,105,987,202,494,120,
            2275,97,94,113,876,117,122,114,118,115,
            119,121,407,17,16,19,617,803,44,654,
            618,691,655,728,692,765,507,729,802,766,
            74,88,105,987,485,207,120,2275,98,95,
            113,876,117,122,114,118,115,119,121,407,
            17,16,19,617,803,44,654,618,691,655,
            728,692,765,507,729,802,766,74,88,105,
            987,623,705,120,2275,110,109,113,876,117,
            122,114,118,115,119,121,407,17,16,19,
            617,803,44,654,618,691,655,728,692,765,
            507,729,802,766,74,88,105,987,574,695,
            120,2275,137,123,113,876,117,122,114,118,
            115,119,121,407,17,16,19,617,803,44,
            654,618,691,655,728,692,765,507,729,802,
            766,74,88,105,987,90,250,120,2275,149,
            135,113,876,117,122,114,118,115,119,121,
            407,17,16,19,617,803,44,654,618,691,
            655,728,692,765,507,729,802,766,74,88,
            105,987,304,356,120,2275,145,131,113,876,
            117,122,114,118,115,119,121,407,17,16,
            19,617,803,44,654,618,691,655,728,692,
            765,507,729,802,766,74,88,105,987,790,
            713,120,2275,148,134,113,876,117,122,114,
            118,115,119,121,407,17,16,19,617,803,
            44,654,618,691,655,728,692,765,507,729,
            802,766,74,88,105,987,747,29,120,2275,
            147,133,113,876,117,122,114,118,115,119,
            121,407,17,16,19,617,803,44,654,618,
            691,655,728,692,765,507,729,802,766,74,
            88,105,987,203,848,120,2275,144,130,113,
            876,117,122,114,118,115,119,121,407,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,507,729,802,766,74,88,105,987,
            759,756,120,2275,143,129,113,876,117,122,
            114,118,115,119,121,407,17,16,19,617,
            803,44,654,618,691,655,728,692,765,507,
            729,802,766,74,88,105,987,405,869,120,
            2275,141,127,113,876,117,122,114,118,115,
            119,121,407,17,16,19,617,803,44,654,
            618,691,655,728,692,765,507,729,802,766,
            74,88,105,987,615,881,120,2275,116,112,
            113,876,117,122,114,118,115,119,121,407,
            17,16,19,617,803,44,654,618,691,655,
            728,692,765,507,729,802,766,74,88,105,
            987,893,62,120,2275,146,132,113,876,117,
            122,114,118,115,119,121,407,17,16,19,
            617,803,44,654,618,691,655,728,692,765,
            507,729,802,766,74,88,105,987,909,537,
            120,2275,142,128,113,876,117,122,114,118,
            115,119,121,407,17,16,19,617,803,44,
            654,618,691,655,728,692,765,507,729,802,
            766,74,88,105,987,629,631,120,2275,140,
            126,113,876,117,122,114,118,115,119,121,
            407,17,16,19,617,803,44,654,618,691,
            655,728,692,765,507,729,802,766,74,88,
            105,987,816,876,120,2275,139,125,113,876,
            117,122,114,118,115,119,121,466,17,16,
            19,617,803,44,654,618,691,655,728,692,
            765,507,729,802,766,74,88,105,987,981,
            994,120,2275,138,124,113,876,117,122,114,
            118,115,119,121,1204,17,16,19,617,803,
            44,654,618,691,655,728,692,765,2609,729,
            802,766,74,88,802,1024,1148,17,16,19,
            617,42,44,654,618,691,655,728,1466,907,
            849,219,1805,1148,17,16,19,617,42,44,
            654,618,1172,2960,1148,17,16,19,617,42,
            44,654,618,691,655,728,692,765,712,729,
            802,766,90,1733,1204,17,16,19,617,803,
            44,654,618,691,655,728,692,765,2609,729,
            802,766,74,88,92,1024,1148,17,16,19,
            617,42,44,654,618,691,1327,214,2733,101,
            236,219,1805,1148,17,16,19,617,42,44,
            654,618,1173,2960,1148,17,16,19,617,42,
            44,654,618,691,655,728,692,765,712,729,
            802,766,90,1985,1204,17,16,19,617,803,
            44,654,618,691,655,728,692,765,2609,729,
            802,766,74,88,92,1024,1148,17,16,19,
            617,42,44,654,618,691,1397,332,2750,207,
            1098,219,1805,1148,17,16,19,617,42,44,
            654,618,1209,2960,1148,17,16,19,617,42,
            44,654,618,691,655,728,692,765,727,729,
            802,766,90,2013,1004,17,16,19,617,803,
            44,654,618,691,655,728,692,765,2609,729,
            802,766,74,88,1711,1024,1148,17,16,19,
            617,42,44,654,618,1210,718,939,586,92,
            223,2743,2435,1148,17,16,19,617,42,44,
            654,1259,426,2894,1687,1064,17,16,19,617,
            803,44,654,618,691,655,728,692,765,2634,
            729,802,766,74,292,888,17,16,19,617,
            803,44,654,618,691,655,728,692,765,2634,
            729,802,766,74,292,918,17,16,19,617,
            42,35,1295,447,809,2912,425,295,1148,17,
            16,19,617,42,39,317,294,1176,17,16,
            19,617,33,296,486,164,92,297,244,2973,
            1148,17,16,19,617,42,38,964,262,426,
            2950,162,166,298,1064,17,16,19,617,803,
            44,654,618,691,655,728,692,765,2634,729,
            802,766,74,292,888,17,16,19,617,803,
            44,654,618,691,655,728,692,765,2634,729,
            802,766,74,292,918,17,16,19,617,42,
            35,1317,2475,498,576,431,295,1148,17,16,
            19,617,42,37,446,28,1176,17,16,19,
            617,32,296,156,164,92,297,269,2992,1148,
            17,16,19,617,42,36,426,263,951,2791,
            162,166,298,946,17,16,19,617,803,44,
            654,618,691,655,728,692,765,965,729,802,
            766,74,88,153,1024,995,925,946,17,16,
            19,617,803,44,654,618,691,655,728,692,
            765,2355,729,802,766,74,88,1735,1024,2861,
            999,946,17,16,19,617,803,44,654,618,
            691,655,728,692,765,2551,729,802,766,74,
            88,1759,1024,425,602,976,17,16,19,617,
            803,44,654,618,691,655,728,692,765,2754,
            729,802,766,74,88,2614,1024,743,3093,976,
            17,16,19,617,803,44,654,618,691,655,
            728,692,765,3012,729,802,766,74,88,3093,
            1024,780,3093,946,17,16,19,617,803,44,
            654,618,691,655,728,692,765,3016,729,802,
            766,74,88,1855,1024,425,3093,976,17,16,
            19,617,803,44,654,618,691,655,728,692,
            765,2809,729,802,766,74,88,18,1024,854,
            3093,976,17,16,19,617,803,44,654,618,
            691,655,728,692,765,3032,729,802,766,74,
            88,3093,1024,928,3093,976,17,16,19,617,
            803,44,654,618,691,655,728,692,765,3037,
            729,802,766,74,88,3093,1024,965,3093,976,
            17,16,19,617,803,44,654,618,691,655,
            728,692,765,3043,729,802,766,74,88,426,
            1024,1150,1148,17,16,19,617,42,35,1148,
            17,16,19,617,42,34,308,3044,830,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,2899,729,802,766,74,2666,1148,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,2847,729,802,766,74,88,247,1024,
            425,255,1148,17,16,19,617,803,44,654,
            618,691,655,728,692,765,2874,729,802,766,
            74,88,248,1024,509,425,666,17,16,19,
            617,803,44,654,618,691,655,728,692,765,
            1467,729,802,766,74,2985,252,1686,3093,269,
            3093,3093,3093,425,3093,1148,17,16,19,617,
            803,44,654,618,691,655,728,692,765,256,
            729,802,766,74,88,1710,1024,686,704,1148,
            17,16,19,617,803,44,654,618,691,655,
            728,692,765,2085,729,802,766,74,88,22,
            1024,269,3093,1148,17,16,19,617,803,44,
            654,618,691,655,728,692,765,2162,729,802,
            766,74,88,3093,1024,425,3093,1148,17,16,
            19,617,803,44,654,618,691,655,728,692,
            765,2655,729,802,766,74,88,669,1024,3093,
            3093,1036,17,16,19,617,803,44,654,618,
            691,655,728,692,765,3017,729,802,766,74,
            292,1232,17,16,19,617,803,44,654,618,
            691,655,728,692,765,2983,729,802,766,74,
            2857,1148,17,16,19,617,42,47,700,3093,
            594,3093,425,187,858,17,16,19,617,803,
            44,654,618,691,655,728,692,765,152,729,
            802,766,74,2988,706,3093,3093,269,1036,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,247,729,802,766,74,292,1148,17,
            16,19,617,803,44,654,618,691,655,728,
            692,765,92,729,802,766,74,85,1148,17,
            16,19,617,42,46,700,2801,3093,3093,3093,
            299,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,151,729,802,766,74,
            84,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,700,729,802,766,74,
            83,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,106,729,802,766,74,
            82,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,511,729,802,766,74,
            81,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,217,729,802,766,74,
            80,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,700,729,802,766,74,
            79,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,154,729,802,766,74,
            78,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,700,729,802,766,74,
            77,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,150,729,802,766,74,
            76,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,700,729,802,766,74,
            75,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,1783,729,802,766,74,
            89,1148,17,16,19,617,803,44,654,618,
            691,655,728,692,765,218,729,802,766,74,
            2993,1148,17,16,19,617,42,44,654,618,
            691,655,728,692,765,3093,729,802,766,90,
            1148,17,16,19,617,42,44,654,618,691,
            655,728,692,765,712,729,802,766,90,2820,
            245,246,3093,1148,17,16,19,617,803,44,
            654,618,691,655,728,692,765,224,729,802,
            766,74,30,1148,17,16,19,617,42,45,
            3093,700,3093,3093,3093,206,2997,1148,17,16,
            19,617,42,44,654,618,691,655,728,692,
            765,1807,729,802,766,73,1148,17,16,19,
            617,42,44,654,618,691,655,728,692,765,
            3093,729,1534,1148,17,16,19,617,42,44,
            654,618,691,655,728,692,765,1255,1567,572,
            205,368,525,205,1092,17,16,19,617,42,
            43,290,368,189,306,2623,221,92,3093,3093,
            163,155,163,634,771,163,2678,1482,2609,472,
            507,2897,218,643,311,3093,161,165,161,165,
            313,161,165,2609,1532,425,2695,2639,287,2695,
            2737,2611,226,2737,712,249,770,1916,245,506,
            157,448,1899,157,310,247,2658,521,227,2607,
            2886,2895,2607,2886,2895,184,158,159,160,158,
            159,160,1569,273,223,619,205,1960,1025,1623,
            286,3093,2160,245,246,209,448,253,2822,257,
            307,309,430,2863,258,2626,288,1556,164,301,
            275,2731,2160,245,246,277,1061,189,2785,2188,
            2752,354,1984,644,162,166,286,701,2160,245,
            246,1569,1536,368,92,2609,2755,2609,316,2863,
            644,311,384,3093,700,787,3093,2727,1485,220,
            163,2939,2975,155,2609,2908,2906,2904,2611,2315,
            219,2160,245,246,1831,448,161,165,163,189,
            3093,310,2622,3093,2898,358,227,219,2737,184,
            215,644,3093,1569,161,165,1358,2952,168,2622,
            1569,644,2898,1623,712,2609,2737,215,268,700,
            3093,499,798,2514,2952,2609,167,308,309,754,
            746,643,754,2160,245,246,2609,448,219,1879,
            2160,245,246,2609,1061,2812,2609,302,219,189,
            2622,185,554,249,3093,208,378,451,215,2658,
            2622,1624,227,1569,2664,2952,2658,770,215,2658,
            2819,547,247,813,2804,2952,273,221,288,851,
            1960,1025,2861,273,770,2847,273,3003,1025,712,
            3003,1025,798,2160,245,246,1264,1536,286,286,
            3093,2820,245,246,369,1286,2609,369,744,358,
            259,2863,2869,286,1348,287,1357,543,1379,163,
            643,287,218,2939,3093,234,2869,20,163,2658,
            228,164,268,3093,2882,161,165,163,712,163,
            3093,163,289,1621,161,165,273,162,166,425,
            3020,1025,2971,161,165,161,165,161,165,2755,
            92,2982,725,2984,589,2990,2633,245,839,543,
            506,285,543,3093,2609,1986,2609,233,2612,229,
            233,1326,92,598,1656,358,2621,580,314,2811,
            580,906,1388,358,1410,770,1574,2743,770,219,
            1419,2743,723,770,164,2609,254,770,268,700,
            315,2622,286,425,316,164,268,164,3093,216,
            162,166,425,164,293,2863,425,425,2658,136,
            425,162,166,162,166,290,3093,281,258,162,
            166,260,425,27,817,274,261,425,891,2999,
            303,2038,291,425,425,3093,3093,3093,2954,2164,
            3093,3093,3093,3093,1039,3093,3093,3093,3093,1076,
            3093,3093,3093,3093,3093,1113,1187,3093,0,170,
            3095,0,1,1288,0,1,3096,0,1,951,
            0,1,3095,0,1,3371,0,9,11,0,
            1,3336,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,0,29,
            2,31,32,33,34,35,36,37,38,39,
            40,41,42,43,44,45,46,47,0,49,
            50,51,52,53,54,55,56,57,58,11,
            60,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,20,21,22,23,24,25,26,27,0,
            29,0,31,32,33,34,35,36,37,38,
            39,40,41,42,43,44,45,46,47,0,
            49,50,51,52,53,54,55,56,57,58,
            11,60,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            0,29,0,31,32,33,34,35,36,37,
            38,39,40,41,42,76,44,45,46,47,
            0,49,50,51,52,53,54,55,56,57,
            58,11,60,0,1,2,3,4,0,1,
            2,8,9,10,11,12,0,14,15,16,
            17,0,0,2,2,22,0,24,25,26,
            27,0,29,0,64,14,15,0,1,2,
            0,4,0,1,2,3,0,1,2,28,
            47,11,49,50,51,52,53,54,55,56,
            57,58,0,60,0,1,2,3,4,0,
            28,0,8,9,10,11,12,0,14,15,
            16,17,5,6,7,0,22,66,24,25,
            26,27,30,29,48,69,70,71,72,0,
            79,59,69,70,71,72,0,1,2,0,
            4,47,3,49,50,51,52,53,54,55,
            56,57,58,0,60,0,1,0,3,2,
            5,6,7,8,28,0,0,1,13,30,
            5,6,7,18,19,20,21,11,23,80,
            81,0,43,0,29,28,31,32,33,34,
            35,36,37,38,39,40,41,42,0,44,
            45,46,73,0,1,0,3,0,5,6,
            7,8,5,6,7,60,13,0,0,1,
            3,18,19,20,21,0,23,0,73,2,
            3,78,29,0,31,32,33,34,35,36,
            37,38,39,40,41,42,29,44,45,46,
            69,70,71,72,0,28,0,1,2,3,
            4,28,64,60,8,9,10,11,12,64,
            14,15,16,17,0,0,73,3,22,4,
            24,25,26,27,30,29,59,82,83,84,
            85,86,87,88,89,90,91,64,0,66,
            0,1,2,47,4,49,50,51,52,53,
            54,55,56,57,58,0,1,2,3,4,
            0,0,1,8,9,10,11,12,28,14,
            15,16,17,59,0,0,1,22,4,24,
            25,26,27,0,29,0,11,0,0,0,
            3,3,9,10,0,0,11,2,0,4,
            0,3,47,3,49,50,51,52,53,54,
            55,56,57,58,0,1,29,30,30,5,
            6,7,8,28,63,11,0,13,30,29,
            30,43,18,19,20,21,0,23,2,0,
            4,67,68,0,1,31,32,33,34,35,
            36,37,38,39,40,41,42,59,44,45,
            46,0,1,0,28,0,5,6,7,8,
            5,6,7,47,13,0,1,0,0,18,
            19,20,21,0,23,2,11,0,11,11,
            3,0,31,32,33,34,35,36,37,38,
            39,40,41,42,0,44,45,46,0,1,
            0,28,0,5,6,7,8,30,0,0,
            0,13,4,0,4,2,18,19,20,21,
            43,23,0,0,30,3,3,74,75,31,
            32,33,34,35,36,37,38,39,40,41,
            42,28,44,45,46,0,1,2,3,4,
            5,6,7,8,9,10,0,12,13,14,
            15,16,17,61,62,0,43,22,3,24,
            25,26,27,92,0,67,68,67,68,0,
            0,59,3,0,0,5,6,7,5,6,
            7,0,0,13,3,30,12,0,18,19,
            20,21,0,23,0,3,0,3,29,12,
            65,31,32,33,34,35,36,37,38,39,
            40,41,42,0,59,0,0,2,5,6,
            7,0,30,0,43,0,13,4,0,1,
            48,18,19,20,21,43,23,43,0,0,
            0,77,3,28,31,32,33,34,35,36,
            37,38,39,40,41,42,0,0,1,0,
            0,5,6,7,48,8,0,0,28,13,
            11,0,76,48,18,19,20,21,0,23,
            9,10,0,0,2,0,63,31,32,33,
            34,35,36,37,38,39,40,41,42,0,
            1,2,3,4,65,0,66,8,9,10,
            28,12,13,14,15,16,17,0,0,2,
            0,22,2,24,25,26,27,0,1,2,
            63,4,5,6,7,8,9,10,0,12,
            2,14,15,16,17,0,61,62,28,22,
            0,24,25,26,27,0,78,0,1,2,
            3,4,0,0,65,8,9,10,11,12,
            0,14,15,16,17,0,0,0,0,22,
            30,24,25,26,27,9,10,0,1,2,
            3,4,74,75,0,8,9,10,0,12,
            43,14,15,16,17,11,61,62,0,22,
            48,24,25,26,27,0,1,2,3,4,
            0,1,0,8,9,10,48,12,0,14,
            15,16,17,0,0,0,2,22,63,24,
            25,26,27,0,29,0,1,2,3,4,
            0,0,65,8,9,10,48,12,0,14,
            15,16,17,0,0,1,0,22,0,24,
            25,26,27,0,1,2,3,4,0,11,
            0,8,9,10,0,12,0,14,15,16,
            17,0,1,0,0,22,0,24,25,26,
            27,0,29,0,59,0,1,2,0,4,
            77,61,62,8,9,10,11,12,0,14,
            15,16,17,0,61,62,0,22,0,24,
            25,26,27,0,1,2,0,4,0,0,
            0,8,9,10,11,12,0,14,15,16,
            17,0,0,0,0,22,0,24,25,26,
            27,0,1,2,0,4,0,0,0,8,
            9,10,11,12,0,14,15,16,17,0,
            0,0,0,22,0,24,25,26,27,0,
            1,2,0,4,0,0,0,8,9,10,
            0,12,0,14,15,16,17,0,0,0,
            0,22,0,24,25,26,27,0,1,2,
            0,4,0,0,0,8,9,10,0,12,
            0,14,15,16,17,0,0,0,0,22,
            0,24,25,26,27,0,1,2,0,4,
            0,0,0,8,9,10,0,12,0,14,
            15,16,17,0,0,0,0,22,0,24,
            25,26,27,0,1,2,0,4,0,0,
            0,8,9,10,0,12,0,14,15,16,
            17,0,0,0,0,22,0,24,25,26,
            27,0,1,2,0,4,0,0,0,8,
            9,10,0,12,0,14,15,16,17,0,
            0,0,0,22,0,24,25,26,27,5,
            6,7,0,0,0,0,0,13,5,6,
            7,0,18,19,20,21,13,23,0,0,
            0,18,19,20,21,0,23,0,0,0,
            5,6,7,0,0,0,0,0,13,5,
            6,7,0,18,19,20,21,13,23,0,
            0,0,18,19,20,21,0,23,0,0,
            0,5,6,7,0,0,0,0,0,13,
            5,6,7,0,18,19,20,21,13,23,
            0,0,0,18,19,20,21,0,23,0,
            0,0,5,6,7,0,0,0,0,0,
            13,5,6,7,0,18,19,20,21,13,
            23,0,0,0,18,19,20,21,0,23,
            0,0,0,5,6,7,0,0,0,0,
            0,13,5,6,7,0,18,19,20,21,
            13,23,0,0,0,18,19,20,21,0,
            23,0,0,0,5,6,7,0,0,0,
            0,0,13,5,6,7,0,18,19,20,
            21,13,23,0,0,0,18,19,20,21,
            0,23,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            3093,3078,1224,1062,1902,1,1,1,3075,1649,
            1627,3072,1909,1,1636,1547,1560,1538,1,1,
            1,1,401,1,3105,3106,3107,3108,3093,3103,
            2015,1,1,1,1,1,1,1,1,1,
            1,1,1,3101,1,1,1,914,211,2158,
            1344,2235,840,484,913,950,988,1663,877,1645,
            3186,9,3087,3087,3087,3087,3087,3087,3087,3087,
            3087,3087,3087,3087,3087,3087,3087,3087,3087,3087,
            3087,3087,3087,3087,3087,3087,3087,3087,3087,66,
            3087,1,3087,3087,3087,3087,3087,3087,3087,3087,
            3087,3087,3087,3087,3087,3087,3087,3087,3087,210,
            3087,3087,3087,3087,3087,3087,3087,3087,3087,3087,
            2222,3087,3093,3078,1224,3104,1902,1,1,1,
            3075,1649,1627,3072,1909,1,1636,1547,1560,1538,
            1,1,1,1,401,1,3105,3106,3107,3108,
            186,3103,3093,1,1,1,1,1,1,1,
            1,1,1,1,1,1246,1,1,1,914,
            230,2158,1344,2235,840,484,913,950,988,1663,
            877,2627,3186,3093,951,1224,3104,1902,1,3336,
            2839,3096,1649,1627,3072,1909,3093,1636,1547,1560,
            1538,31,3093,378,1434,401,59,3105,3106,3107,
            3108,3093,3103,61,2111,3118,3119,3093,3336,2839,
            3093,2748,1,3090,2694,3100,1,3336,2839,1938,
            914,3072,2158,1344,2235,840,484,913,950,988,
            1663,877,231,3186,3093,951,1224,3104,1902,72,
            1918,3093,3096,1649,1627,3072,1909,264,1636,1547,
            1560,1538,1,1,1,3093,401,398,3105,3106,
            3107,3108,4431,3103,1414,1456,1403,1333,1263,3093,
            339,3099,1456,1403,1333,1263,276,3336,2694,3093,
            1,914,3102,2158,1344,2235,840,484,913,950,
            988,1663,877,70,3186,3093,1,241,3104,2643,
            1,1,1,1,1918,265,3093,3305,1,2879,
            1,1,1,1,1,1,1,1314,1,2576,
            1962,60,3101,3093,3103,1918,1,1,1,1,
            1,1,1,1,1,1,1,1,235,1,
            1,1,3068,3093,1,42,3104,3093,1,1,
            1,1,3330,3331,3332,3405,1,1,232,3318,
            3104,1,1,1,1,3093,1,1,306,2846,
            3100,2593,3103,3093,1,1,1,1,1,1,
            1,1,1,1,1,1,3103,1,1,1,
            1456,1403,1333,1263,86,1918,3093,951,1224,3104,
            1902,2500,1274,3405,3096,1649,1627,3072,1909,2421,
            1636,1547,1560,1538,3093,3093,305,3100,401,2714,
            3105,3106,3107,3108,2441,3103,3099,2401,2381,2361,
            2341,2321,2281,2301,2261,2241,2208,3393,3093,1685,
            282,3336,2694,914,2748,2158,1344,2235,840,484,
            913,950,988,1663,877,3093,951,1224,3104,1902,
            3093,1,3084,3096,1649,1627,1288,1909,1918,1636,
            1547,1560,1538,3099,48,3093,3305,401,2543,3105,
            3106,3107,3108,51,3103,246,1384,3093,3093,3093,
            3104,3102,459,450,3093,280,250,2846,3093,1,
            3093,3100,914,3104,2158,1344,2235,840,484,913,
            950,988,1663,877,3093,3095,3103,2779,2928,3330,
            3331,3332,3096,1918,3365,317,3093,3283,1658,3103,
            2786,3101,3284,3282,3333,3285,282,3281,2846,3093,
            2748,2228,2151,3093,3318,3287,3292,3291,3289,3290,
            3288,3293,3294,3286,3295,3296,3297,3099,1468,1554,
            1545,3093,3095,62,1918,266,3330,3331,3332,3096,
            3330,3331,3332,1677,3283,3093,3318,3093,1,3284,
            3282,3333,3285,241,3281,2821,1469,3093,317,3072,
            3102,91,3287,3292,3291,3289,3290,3288,3293,3294,
            3286,3295,3296,3297,87,1468,1554,1545,170,3069,
            3093,1918,54,3330,3331,3332,3096,1505,50,3093,
            49,3283,2543,242,2543,2643,3284,3282,3333,3285,
            3101,3281,1,1,2441,3100,214,1386,1316,3287,
            3292,3291,3289,3290,3288,3293,3294,3286,3295,3296,
            3297,1918,1468,1554,1545,3093,3095,1224,3098,1614,
            3330,3331,3332,3096,1649,1627,3093,1909,2461,1636,
            1547,1560,1538,368,1473,3093,214,401,3100,3105,
            3106,3107,3108,1002,68,2228,2151,2228,2151,3093,
            169,3099,3104,267,64,3330,3331,3332,3330,3331,
            3332,3093,3093,3283,3102,2523,355,65,3284,3282,
            3333,3285,3093,3281,1,3102,67,213,3103,355,
            3097,3287,3292,3291,3289,3290,3288,3293,3294,3286,
            3295,3296,3297,170,3099,242,3093,2821,3330,3331,
            3332,3093,1594,1,3101,2,3283,2714,3093,2395,
            558,3284,3282,3333,3285,3101,3281,213,3093,3093,
            3093,469,3098,1918,3287,3292,3291,3289,3290,3288,
            3293,3294,3286,3295,3296,3297,171,3093,3095,246,
            3093,3330,3331,3332,595,3096,3093,1,2500,3283,
            251,53,1246,100,3284,3282,3333,3285,71,3281,
            459,450,283,3093,2910,58,3365,3287,3292,3291,
            3289,3290,3288,3293,3294,3286,3295,3296,3297,1,
            3095,1224,3098,1525,3097,3093,1685,3096,1649,1627,
            1918,1909,2131,1636,1547,1560,1538,3093,63,2039,
            284,401,2910,3105,3106,3107,3108,3093,3095,1224,
            3365,1902,3330,3331,3332,3096,1649,1627,3093,1909,
            2063,1636,1547,1560,1538,57,368,1473,1918,401,
            270,3105,3106,3107,3108,3093,2593,1,3095,1224,
            3102,1902,222,3093,3097,3096,1649,1627,2744,1909,
            3093,1636,1547,1560,1538,1,52,3093,3093,401,
            2981,3105,3106,3107,3108,459,450,3093,3095,1224,
            3098,1902,1386,1316,41,3096,1649,1627,3093,1909,
            3101,1636,1547,1560,1538,2972,368,1473,3093,401,
            2481,3105,3106,3107,3108,3093,3095,1224,3104,1902,
            3093,3372,3093,3096,1649,1627,632,1909,3093,1636,
            1547,1560,1538,69,3093,3093,2087,401,3364,3105,
            3106,3107,3108,3093,3103,3093,3095,1224,3100,1902,
            56,3093,3097,3096,1649,1627,2557,1909,3093,1636,
            1547,1560,1538,55,3093,3397,3093,401,3093,3105,
            3106,3107,3108,1,3081,1224,3104,1902,3093,2972,
            3093,3075,1649,1627,3093,1909,3093,1636,1547,1560,
            1538,231,2842,3093,3093,401,3093,3105,3106,3107,
            3108,3093,3103,3093,3099,3093,3095,1224,3093,1902,
            469,368,1473,3096,1649,1627,2744,1909,3093,1636,
            1547,1560,1538,3093,368,1473,3093,401,3093,3105,
            3106,3107,3108,1,3095,1224,3093,1902,3093,3093,
            3093,3096,1649,1627,2744,1909,3093,1636,1547,1560,
            1538,3093,3093,3093,3093,401,3093,3105,3106,3107,
            3108,3093,3095,1224,3093,1902,3093,3093,3093,3096,
            1649,1627,2972,1909,3093,1636,1547,1560,1538,3093,
            3093,3093,3093,401,3093,3105,3106,3107,3108,3093,
            3095,1294,3093,1902,3093,3093,3093,3096,1649,1627,
            3093,1909,3093,1636,1547,1560,1538,3093,3093,3093,
            3093,401,3093,3105,3106,3107,3108,3093,3095,1224,
            3093,1902,3093,3093,3093,3096,1649,1627,3093,1909,
            3093,1636,1547,1560,1538,3093,3093,3093,3093,401,
            3093,3105,3106,3107,3108,3093,3095,1364,3093,1902,
            3093,3093,3093,3096,1649,1627,3093,1909,3093,1636,
            1547,1560,1538,3093,3093,3093,3093,401,3093,3105,
            3106,3107,3108,1,3081,1224,3093,1902,3093,3093,
            3093,3075,1649,1627,3093,1909,3093,1636,1547,1560,
            1538,3093,3093,3093,3093,401,3093,3105,3106,3107,
            3108,1,3095,1224,3093,1902,3093,3093,3093,3096,
            1649,1627,3093,1909,3093,1636,1547,1560,1538,3093,
            3093,3093,3093,401,175,3105,3106,3107,3108,3330,
            3331,3332,3093,179,3093,3093,3093,3283,3330,3331,
            3332,3093,3284,3282,3333,3285,3283,3281,3093,3093,
            3093,3284,3282,3333,3285,183,3281,3093,3093,3093,
            3330,3331,3332,3093,173,3093,3093,3093,3283,3330,
            3331,3332,3093,3284,3282,3333,3285,3283,3281,3093,
            3093,3093,3284,3282,3333,3285,177,3281,3093,3093,
            3093,3330,3331,3332,3093,181,3093,3093,3093,3283,
            3330,3331,3332,3093,3284,3282,3333,3285,3283,3281,
            3093,3093,3093,3284,3282,3333,3285,182,3281,3093,
            3093,3093,3330,3331,3332,3093,178,3093,3093,3093,
            3283,3330,3331,3332,3093,3284,3282,3333,3285,3283,
            3281,3093,3093,3093,3284,3282,3333,3285,174,3281,
            3093,3093,3093,3330,3331,3332,3093,180,3093,3093,
            3093,3283,3330,3331,3332,3093,3284,3282,3333,3285,
            3283,3281,3093,3093,3093,3284,3282,3333,3285,176,
            3281,3093,3093,3093,3330,3331,3332,3093,172,3093,
            3093,3093,3283,3330,3331,3332,3093,3284,3282,3333,
            3285,3283,3281,3093,3093,3093,3284,3282,3333,3285,
            3093,3281
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            336,365,161,34,336,376,388,498,498,388,
            498,388,372,68,376,388,20,190,20,190,
            388,20,219,388,388,388,388,376,161,499,
            125,68,330,72,438,122,190,190,190,190,
            219,219,388,388,388,161,499,216,68,404,
            438,327,228,68,396,443,304,190,216,33,
            190,190,216,219,81,80,81,473,34,132,
            68,443,226,55,55,55,55,55,55,55,
            55,55,85,147,280,277,284,282,290,288,
            292,291,294,293,266,396,72,122,184,445,
            307,262,184,246,216,367,216,81,216,55,
            471,473,68,131,302,55,302,70,70,70,
            40,53,126,126,471,126,88,125,70,327,
            445,226,147,147,470,470,1,55,404,404,
            297,501,55,55,55,55,55,55,55,55,
            55,55,55,55,55,55,55,55,55,55,
            55,55,55,55,55,55,55,55,55,55,
            55,55,184,396,404,399,403,403,184,262,
            304,125,55,299,216,129,41,302,41,55,
            145,55,188,126,126,55,55,81,408,404,
            404,403,262,228,438,401,440,277,277,282,
            282,282,282,280,280,288,284,284,291,290,
            302,293,292,396,438,440,445,471,307,55,
            262,246,367,55,41,404,53,53,126,404,
            70,404,224,228,471,55,407,265,499,55,
            226,501,443,404,411,55,399,411,262,262,
            41,1,126,1,126,53,41,55,40,262,
            226,401,445,404,41,404,1,41,404,1,
            1,126,404,130,81,404,41,41,404,41,
            41,404,41,404,1,126,41,224,41,41,
            41,41,404,41
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            2,24,25,26,27,1,8,14,15,12,
            4,9,10,16,17,22,59,3,0,28,
            30,18,5,19,20,21,6,13,23,7,
            59,11,48,2,4,1,29,3,0,60,
            50,52,58,53,47,54,55,51,49,57,
            56,11,29,3,24,25,26,27,8,14,
            15,12,9,10,16,17,22,4,1,2,
            0,11,28,2,64,30,29,3,0,64,
            43,3,30,0,65,59,43,48,66,79,
            14,15,12,4,9,10,67,68,61,62,
            69,70,71,72,74,75,76,77,78,80,
            81,82,83,84,85,86,87,88,89,90,
            91,64,28,2,30,29,3,0,73,92,
            43,56,55,51,49,57,53,47,54,58,
            50,52,60,11,29,3,14,15,12,4,
            9,10,16,17,22,2,24,25,26,27,
            1,8,44,45,46,20,23,19,13,18,
            21,39,31,36,34,35,33,32,37,38,
            40,41,42,5,6,7,0,47,0,18,
            31,5,32,44,19,33,20,34,35,21,
            6,36,37,13,45,23,46,38,39,7,
            40,41,42,1,8,43,3,0,30,1,
            43,3,0,43,3,28,66,2,24,25,
            26,27,1,8,14,15,12,4,9,10,
            16,17,22,11,0,14,15,12,4,9,
            10,16,17,22,2,1,8,24,25,26,
            27,65,3,0,11,64,82,83,84,85,
            86,88,87,89,90,91,4,67,68,9,
            10,62,61,69,70,71,72,74,75,12,
            76,77,78,43,80,81,65,59,30,29,
            3,48,0,65,3,13,5,6,7,14,
            15,12,4,9,10,16,17,22,2,1,
            8,24,25,26,27,0,48,28,2,30,
            59,29,3,64,0,18,31,5,32,44,
            19,33,20,34,35,21,6,36,37,13,
            45,23,46,38,39,7,40,41,42,1,
            8,29,3,60,73,0,4,48,1,2,
            0,8,44,45,46,39,31,36,34,35,
            33,32,37,38,40,41,42,48,29,23,
            19,13,18,21,20,5,6,7,4,1,
            28,2,30,59,3,0,64,28,66,0,
            18,31,5,32,44,19,33,20,34,35,
            21,6,36,37,13,45,23,46,38,39,
            7,40,41,42,1,8,63,4,0,4,
            2,28,59,3,18,31,5,32,44,19,
            33,20,34,35,21,6,36,37,13,45,
            23,46,38,39,7,40,41,42,63,8,
            1,0,18,31,5,32,44,19,33,20,
            34,35,21,6,36,37,13,45,23,46,
            38,39,7,40,41,42,8,1,11,0,
            59,3,4,2,28,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            72,102,59,65,103,62,63,47,47,63,
            40,63,95,68,98,99,102,17,102,17,
            99,102,17,99,63,63,63,62,17,135,
            66,119,102,102,117,49,17,107,17,107,
            17,40,99,99,99,125,102,45,119,10,
            117,49,38,122,17,83,51,107,45,65,
            129,107,45,40,45,102,102,133,65,1,
            88,83,17,38,38,38,38,38,38,38,
            38,38,102,30,102,102,102,102,102,102,
            102,102,102,102,102,17,102,49,113,79,
            27,53,113,52,45,119,45,45,45,38,
            40,59,119,12,102,38,102,102,102,102,
            19,37,66,66,102,66,102,102,102,49,
            16,27,30,30,7,7,9,38,10,10,
            102,92,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,38,38,38,
            38,38,38,38,38,38,38,38,38,38,
            38,38,113,101,10,86,102,10,113,53,
            55,66,38,102,45,102,24,102,24,38,
            34,38,102,66,66,38,38,45,76,10,
            10,10,53,38,117,49,91,102,102,102,
            102,102,102,102,102,102,102,102,102,102,
            102,102,102,101,117,90,16,102,56,38,
            53,52,119,38,24,10,37,37,66,10,
            102,10,42,38,102,38,111,102,102,38,
            17,93,83,10,115,38,87,115,53,53,
            24,9,66,9,66,37,24,38,25,53,
            27,49,16,10,24,10,9,24,10,9,
            9,66,10,102,45,10,24,24,10,24,
            24,10,24,10,9,66,24,42,24,24,
            24,24,10,24
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            14,37,4,29,90,0,1,0,4,22,
            0,29,4,41,75,37,14,0,4,14,
            29,60,0,27,29,26,4,14,0,14,
            49,4,0,14,37,50,20,4,0,65,
            0,14,4,68,41,0,80,0,42,0,
            14,4,43,0,43,4,23,0,72,71,
            70,51,47,0,14,20,0,14,46,94,
            0,97,37,14,0,96,95,0,93,14,
            37,0,14,22,0,14,55,44,0,44,
            22,14,55,0,70,71,72,51,39,40,
            23,0,37,14,86,0,64,14,49,0,
            85,0,66,0,14,37,53,0,44,14,
            0,46,84,0,37,14,98,0,14,49,
            57,0,37,50,14,24,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            85,2,99,9,52,68,80,98,10,11,
            3,8,73,6,7,12,13,48,59,64,
            67,72,76,86,87,88,89,1,93,42,
            51,56,60,65,66,70,71,78,79,82,
            83,84,92,58,74,77,81,29,49,50,
            53,54,55,61,62,63,69,75,91,100,
            16,17,30,31,90,4,14,15,18,19,
            20,21,47,22,23,24,25,26,5,27,
            28,32,33,34,35,36,37,38,39,40,
            41,57,43,44,45,94,95,96,97
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            101,0,0,107,112,113,114,115,116,117,
            118,119,120,0,121,122,123,124,111,105,
            126,103,144,132,125,129,130,0,131,0,
            0,0,0,0,0,0,136,106,143,145,
            104,165,102,162,0,164,142,151,156,135,
            146,152,163,173,175,127,155,166,172,128,
            138,150,0,154,159,171,174,176,109,147,
            148,149,161,110,134,137,139,140,141,153,
            158,0,160,168,179,181,0,0,108,133,
            157,167,169,170,177,178,180,182,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            167,167,38,44,70,95,101,70,134,134,
            24,54,62,76,107,112,76,15,31,50,
            85,146,163,187,191,15,150,1,10,35,
            59,67,117,122,195,89,157,125,157,157,
            6,81
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            22,19,4,4,22,22,22,19,140,143,
            29,4,29,22,22,22,19,22,29,4,
            83,22,29,29,4,19,154,4,13,29,
            4,29,120,120,29,92,160,128,181,174,
            8,83
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            4,4,42,42,71,70,70,71,26,27,
            55,42,46,71,70,70,71,52,55,42,
            57,24,5,4,4,52,18,85,68,55,
            42,44,78,77,3,57,6,35,4,4,
            95,57
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            43,30,65,65,43,43,43,30,92,92,
            59,65,59,43,43,43,30,43,59,65,
            29,43,59,59,65,30,48,65,24,59,
            65,59,23,23,59,1,59,47,59,59,
            64,29
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            4,4,121,121,171,171,171,171,85,85,
            127,121,159,171,171,171,171,108,127,121,
            115,134,4,4,4,108,34,1,110,127,
            121,159,172,172,4,115,7,85,4,4,
            2,115
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            155,28,0,102,0,195,0,31,0,194,
            113,0,152,0,173,113,11,0,42,104,
            0,104,0,157,113,2,154,0,103,0,
            157,113,2,0,166,2,0,118,13,165,
            113,28,0,118,165,113,13,28,0,118,
            13,28,0,118,165,113,28,0,118,28,
            0,157,113,2,143,0,147,2,0,181,
            113,11,164,44,0,181,113,11,44,0,
            148,0,105,0,190,113,148,0,113,148,
            0,157,105,0,162,113,11,179,46,0,
            162,113,11,179,45,0,162,113,11,46,
            0,162,113,11,45,0,170,146,0,142,
            0,169,146,0,159,53,0,81,2,106,
            103,105,0,125,121,137,2,56,0,57,
            129,0,57,130,0,189,11,113,0,137,
            81,116,0,29,124,0,168,2,0,103,
            113,0,168,2,22,0,173,113,11,121,
            168,2,0,103,3,0,110,42,104,0,
            103,3,0,110,104,0,188,2,103,0,
            137,28,103,0,137,2,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            2752,2634,0,1636,1547,401,1614,2614,2593,2576,
            1246,469,1386,1316,355,1473,368,1456,1403,1333,
            1263,2543,2228,2151,459,450,1525,1909,1902,1649,
            1627,1560,1538,1594,1879,1855,1831,1807,1574,2087,
            1783,1759,1735,2557,2523,2500,2188,1505,1711,1687,
            2481,2461,2164,2063,2441,2039,1434,2015,1414,1986,
            2421,2401,2381,2361,2341,2321,2301,2281,2261,2241,
            2208,1962,1938,378,1364,1294,1485,1663,1344,1274,
            2131,1224,1918,2111,1187,1150,1113,1076,1039,1002,
            965,928,891,854,817,780,743,521,706,669,
            632,595,558,484,408,317,0,2188,2111,1594,
            1574,1505,1485,0,2801,2952,2791,2750,2733,0,
            2869,2863,2820,2633,2160,1916,2847,2861,2694,2846,
            2658,2960,0,1187,1150,1113,1076,1039,1002,965,
            928,891,854,817,780,743,521,706,669,632,
            595,558,484,408,317,2954,2626,0,2847,2786,
            2694,2658,2727,2678,2475,2912,2779,2839,2623,0,
            2695,2612,2609,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,187,113,136,196,150,169,46,45,170,
            44,171,146,113,146,146,179,11,179,11,
            146,164,11,146,171,170,169,150,193,191,
            175,2,147,145,113,143,11,113,11,113,
            11,113,146,146,146,113,113,11,30,147,
            113,143,64,152,4,2,28,113,162,148,
            163,113,162,113,181,164,182,197,136,11,
            152,2,11,22,17,16,10,9,4,12,
            15,14,103,2,107,106,109,108,111,110,
            114,112,116,115,104,4,145,143,113,113,
            13,118,113,4,162,113,162,181,30,64,
            30,113,113,189,52,50,128,58,54,47,
            53,57,49,51,55,124,1,120,56,143,
            113,113,2,2,79,66,2,28,168,137,
            120,148,10,9,68,67,4,72,71,70,
            69,61,62,12,75,74,77,76,81,80,
            78,91,90,89,87,88,86,85,84,83,
            82,64,113,165,157,136,158,192,113,118,
            165,190,48,147,30,3,48,155,48,2,
            2,2,159,137,1,30,2,173,113,168,
            168,188,137,121,113,154,2,106,106,108,
            108,108,108,107,107,110,109,109,112,111,
            137,115,114,165,113,2,30,30,165,13,
            118,4,30,48,48,137,149,119,137,137,
            47,137,30,194,66,28,195,121,121,30,
            11,152,2,166,113,48,152,113,118,118,
            121,119,137,119,137,119,121,2,121,155,
            113,154,113,157,121,137,119,121,137,119,
            119,137,137,125,173,157,121,121,137,121,
            121,137,121,137,119,121,92,30,121,121,
            121,121,137,121
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "#",
            "##",
            "nl",
            "$empty",
            "EOF_TOKEN",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "identifier",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "Invalid",
            "PlaceMarker",
            "Parameter",
            "DisabledMacroName",
            "Completion",
            "EndOfCompletion",
            "ERROR_TOKEN",
            "ident",
            "]",
            ")",
            "}",
            ";",
            "expression",
            "postfix_expression",
            "argument_expression_list",
            "type_name",
            "initializer_list",
            "assignment_expression",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "AND_expression",
            "exclusive_OR_expression",
            "inclusive_OR_expression",
            "logical_AND_expression",
            "logical_OR_expression",
            "conditional_expression",
            "expression_in_statement",
            "expression_list",
            "constant_expression",
            "statement",
            "matched_statement",
            "unmatched_statement",
            "label_identifier",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifiers",
            "storage_class_specifier",
            "type_qualifier",
            "function_specifier",
            "type_specifier",
            "struct_or_union_specifier",
            "enum_specifier",
            "typedef_name",
            "init_declarator",
            "declarator",
            "initializer",
            "struct_or_union_identifier",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "struct_declarator",
            "enum_identifier",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer",
            "function_direct_declarator",
            "array_modifier",
            "parameter_type_list",
            "function_declarator",
            "knr_direct_declarator",
            "identifier_list",
            "knr_function_declarator",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "abstract_declarator",
            "direct_abstract_declarator",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final static int
           ERROR_SYMBOL      = 60,
           SCOPE_UBOUND      = 41,
           SCOPE_SIZE        = 42,
           MAX_NAME_LENGTH   = 38;

    public final int getErrorSymbol() { return ERROR_SYMBOL; }
    public final int getScopeUbound() { return SCOPE_UBOUND; }
    public final int getScopeSize() { return SCOPE_SIZE; }
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int
           NUM_STATES        = 304,
           NT_OFFSET         = 99,
           LA_STATE_OFFSET   = 3409,
           MAX_LA            = 2147483647,
           NUM_RULES         = 316,
           NUM_NONTERMINALS  = 99,
           NUM_SYMBOLS       = 198,
           SEGMENT_SIZE      = 8192,
           START_STATE       = 2624,
           IDENTIFIER_SYMBOL = 0,
           EOFT_SYMBOL       = 73,
           EOLT_SYMBOL       = 73,
           ACCEPT_ACTION     = 3068,
           ERROR_ACTION      = 3093;

    public final static boolean BACKTRACK = true;

    public final int getNumStates() { return NUM_STATES; }
    public final int getNtOffset() { return NT_OFFSET; }
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }
    public final int getMaxLa() { return MAX_LA; }
    public final int getNumRules() { return NUM_RULES; }
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }
    public final int getNumSymbols() { return NUM_SYMBOLS; }
    public final int getSegmentSize() { return SEGMENT_SIZE; }
    public final int getStartState() { return START_STATE; }
    public final int getStartSymbol() { return lhs[0]; }
    public final int getIdentifierSymbol() { return IDENTIFIER_SYMBOL; }
    public final int getEoftSymbol() { return EOFT_SYMBOL; }
    public final int getEoltSymbol() { return EOLT_SYMBOL; }
    public final int getAcceptAction() { return ACCEPT_ACTION; }
    public final int getErrorAction() { return ERROR_ACTION; }
    public final boolean isValidForParser() { return isValidForParser; }
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
